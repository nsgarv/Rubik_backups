

HI-TECH Software dsPIC Macro Assembler V9.60PL2                            Page 1
                                                       Wed Jun 19 09:55:57 2013

     1  000000                     pcl	equ	46
     2  000000                     pch	equ	48
     3  000000                     sr	equ	66
     4  000000                     carry	equ	0
     5  000000                     zerobit	equ	1
     6                           	psect	neardata,class=NEARXDATA,space=1,reloc=2
     7                           	psect	neardata
     8  001138                     align 2
     9  001138                     _RFCycleSPS:
    10                           	
    11  001138                     	ds	2
    12                           	psect	nearidata,class=NEARCODE,reloc=4,delta=1,
                                 width=2
    13                           	psect	nearidata
    14  01FED0                     align 4
    15                           
    16  01FED0  00000000           	dw	(0)
    17                           	psect	neardata
    18  00113A                     align 2
    19  00113A                     _RFCycleSPSPreset:
    20                           	
    21  00113A                     	ds	2
    22                           	psect	nearidata
    23  01FED4                     align 4
    24                           
    25  01FED4  00000000           	dw	(0)
    26                           	psect	neardata
    27  00113C                     align 2
    28  00113C                     _PostStartupRFCycleAdjusted:
    29                           	
    30  00113C                     	ds	2
    31                           	psect	nearidata
    32  01FED8                     align 4
    33                           
    34  01FED8  00000001           	dw	(1)
    35                           	psect	neardata
    36  00113E                     align 2
    37  00113E                     _CycleButtonReleased:
    38                           	
    39  00113E                     	ds	2
    40                           	psect	nearidata
    41  01FEDC                     align 4
    42                           
    43  01FEDC  00000001           	dw	(1)
    44                           	psect	neardata
    45  001140                     align 2
    46  001140                     _SettingsMode:
    47                           	
    48  001140                     	ds	2
    49                           	psect	nearidata
    50  01FEE0                     align 4
    51                           
    52  01FEE0  00000001           	dw	(1)
    53                           	psect	neardata
    54  001142                     align 2
    55  001142                     _Screen:
    56                           	
    57  001142                     	ds	1
    58                           	psect	nearidata
    59  01FEE4                     align 4
    60                           
    61  01FEE4  00                 	db	(0)
    62                           	psect	neardata
    63  001143                     align 2
    64  001144                     _ds:
    65                           	
    66  001144                     	ds	2
    67                           	psect	nearidata
    68  01FEE5                     align 4
    69                           
    70  01FEE8  00000000           	dw	(0)
    71                           	psect	neardata
    72                           	
    73  001146                     	ds	2
    74                           	psect	nearidata
    75                           
    76  01FEEC  00000000           	dw	(0)
    77                           	psect	neardata
    78                           	
    79  001148                     	ds	4
    80                           	psect	nearidata
    81                           
    82  01FEF0  00000000 00000000  	ddw	(0)
    83                           	psect	neardata
    84                           	
    85  00114C                     	ds	2
    86                           	psect	nearidata
    87                           
    88  01FEF8  00000000           	dw	(0)
    89                           	psect	neardata
    90                           	
    91  00114E                     	ds	2
    92                           	psect	nearidata
    93                           
    94  01FEFC  00000000           	dw	(0)
    95                           	psect	neardata
    96                           	
    97  001150                     	ds	2
    98                           	psect	nearidata
    99                           
   100  01FF00  00000000           	dw	(0)
   101                           	psect	neardata
   102                           	
   103  001152                     	ds	2
   104                           	psect	nearidata
   105                           
   106  01FF04  00000000           	dw	(0)
   107                           	psect	neardata
   108                           	
   109  001154                     	ds	2
   110                           	psect	nearidata
   111                           
   112  01FF08  00000064           	dw	(100)
   113                           	psect	neardata
   114                           	
   115  001156                     	ds	2
   116                           	psect	nearidata
   117                           
   118  01FF0C  00000000           	dw	(0)
   119                           	psect	neardata
   120                           	
   121  001158                     	ds	2
   122                           	psect	nearidata
   123                           
   124  01FF10  00000000           	dw	(0)
   125                           	psect	neardata
   126                           	
   127  00115A                     	ds	2
   128                           	psect	nearidata
   129                           
   130  01FF14  00000000           	dw	(0)
   131                           	psect	neardata
   132                           	
   133  00115C                     	ds	2
   134                           	psect	nearidata
   135                           
   136  01FF18  00000000           	dw	(0)
   137                           	psect	neardata
   138                           	
   139  00115E                     	ds	2
   140                           	psect	nearidata
   141                           
   142  01FF1C  00000000           	dw	(0)
   143                           	psect	neardata
   144                           	
   145  001160                     	ds	2
   146                           	psect	nearidata
   147                           
   148  01FF20  00000000           	dw	(0)
   149                           	psect	neardata
   150                           	
   151  001162                     	ds	2
   152                           	psect	nearidata
   153                           
   154  01FF24  00000000           	dw	(0)
   155                           	psect	neardata
   156                           	
   157  001164                     	ds	2
   158                           	psect	nearidata
   159                           
   160  01FF28  00000000           	dw	(0)
   161                           	psect	neardata
   162                           	
   163  001166                     	ds	2
   164                           	psect	nearidata
   165                           
   166  01FF2C  00000000           	dw	(0)
   167                           	psect	neardata
   168                           	
   169  001168                     	ds	2
   170                           	psect	nearidata
   171                           
   172  01FF30  00000000           	dw	(0)
   173                           	psect	neardata
   174                           	
   175  00116A                     	ds	2
   176                           	psect	nearidata
   177                           
   178  01FF34  00000000           	dw	(0)
   179                           	psect	neardata
   180                           	
   181  00116C                     	ds	2
   182                           	psect	nearidata
   183                           
   184  01FF38  00000000           	dw	(0)
   185                           	psect	neardata
   186                           	
   187  00116E                     	ds	4
   188                           	psect	nearidata
   189                           
   190  01FF3C  00000000 00000000  	ddw	(0)
   191                           	psect	neardata
   192                           	
   193  001172                     	ds	4
   194                           	psect	nearidata
   195                           
   196  01FF44  00000000 00000000  	ddw	(0)
   197                           	psect	neardata
   198                           	
   199  001176                     	ds	4
   200                           	psect	nearidata
   201                           
   202  01FF4C  00000000 00000000  	ddw	(0)
   203                           	psect	neardata
   204                           	
   205  00117A                     	ds	2
   206                           	psect	nearidata
   207                           
   208  01FF54  00000000           	dw	(0)
   209                           	psect	neardata
   210                           	
   211  00117C                     	ds	2
   212                           	psect	nearidata
   213                           
   214  01FF58  00000000           	dw	(0)
   215                           	psect	neardata
   216                           	
   217  00117E                     	ds	4
   218                           	psect	nearidata
   219                           
   220  01FF5C  00000000 00000000  	ddw	(0)
   221                           	psect	neardata
   222                           	
   223  001182                     	ds	2
   224                           	psect	nearidata
   225                           
   226  01FF64  00000000           	dw	(0)
   227                           	psect	neardata
   228                           	
   229  001184                     	ds	2
   230                           	psect	nearidata
   231                           
   232  01FF68  000001F4           	dw	(500)
   233                           	psect	neardata
   234                           	
   235  001186                     	ds	2
   236                           	psect	nearidata
   237                           
   238  01FF6C  00000001           	dw	(1)
   239                           	psect	neardata
   240                           	
   241  001188                     	ds	2
   242                           	psect	nearidata
   243                           
   244  01FF70  000001F4           	dw	(500)
   245                           	psect	neardata
   246  00118A                     	ds	18
   247                           	psect	nearidata
   248  01FF74  00000000           	dw	0
   249  01FF78  00000000           	dw	0
   250  01FF7C  00000000           	dw	0
   251  01FF80  00000000           	dw	0
   252  01FF84  00000000           	dw	0
   253  01FF88  00000000           	dw	0
   254  01FF8C  00000000           	dw	0
   255  01FF90  00000000           	dw	0
   256  01FF94  00000000           	dw	0
   257                           	psect	neardata
   258  00119C                     align 2
   259  00119C                     _es:
   260                           	
   261  00119C                     	ds	1
   262                           	psect	nearidata
   263  01FF98                     align 4
   264                           
   265  01FF98  44                 	db	(68)
   266                           	psect	neardata
   267                           	
   268  00119D                     	ds	1
   269                           	psect	nearidata
   270                           
   271  01FF99  43 00 00           	db	(67)
   272                           	psect	neardata
   273                           	
   274  00119E                     	ds	1
   275                           	psect	nearidata
   276                           
   277  01FF9C  43                 	db	(67)
   278                           	psect	neardata
   279                           	
   280  00119F                     	ds	1
   281                           	psect	nearidata
   282                           
   283  01FF9D  2D 00 00           	db	(45)
   284                           	psect	neardata
   285                           	
   286  0011A0                     	ds	1
   287                           	psect	nearidata
   288                           
   289  01FFA0  30                 	db	(48)
   290                           	psect	neardata
   291                           	
   292  0011A1                     	ds	1
   293                           	psect	nearidata
   294                           
   295  01FFA1  30 00 00           	db	(48)
   296                           	psect	neardata
   297                           	
   298  0011A2                     	ds	1
   299                           	psect	nearidata
   300                           
   301  01FFA4  31                 	db	(49)
   302                           	psect	neardata
   303                           	
   304  0011A3                     	ds	1
   305                           	psect	nearidata
   306                           
   307  01FFA5  00 00 00           	db	(0)
   308                           	psect	neardata
   309                           	
   310  0011A4                     	ds	1
   311                           	psect	nearidata
   312                           
   313  01FFA8  30                 	db	(48)
   314                           	psect	neardata
   315                           	
   316  0011A5                     	ds	1
   317                           	psect	nearidata
   318                           
   319  01FFA9  00 00 00           	db	(0)
   320                           	psect	neardata
   321                           	
   322  0011A6                     	ds	1
   323                           	psect	nearidata
   324                           
   325  01FFAC  30                 	db	(48)
   326                           	psect	neardata
   327                           	
   328  0011A7                     	ds	1
   329                           	psect	nearidata
   330                           
   331  01FFAD  30 00 00           	db	(48)
   332                           	psect	neardata
   333                           	
   334  0011A8                     	ds	1
   335                           	psect	nearidata
   336                           
   337  01FFB0  30                 	db	(48)
   338                           	psect	neardata
   339                           	
   340  0011A9                     	ds	1
   341                           	psect	nearidata
   342                           
   343  01FFB1  30 00 00           	db	(48)
   344                           	psect	neardata
   345                           	
   346  0011AA                     	ds	1
   347                           	psect	nearidata
   348                           
   349  01FFB4  30                 	db	(48)
   350                           	psect	neardata
   351                           	
   352  0011AB                     	ds	1
   353                           	psect	nearidata
   354                           
   355  01FFB5  00 00 00           	db	(0)
   356                           	psect	neardata
   357                           	
   358  0011AC                     	ds	1
   359                           	psect	nearidata
   360                           
   361  01FFB8  30                 	db	(48)
   362                           	psect	neardata
   363                           	
   364  0011AD                     	ds	1
   365                           	psect	nearidata
   366                           
   367  01FFB9  30 00 00           	db	(48)
   368                           	psect	neardata
   369                           	
   370  0011AE                     	ds	1
   371                           	psect	nearidata
   372                           
   373  01FFBC  30                 	db	(48)
   374                           	psect	neardata
   375                           	
   376  0011AF                     	ds	1
   377                           	psect	nearidata
   378                           
   379  01FFBD  00 00 00           	db	(0)
   380                           	psect	neardata
   381                           	
   382  0011B0                     	ds	2
   383                           	psect	nearidata
   384                           
   385  01FFC0  000000FA           	dw	(250)
   386                           	psect	neardata
   387                           	
   388  0011B2                     	ds	2
   389                           	psect	nearidata
   390                           
   391  01FFC4  00000834           	dw	(2100)
   392                           	psect	neardata
   393                           	
   394  0011B4                     	ds	2
   395                           	psect	nearidata
   396                           
   397  01FFC8  0000A907           	dw	(43271)
   398                           	psect	neardata
   399                           	
   400  0011B6                     	ds	2
   401                           	psect	nearidata
   402                           
   403  01FFCC  000044A7           	dw	(17575)
   404                           	psect	neardata
   405                           	
   406  0011B8                     	ds	2
   407                           	psect	nearidata
   408                           
   409  01FFD0  00000370           	dw	(880)
   410                           	psect	neardata
   411                           	
   412  0011BA                     	ds	2
   413                           	psect	nearidata
   414                           
   415  01FFD4  00000000           	dw	(0)
   416                           	global	_main
   417                           	signat	_main,26
   418                           	psect	text,class=CODE,delta=2,reloc=4
   419                           	psect	text
   420                           	file	"W:\DFineSRC\Rubik_main\X095XC\Source\DFMA
                                 IN.C"
   421                           	line	310
   422  009EA8                     _main:
   423  009EA8  0004A0AA           	goto	f33371
              00000000           
   424  009EAC                     f33370:
   425                           
   426                           ;DFMAIN.C: 309: int main()
   427                           
   428                           ;DFMAIN.C: 310: {
   429                           
   430                           ;DFMAIN.C: 311: unsigned int i, code;
   431                           
   432                           ;DFMAIN.C: 313: hw_init();
   433                           
   434                           	global	_hw_init
   435                           	signat	_hw_init,26
   436                           	line	313
   437  009EAC  0002CFB8           	call	(_hw_init)
              00000000           
   438                           ;DFMAIN.C: 314: (LATG15 = !(LATG15 = 0));
   439                           
   440                           	line	314
   441  009EB0  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
   442  009EB2  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
   443  009EB4  00320002           	bra	z,u11
   444  009EB6  00049EBE           	goto	u10
              00000000           
   445  009EBA                     u11:
   446  009EBA  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
   447  009EBC  00370001           	bra	u22
   448  009EBE                     u10:
   449  009EBE  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
   450  009EC0                     u22:
   451                           ;DFMAIN.C: 318: write_LEDs(0x01 | 0x08 | 0x02 | 
                                 0x04);
   452                           
   453                           	global	_write_LEDs
   454                           	signat	_write_LEDs,4154
   455                           	line	318
   456  009EC0  002000F0           	mov.w	#0Fh,w0
   457  009EC2  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
              00000000           
   458                           ;DFMAIN.C: 319: tone(0x10);
   459                           
   460                           	global	_tone
   461                           	signat	_tone,4154
   462                           	line	319
   463  009EC6  00200100           	mov.w	#010h,w0
   464  009EC8  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
   465                           ;DFMAIN.C: 323: write_DAC(0, RFDAC_CTRL_RF_MOTOR
                                 _AND_RELAY_A);
   466                           
   467                           	global	_write_DAC
   468                           	signat	_write_DAC,8250
   469                           	line	323
   470  009ECC  00200002           	mov.w	#0,w2
   471  009ECE  00200000           	mov.w	#0,w0
   472  009ED0  0002CB1E           	call	(_write_DAC)	;0 bytes adjustment
              00000000           
   473                           ;DFMAIN.C: 327: if (!gDFDisplyInit())
   474                           
   475                           	global	_gDFDisplyInit
   476                           	signat	_gDFDisplyInit,26
   477                           	line	327
   478  009ED4  000282AC           	call	(_gDFDisplyInit)
              00000000           
   479  009ED8  00E00000           	cp0.w	w0
   480  009EDA  003A0002           	bra	nz,u31
   481  009EDC  00049EE4           	goto	u30
              00000000           
   482  009EE0                     u31:
   483  009EE0  00049EEE           	goto	l236
              00000000           
   484  009EE4                     u30:
   485                           ;DFMAIN.C: 328: fault_routine(WARNING_SEVERITY, 
                                 72, "Display Init");
   486                           
   487                           	global	_fault_routine
   488                           	signat	_fault_routine,12346
   489                           	line	328
   490  009EE4  00285314           	mov.w	#u19,w4
   491  009EE6  00200482           	mov.w	#048h,w2
   492  009EE8  00200000           	mov.w	#0,w0
   493  009EEA  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   494  009EEE                     l236:
   495                           ;DFMAIN.C: 346: if (code = ram_test())
   496                           
   497                           	global	_ram_test
   498                           	signat	_ram_test,26
   499                           	line	346
   500  009EEE  0002D6B8           	call	(_ram_test)
              00000000           
   501  009EF2  002FFFC6           	mov.w	#((0+f33376+2)-0),w6
   502  009EF4  00478306           	add.w	sp,w6,w6
   503  009EF6  00780B00           	mov.w	w0,[w6]
   504  009EF8  00E00016           	cp0.w	[w6]
   505  009EFA  00320002           	bra	z,u41
   506  009EFC  00049F04           	goto	u40
              00000000           
   507  009F00                     u41:
   508  009F00  00049F0E           	goto	l237
              00000000           
   509  009F04                     u40:
   510                           ;DFMAIN.C: 347: fault_routine(WARNING_SEVERITY, 
                                 code, "RAM");
   511                           
   512                           	line	347
   513  009F04  00285DD4           	mov.w	#u29,w4
   514  009F06  0097B96F           	mov.w	[sp+((0+f33376+2)-0)],w2
   515  009F08  00200000           	mov.w	#0,w0
   516  009F0A  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   517  009F0E                     l237:
   518                           ;DFMAIN.C: 360: tone(0x00);
   519                           
   520                           	line	360
   521  009F0E  00200000           	mov.w	#0,w0
   522  009F10  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
   523                           ;DFMAIN.C: 361: for (i = 0; i < (5*50); i++)
   524                           
   525                           	line	361
   526  009F14  00200007           	mov.w	#0,w7
   527  009F16  002FFFA6           	mov.w	#((0+f33376+0)-0),w6
   528  009F18  00478306           	add.w	sp,w6,w6
   529  009F1A  00780B07           	mov.w	w7,[w6]
   530  009F1C  00200FA7           	mov.w	#0FAh,w7
   531  009F1E  002FFFA6           	mov.w	#((0+f33376+0)-0),w6
   532  009F20  00478306           	add.w	sp,w6,w6
   533  009F22  00780316           	mov.w	[w6],w6
   534  009F24  00E13007           	cp.w	w6, w7
   535  009F26  00390002           	bra	ltu,u51
   536  009F28  00049F30           	goto	u50
              00000000           
   537  009F2C                     u51:
   538  009F2C  00049F34           	goto	l238
              00000000           
   539  009F30                     u50:
   540  009F30  00049F68           	goto	l239
              00000000           
   541                           	line	362
   542  009F34                     l238:
   543                           ;DFMAIN.C: 362: {
   544                           
   545                           ;DFMAIN.C: 363: wait_for_20ms();
   546                           
   547                           	global	_wait_for_20ms
   548                           	signat	_wait_for_20ms,26
   549                           	line	363
   550  009F34  0002D368           	call	(_wait_for_20ms)
              00000000           
   551                           ;DFMAIN.C: 364: tone(0x11);
   552                           
   553                           	line	364
   554  009F38  00200110           	mov.w	#011h,w0
   555  009F3A  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
   556                           ;DFMAIN.C: 365: (LATG15 = !(LATG15 = 0));
   557                           
   558                           	line	365
   559  009F3E  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
   560  009F40  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
   561  009F42  00320002           	bra	z,u61
   562  009F44  00049F4C           	goto	u60
              00000000           
   563  009F48                     u61:
   564  009F48  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
   565  009F4A  00370001           	bra	u72
   566  009F4C                     u60:
   567  009F4C  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
   568  009F4E                     u72:
   569                           	line	361
   570  009F4E  0097BB5F           	mov.w	[sp+((0+f33376+0)-0)],w6
   571  009F50  00B00016           	add.w	#1,w6
   572  009F52  009FBFD6           	mov.w	w6,[sp+((0+f33376+0)-0)]
   573  009F54  00200FA7           	mov.w	#0FAh,w7
   574  009F56  002FFFA6           	mov.w	#((0+f33376+0)-0),w6
   575  009F58  00478306           	add.w	sp,w6,w6
   576  009F5A  00780316           	mov.w	[w6],w6
   577  009F5C  00E13007           	cp.w	w6, w7
   578  009F5E  00390002           	bra	ltu,u81
   579  009F60  00049F68           	goto	u80
              00000000           
   580  009F64                     u81:
   581  009F64  00049F34           	goto	l238
              00000000           
   582  009F68                     u80:
   583  009F68                     l239:
   584                           ;DFMAIN.C: 366: }
   585                           
   586                           ;DFMAIN.C: 370: write_LEDs(0x01);
   587                           
   588                           	line	370
   589  009F68  00200010           	mov.w	#01h,w0
   590  009F6A  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
              00000000           
   591                           ;DFMAIN.C: 374: if (read_eeprom(0, (unsigned cha
                                 r *)(&es), sizeof(es)) < 0
   592                           
   593                           ;DFMAIN.C: 375: || crcchk((unsigned char *)(&es)
                                 , sizeof(es)) == 0)
   594                           
   595                           	global	_read_eeprom
   596                           	signat	_read_eeprom,12346
   597                           	global	_crcchk
   598                           	signat	_crcchk,8250
   599                           	line	375
   600  009F6E  00200204           	mov.w	#020h,w4
   601  009F70  002119C6           	mov.w	#_es,w6
   602  009F72  00780106           	mov.w	w6,w2
   603  009F74  00200001           	mov.w	#highword(0), w1
   604  009F76  00200000           	mov.w	#(0 & 0ffffh), w0
   605  009F78  0002D116           	call	(_read_eeprom)	;0 bytes adjustment
              00000000           
   606  009F7C  00200006           	mov.w	#0,w6
   607  009F7E  00E10006           	cp.w	w0, w6
   608  009F80  003D0002           	bra	ge,u91
   609  009F82  00049F98           	goto	u90
              00000000           
   610  009F86                     u91:
   611  009F86  00200202           	mov.w	#020h,w2
   612  009F88  002119C6           	mov.w	#_es,w6
   613  009F8A  00780006           	mov.w	w6,w0
   614  009F8C  0002DF4E           	call	(_crcchk)	;0 bytes adjustment
              00000000           
   615  009F90  00E00000           	cp0.w	w0
   616  009F92  003A0004           	bra	nz,u101
   617  009F94  00049F98           	goto	u100
              00000000           
   618  009F98                     u90:
   619  009F98                     u100:
   620  009F98  00049FA4           	goto	u110
              00000000           
   621  009F9C                     u101:
   622  009F9C  00049FA0           	goto	u111
              00000000           
   623  009FA0                     u111:
   624  009FA0  00049FAE           	goto	l241
              00000000           
   625  009FA4                     u110:
   626                           ;DFMAIN.C: 376: fault_routine(FAULT_SEVERITY, 70
                                 , "EEPROM");
   627                           
   628                           	line	376
   629  009FA4  00285D64           	mov.w	#u39,w4
   630  009FA6  00200462           	mov.w	#046h,w2
   631  009FA8  00200010           	mov.w	#01h,w0
   632  009FAA  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   633  009FAE                     l241:
   634                           ;DFMAIN.C: 380: if ((get_status() & 0x10) == 0)
   635                           
   636                           	global	_get_status
   637                           	signat	_get_status,25
   638                           	line	380
   639  009FAE  0002CF58           	call	(_get_status)
              00000000           
   640  009FB2  00B24100           	and.b	#16,w0
   641  009FB4  00E00400           	cp0.b	w0
   642  009FB6  003A0002           	bra	nz,u121
   643  009FB8  00049FC0           	goto	u120
              00000000           
   644+ 009FBC                     u121:
   645+ 009FBC  00049FCA           	goto	l242
      +       00000000           
   646  009FC0                     u120:
   647                           ;DFMAIN.C: 381: fault_routine(FAULT_SEVERITY, 39
                                 , "Watchdog");
   648                           
   649                           	line	381
   650  009FC0  00285AB4           	mov.w	#u49,w4
   651  009FC2  00200272           	mov.w	#027h,w2
   652  009FC4  00200010           	mov.w	#01h,w0
   653  009FC6  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   654  009FCA                     l242:
   655                           ;DFMAIN.C: 385: if ((code = post_supply_volts())
                                  != 0)
   656                           
   657                           	global	_post_supply_volts
   658                           	signat	_post_supply_volts,26
   659                           	line	385
   660  009FCA  0002C678           	call	(_post_supply_volts)
              00000000           
   661  009FCE  002FFFC6           	mov.w	#((0+f33376+2)-0),w6
   662  009FD0  00478306           	add.w	sp,w6,w6
   663  009FD2  00780B00           	mov.w	w0,[w6]
   664  009FD4  00E00016           	cp0.w	[w6]
   665  009FD6  00320002           	bra	z,u131
   666  009FD8  00049FE0           	goto	u130
              00000000           
   667  009FDC                     u131:
   668  009FDC  0004A008           	goto	l243
              00000000           
   669  009FE0                     u130:
   670                           ;DFMAIN.C: 386: if (code == 36)
   671                           
   672                           	line	386
   673  009FE0  00200247           	mov.w	#024h,w7
   674  009FE2  0097BB6F           	mov.w	[sp+((0+f33376+2)-0)],w6
   675  009FE4  00E13007           	cp.w	w6, w7
   676  009FE6  003A0002           	bra	nz,u141
   677  009FE8  00049FF0           	goto	u140
              00000000           
   678  009FEC                     u141:
   679  009FEC  00049FFE           	goto	l244
              00000000           
   680  009FF0                     u140:
   681                           ;DFMAIN.C: 387: {
   682                           
   683                           ;DFMAIN.C: 388: fault_routine(WARNING_SEVERITY, 
                                 code, "On-board temp");
   684                           
   685                           	line	388
   686  009FF0  00285834           	mov.w	#u59,w4
   687  009FF2  0097B96F           	mov.w	[sp+((0+f33376+2)-0)],w2
   688  009FF4  00200000           	mov.w	#0,w0
   689  009FF6  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   690                           ;DFMAIN.C: 389: }
   691                           
   692                           	line	389
   693  009FFA  0004A008           	goto	l245
              00000000           
   694                           	line	390
   695  009FFE                     l244:
   696                           ;DFMAIN.C: 390: else
   697                           
   698                           ;DFMAIN.C: 391: {
   699                           
   700                           ;DFMAIN.C: 392: fault_routine(FAULT_SEVERITY, co
                                 de, "Supply Voltage");
   701                           
   702                           	line	392
   703  009FFE  00285C74           	mov.w	#u69,w4
   704  00A000  0097B96F           	mov.w	[sp+((0+f33376+2)-0)],w2
   705  00A002  00200010           	mov.w	#01h,w0
   706  00A004  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   707                           	line	393
   708  00A008                     l245:
   709  00A008                     l243:
   710                           ;DFMAIN.C: 393: }
   711                           
   712                           ;DFMAIN.C: 397: if (get_raw_switches() != 0)
   713                           
   714                           	global	_get_raw_switches
   715                           	signat	_get_raw_switches,26
   716                           	line	397
   717  00A008  0002CF06           	call	(_get_raw_switches)
              00000000           
   718  00A00C  00E00000           	cp0.w	w0
   719  00A00E  00320002           	bra	z,u151
   720  00A010  0004A018           	goto	u150
              00000000           
   721  00A014                     u151:
   722  00A014  0004A022           	goto	l246
              00000000           
   723  00A018                     u150:
   724                           ;DFMAIN.C: 398: fault_routine(WARNING_SEVERITY, 
                                 75, "Stuck Button");
   725                           
   726                           	line	398
   727  00A018  00285914           	mov.w	#u79,w4
   728  00A01A  002004B2           	mov.w	#04Bh,w2
   729  00A01C  00200000           	mov.w	#0,w0
   730  00A01E  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   731  00A022                     l246:
   732                           ;DFMAIN.C: 402: if ((code = post_rf(&es)) != 0)
   733                           
   734                           	global	_post_rf
   735                           	signat	_post_rf,4154
   736                           	line	402
   737  00A022  002119C6           	mov.w	#_es,w6
   738  00A024  00780006           	mov.w	w6,w0
   739  00A026  0002BFF2           	call	(_post_rf)	;0 bytes adjustment
              00000000           
   740  00A02A  002FFFC6           	mov.w	#((0+f33376+2)-0),w6
   741  00A02C  00478306           	add.w	sp,w6,w6
   742  00A02E  00780B00           	mov.w	w0,[w6]
   743  00A030  00E00016           	cp0.w	[w6]
   744  00A032  00320002           	bra	z,u161
   745  00A034  0004A03C           	goto	u160
              00000000           
   746  00A038                     u161:
   747  00A038  0004A062           	goto	l247
              00000000           
   748  00A03C                     u160:
   749                           ;DFMAIN.C: 403: {
   750                           
   751                           ;DFMAIN.C: 406: if (code == 30)
   752                           
   753                           	line	406
   754  00A03C  0097BB6F           	mov.w	[sp+((0+f33376+2)-0)],w6
   755  00A03E  00E1307E           	cp.w	w6, #30
   756  00A040  003A0002           	bra	nz,u171
   757  00A042  0004A04A           	goto	u170
              00000000           
   758  00A046                     u171:
   759  00A046  0004A058           	goto	l248
              00000000           
   760  00A04A                     u170:
   761                           ;DFMAIN.C: 407: {
   762                           
   763                           ;DFMAIN.C: 408: fault_routine(WARNING_SEVERITY, 
                                 code, "RF Circuitry");
   764                           
   765                           	line	408
   766  00A04A  00285244           	mov.w	#u89,w4
   767  00A04C  0097B96F           	mov.w	[sp+((0+f33376+2)-0)],w2
   768  00A04E  00200000           	mov.w	#0,w0
   769  00A050  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   770                           ;DFMAIN.C: 409: }
   771                           
   772                           	line	409
   773  00A054  0004A062           	goto	l249
              00000000           
   774                           	line	410
   775  00A058                     l248:
   776                           ;DFMAIN.C: 410: else
   777                           
   778                           ;DFMAIN.C: 411: {
   779                           
   780                           ;DFMAIN.C: 412: fault_routine(FAULT_SEVERITY, co
                                 de, "RF Circuitry");
   781                           
   782                           	line	412
   783  00A058  00285244           	mov.w	#u99,w4
   784  00A05A  0097B96F           	mov.w	[sp+((0+f33376+2)-0)],w2
   785  00A05C  00200010           	mov.w	#01h,w0
   786  00A05E  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   787                           	line	413
   788  00A062                     l249:
   789                           	line	417
   790  00A062                     l247:
   791                           ;DFMAIN.C: 413: }
   792                           
   793                           ;DFMAIN.C: 417: }
   794                           
   795                           ;DFMAIN.C: 421: if ((code = post_spi()) != 0)
   796                           
   797                           	global	_post_spi
   798                           	signat	_post_spi,26
   799                           	line	421
   800  00A062  0002C862           	call	(_post_spi)
              00000000           
   801  00A066  002FFFC6           	mov.w	#((0+f33376+2)-0),w6
   802  00A068  00478306           	add.w	sp,w6,w6
   803  00A06A  00780B00           	mov.w	w0,[w6]
   804  00A06C  00E00016           	cp0.w	[w6]
   805  00A06E  00320002           	bra	z,u181
   806  00A070  0004A078           	goto	u180
              00000000           
   807  00A074                     u181:
   808  00A074  0004A082           	goto	l250
              00000000           
   809  00A078                     u180:
   810                           ;DFMAIN.C: 422: fault_routine(FAULT_SEVERITY, co
                                 de, "SPI Circuitry");
   811                           
   812                           	line	422
   813  00A078  00285164           	mov.w	#u109,w4
   814  00A07A  0097B96F           	mov.w	[sp+((0+f33376+2)-0)],w2
   815  00A07C  00200010           	mov.w	#01h,w0
   816  00A07E  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
   817  00A082                     l250:
   818                           ;DFMAIN.C: 424: (LATG15 = !(LATG15 = 0));
   819                           
   820                           	line	424
   821  00A082  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
   822  00A084  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
   823  00A086  00320002           	bra	z,u191
   824  00A088  0004A090           	goto	u190
              00000000           
   825  00A08C                     u191:
   826  00A08C  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
   827  00A08E  00370001           	bra	u202
   828  00A090                     u190:
   829  00A090  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
   830  00A092                     u202:
   831                           ;DFMAIN.C: 426: for (code = 0; ;)
   832                           
   833                           	line	426
   834  00A092  00200007           	mov.w	#0,w7
   835  00A094  002FFFC6           	mov.w	#((0+f33376+2)-0),w6
   836  00A096  00478306           	add.w	sp,w6,w6
   837  00A098  00780B07           	mov.w	w7,[w6]
   838                           	line	427
   839  00A09A                     l251:
   840                           ;DFMAIN.C: 427: {
   841                           
   842                           ;DFMAIN.C: 428: start_sequence(code);
   843                           
   844                           	signat	_start_sequence,4154
   845                           	line	428
   846  00A09A  0097B86F           	mov.w	[sp+((0+f33376+2)-0)],w0
   847  00A09C  0002ADCA           	call	(_start_sequence)	;0 bytes adjustment
              00000000           
   848                           ;DFMAIN.C: 429: }
   849                           
   850                           	line	429
   851  00A0A0  0004A09A           	goto	l251
              00000000           
   852  00A0A4                     l252:
   853                           ;DFMAIN.C: 430: }
   854                           
   855                           	line	430
   856  00A0A4                     l235:
   857                           	global	_main
   858                           	global	start
   859  00A0A4  0004828C           	goto	start
              00000000           
   860  00A0A8  00060000           	return
   861                           	line	310
   862                           
   863  00A0AA                     f33371:
   864                           
   865  00A0AA  00B0006F           	add.w	#6,sp
   866  00A0AC  00049EAC           	goto	f33370
              00000000           
   867  000000                     f33376	equ	-6		;stack offset for auto's
   868  000000                     f33373	equ	-10		;stack offset for parameters
   869                           	line	0
   870                           	signat	_ablate_loop,26
   871                           	line	466
   872  00A0B0                     _ablate_loop:
   873  00A0B0  0004AC42           	goto	f33531
              00000000           
   874  00A0B4                     f33530:
   875                           
   876                           ;DFMAIN.C: 465: static unsigned int ablate_loop(
                                 void)
   877                           
   878                           ;DFMAIN.C: 466: {
   879                           
   880                           ;DFMAIN.C: 467: unsigned long timecount;
   881                           
   882                           ;DFMAIN.C: 469: unsigned int switches, status, d
                                 isplaytimer;
   883                           
   884                           ;DFMAIN.C: 470: unsigned int ablate_bad_flags, a
                                 blate_bad_tc1_cnt = 0, ablate_bad_tc2_cnt = 0, a
                                 blate_bad_imp_cnt = 0;
   885                           
   886                           	line	470
   887  00A0B4  00200007           	mov.w	#0,w7
   888  00A0B6  002FFEA6           	mov.w	#((0+f33536+12)-0),w6
   889  00A0B8  00478306           	add.w	sp,w6,w6
   890  00A0BA  00780B07           	mov.w	w7,[w6]
   891  00A0BC  00200007           	mov.w	#0,w7
   892  00A0BE  002FFEC6           	mov.w	#((0+f33536+14)-0),w6
   893  00A0C0  00478306           	add.w	sp,w6,w6
   894  00A0C2  00780B07           	mov.w	w7,[w6]
   895  00A0C4  00200007           	mov.w	#0,w7
   896  00A0C6  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
   897  00A0C8  00478306           	add.w	sp,w6,w6
   898  00A0CA  00780B07           	mov.w	w7,[w6]
   899                           ;DFMAIN.C: 471: unsigned long s_reg = 0L;
   900                           
   901                           	line	471
   902  00A0CC  00200005           	mov.w	#highword(0), w5
   903  00A0CE  00200004           	mov.w	#(0 & 0ffffh), w4
   904  00A0D0  009FBF84           	mov.w	w4,[sp+((0+f33536+18)-0)]
   905  00A0D2  009FBF95           	mov.w	w5,[sp+((0+f33536+18)-0+2)]
   906                           ;DFMAIN.C: 472: unsigned int pwr_setting = ABLAT
                                 E_POWER_SETTING_LEVEL1;
   907                           
   908                           	line	472
   909  00A0D4  00200017           	mov.w	#01h,w7
   910  00A0D6  002FFF46           	mov.w	#((0+f33536+22)-0),w6
   911  00A0D8  00478306           	add.w	sp,w6,w6
   912  00A0DA  00780B07           	mov.w	w7,[w6]
   913                           ;DFMAIN.C: 473: unsigned int time_increment;
   914                           
   915                           ;DFMAIN.C: 474: static signed long slTemp;
   916                           
   917                           ;DFMAIN.C: 475: long temp_rf_cycle_sps_preset;
   918                           
   919                           ;DFMAIN.C: 476: char *power_value_text;
   920                           
   921                           ;DFMAIN.C: 480: SetPowerSetting(pwr_setting);
   922                           
   923                           	signat	_SetPowerSetting,4154
   924                           	line	480
   925  00A0DC  0097B82F           	mov.w	[sp+((0+f33536+22)-0)],w0
   926  00A0DE  0002BD48           	call	(_SetPowerSetting)	;0 bytes adjustment
              00000000           
   927                           ;DFMAIN.C: 482: for ( ; ; timecount++)
   928                           
   929                           	line	483
   930  00A0E2                     l255:
   931                           ;DFMAIN.C: 483: {
   932                           
   933                           ;DFMAIN.C: 484: wait_for_20ms();
   934                           
   935                           	line	484
   936  00A0E2  0002D368           	call	(_wait_for_20ms)
              00000000           
   937                           ;DFMAIN.C: 486: ablate_bad_flags = ablate_bad(&d
                                 s);
   938                           
   939                           	signat	_ablate_bad,4154
   940                           	line	486
   941  00A0E6  00211446           	mov.w	#_ds,w6
   942  00A0E8  00780006           	mov.w	w6,w0
   943  00A0EA  0002B140           	call	(_ablate_bad)	;0 bytes adjustment
              00000000           
   944  00A0EE  002FFE86           	mov.w	#((0+f33536+10)-0),w6
   945  00A0F0  00478306           	add.w	sp,w6,w6
   946  00A0F2  00780B00           	mov.w	w0,[w6]
   947                           ;DFMAIN.C: 487: if (ablate_bad_flags & 0x01)
   948                           
   949                           	line	487
   950  00A0F4  0097B34F           	mov.w	[sp+((0+f33536+10)-0)],w6
   951  00A0F6  00B20016           	and.w	#1,w6
   952  00A0F8  00E00006           	cp0.w	w6
   953  00A0FA  00320002           	bra	z,u211
   954  00A0FC  0004A104           	goto	u210
              00000000           
   955  00A100                     u211:
   956  00A100  0004A142           	goto	l258
              00000000           
   957  00A104                     u210:
   958                           ;DFMAIN.C: 488: {
   959                           
   960                           ;DFMAIN.C: 489: if (ds.rfon)
   961                           
   962                           	line	489
   963  00A104  00211446           	mov.w	#_ds,w6
   964  00A106  00780306           	mov.w	w6,w6
   965  00A108  00B00086           	add.w	#8,w6
   966  00A10A  00E00016           	cp0.w	[w6]
   967  00A10C  00320002           	bra	z,u221
   968  00A10E  0004A116           	goto	u220
              00000000           
   969  00A112                     u221:
   970  00A112  0004A122           	goto	l259
              00000000           
   971  00A116                     u220:
   972                           ;DFMAIN.C: 490: ablate_bad_tc1_cnt = 5 * 50;
   973                           
   974                           	line	490
   975  00A116  00200FA7           	mov.w	#0FAh,w7
   976  00A118  002FFEA6           	mov.w	#((0+f33536+12)-0),w6
   977  00A11A  00478306           	add.w	sp,w6,w6
   978  00A11C  00780B07           	mov.w	w7,[w6]
   979  00A11E  0004A13E           	goto	l260
              00000000           
   980                           	line	491
   981  00A122                     l259:
   982                           ;DFMAIN.C: 491: else if (ablate_bad_tc1_cnt < 50
                                 )
   983                           
   984  00A122  00200327           	mov.w	#032h,w7
   985  00A124  002FFEA6           	mov.w	#((0+f33536+12)-0),w6
   986  00A126  00478306           	add.w	sp,w6,w6
   987  00A128  00780316           	mov.w	[w6],w6
   988  00A12A  00E13007           	cp.w	w6, w7
   989  00A12C  00310002           	bra	geu,u231
   990  00A12E  0004A136           	goto	u230
              00000000           
   991  00A132                     u231:
   992  00A132  0004A13E           	goto	l261
              00000000           
   993  00A136                     u230:
   994                           ;DFMAIN.C: 492: ablate_bad_tc1_cnt = 50;
   995                           
   996                           	line	492
   997  00A136  00200327           	mov.w	#032h,w7
   998  00A138  002FFEA6           	mov.w	#((0+f33536+12)-0),w6
   999  00A13A  00478306           	add.w	sp,w6,w6
  1000  00A13C  00780B07           	mov.w	w7,[w6]
  1001  00A13E                     l261:
  1002                           	line	493
  1003  00A13E                     l260:
  1004                           ;DFMAIN.C: 493: }
  1005                           
  1006  00A13E  0004A158           	goto	l262
              00000000           
  1007                           	line	494
  1008  00A142                     l258:
  1009                           ;DFMAIN.C: 494: else if (ablate_bad_tc1_cnt)
  1010                           
  1011  00A142  002FFEA6           	mov.w	#((0+f33536+12)-0),w6
  1012  00A144  00478306           	add.w	sp,w6,w6
  1013  00A146  00E00016           	cp0.w	[w6]
  1014  00A148  00320002           	bra	z,u241
  1015  00A14A  0004A152           	goto	u240
              00000000           
  1016  00A14E                     u241:
  1017  00A14E  0004A158           	goto	l263
              00000000           
  1018  00A152                     u240:
  1019                           ;DFMAIN.C: 495: --ablate_bad_tc1_cnt;
  1020                           
  1021                           	line	495
  1022  00A152  0097B35F           	mov.w	[sp+((0+f33536+12)-0)],w6
  1023  00A154  00B10016           	sub.w	#1,w6
  1024  00A156  009FB7D6           	mov.w	w6,[sp+((0+f33536+12)-0)]
  1025  00A158                     l263:
  1026                           	line	496
  1027  00A158                     l262:
  1028                           ;DFMAIN.C: 496: if (ablate_bad_flags & 0x02)
  1029                           
  1030  00A158  0097B34F           	mov.w	[sp+((0+f33536+10)-0)],w6
  1031  00A15A  00B20026           	and.w	#2,w6
  1032  00A15C  00E00006           	cp0.w	w6
  1033  00A15E  00320002           	bra	z,u251
  1034  00A160  0004A168           	goto	u250
              00000000           
  1035  00A164                     u251:
  1036  00A164  0004A1A6           	goto	l264
              00000000           
  1037  00A168                     u250:
  1038                           ;DFMAIN.C: 497: {
  1039                           
  1040                           ;DFMAIN.C: 498: if (ds.rfon)
  1041                           
  1042                           	line	498
  1043  00A168  00211446           	mov.w	#_ds,w6
  1044  00A16A  00780306           	mov.w	w6,w6
  1045  00A16C  00B00086           	add.w	#8,w6
  1046  00A16E  00E00016           	cp0.w	[w6]
  1047  00A170  00320002           	bra	z,u261
  1048  00A172  0004A17A           	goto	u260
              00000000           
  1049  00A176                     u261:
  1050  00A176  0004A186           	goto	l265
              00000000           
  1051  00A17A                     u260:
  1052                           ;DFMAIN.C: 499: ablate_bad_tc2_cnt = 5 * 50;
  1053                           
  1054                           	line	499
  1055  00A17A  00200FA7           	mov.w	#0FAh,w7
  1056  00A17C  002FFEC6           	mov.w	#((0+f33536+14)-0),w6
  1057  00A17E  00478306           	add.w	sp,w6,w6
  1058  00A180  00780B07           	mov.w	w7,[w6]
  1059  00A182  0004A1A2           	goto	l266
              00000000           
  1060                           	line	500
  1061  00A186                     l265:
  1062                           ;DFMAIN.C: 500: else if (ablate_bad_tc2_cnt < 50
                                 )
  1063                           
  1064  00A186  00200327           	mov.w	#032h,w7
  1065  00A188  002FFEC6           	mov.w	#((0+f33536+14)-0),w6
  1066  00A18A  00478306           	add.w	sp,w6,w6
  1067  00A18C  00780316           	mov.w	[w6],w6
  1068  00A18E  00E13007           	cp.w	w6, w7
  1069  00A190  00310002           	bra	geu,u271
  1070  00A192  0004A19A           	goto	u270
              00000000           
  1071  00A196                     u271:
  1072  00A196  0004A1A2           	goto	l267
              00000000           
  1073  00A19A                     u270:
  1074                           ;DFMAIN.C: 501: ablate_bad_tc2_cnt = 50;
  1075                           
  1076                           	line	501
  1077  00A19A  00200327           	mov.w	#032h,w7
  1078  00A19C  002FFEC6           	mov.w	#((0+f33536+14)-0),w6
  1079  00A19E  00478306           	add.w	sp,w6,w6
  1080  00A1A0  00780B07           	mov.w	w7,[w6]
  1081  00A1A2                     l267:
  1082                           	line	502
  1083  00A1A2                     l266:
  1084                           ;DFMAIN.C: 502: }
  1085                           
  1086  00A1A2  0004A1BC           	goto	l268
              00000000           
  1087                           	line	503
  1088  00A1A6                     l264:
  1089                           ;DFMAIN.C: 503: else if (ablate_bad_tc2_cnt)
  1090                           
  1091  00A1A6  002FFEC6           	mov.w	#((0+f33536+14)-0),w6
  1092  00A1A8  00478306           	add.w	sp,w6,w6
  1093  00A1AA  00E00016           	cp0.w	[w6]
  1094  00A1AC  00320002           	bra	z,u281
  1095  00A1AE  0004A1B6           	goto	u280
              00000000           
  1096  00A1B2                     u281:
  1097  00A1B2  0004A1BC           	goto	l269
              00000000           
  1098  00A1B6                     u280:
  1099                           ;DFMAIN.C: 504: --ablate_bad_tc2_cnt;
  1100                           
  1101                           	line	504
  1102  00A1B6  0097B36F           	mov.w	[sp+((0+f33536+14)-0)],w6
  1103  00A1B8  00B10016           	sub.w	#1,w6
  1104  00A1BA  009FB7E6           	mov.w	w6,[sp+((0+f33536+14)-0)]
  1105  00A1BC                     l269:
  1106                           	line	505
  1107  00A1BC                     l268:
  1108                           ;DFMAIN.C: 505: if (ablate_bad_flags & 0x04)
  1109                           
  1110  00A1BC  0097B34F           	mov.w	[sp+((0+f33536+10)-0)],w6
  1111  00A1BE  00B20046           	and.w	#4,w6
  1112  00A1C0  00E00006           	cp0.w	w6
  1113  00A1C2  00320002           	bra	z,u291
  1114  00A1C4  0004A1CC           	goto	u290
              00000000           
  1115  00A1C8                     u291:
  1116  00A1C8  0004A20A           	goto	l270
              00000000           
  1117  00A1CC                     u290:
  1118                           ;DFMAIN.C: 506: {
  1119                           
  1120                           ;DFMAIN.C: 507: if (ds.rfon)
  1121                           
  1122                           	line	507
  1123  00A1CC  00211446           	mov.w	#_ds,w6
  1124  00A1CE  00780306           	mov.w	w6,w6
  1125  00A1D0  00B00086           	add.w	#8,w6
  1126  00A1D2  00E00016           	cp0.w	[w6]
  1127  00A1D4  00320002           	bra	z,u301
  1128  00A1D6  0004A1DE           	goto	u300
              00000000           
  1129  00A1DA                     u301:
  1130  00A1DA  0004A1EA           	goto	l271
              00000000           
  1131  00A1DE                     u300:
  1132                           ;DFMAIN.C: 508: ablate_bad_imp_cnt = 5 * 50;
  1133                           
  1134                           	line	508
  1135  00A1DE  00200FA7           	mov.w	#0FAh,w7
  1136  00A1E0  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
  1137  00A1E2  00478306           	add.w	sp,w6,w6
  1138  00A1E4  00780B07           	mov.w	w7,[w6]
  1139  00A1E6  0004A206           	goto	l272
              00000000           
  1140                           	line	509
  1141  00A1EA                     l271:
  1142                           ;DFMAIN.C: 509: else if (ablate_bad_imp_cnt < 50
                                 )
  1143                           
  1144  00A1EA  00200327           	mov.w	#032h,w7
  1145  00A1EC  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
  1146  00A1EE  00478306           	add.w	sp,w6,w6
  1147  00A1F0  00780316           	mov.w	[w6],w6
  1148  00A1F2  00E13007           	cp.w	w6, w7
  1149  00A1F4  00310002           	bra	geu,u311
  1150  00A1F6  0004A1FE           	goto	u310
              00000000           
  1151  00A1FA                     u311:
  1152  00A1FA  0004A206           	goto	l273
              00000000           
  1153  00A1FE                     u310:
  1154                           ;DFMAIN.C: 510: ablate_bad_imp_cnt = 50;
  1155                           
  1156                           	line	510
  1157  00A1FE  00200327           	mov.w	#032h,w7
  1158  00A200  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
  1159  00A202  00478306           	add.w	sp,w6,w6
  1160  00A204  00780B07           	mov.w	w7,[w6]
  1161  00A206                     l273:
  1162                           	line	511
  1163  00A206                     l272:
  1164                           ;DFMAIN.C: 511: }
  1165                           
  1166  00A206  0004A220           	goto	l274
              00000000           
  1167                           	line	512
  1168  00A20A                     l270:
  1169                           ;DFMAIN.C: 512: else if (ablate_bad_imp_cnt)
  1170                           
  1171  00A20A  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
  1172  00A20C  00478306           	add.w	sp,w6,w6
  1173  00A20E  00E00016           	cp0.w	[w6]
  1174  00A210  00320002           	bra	z,u321
  1175  00A212  0004A21A           	goto	u320
              00000000           
  1176  00A216                     u321:
  1177  00A216  0004A220           	goto	l275
              00000000           
  1178  00A21A                     u320:
  1179                           ;DFMAIN.C: 513: --ablate_bad_imp_cnt;
  1180                           
  1181                           	line	513
  1182  00A21A  0097B37F           	mov.w	[sp+((0+f33536+16)-0)],w6
  1183  00A21C  00B10016           	sub.w	#1,w6
  1184  00A21E  009FB7F6           	mov.w	w6,[sp+((0+f33536+16)-0)]
  1185  00A220                     l275:
  1186                           	line	517
  1187  00A220                     l274:
  1188                           ;DFMAIN.C: 517: switches = get_switches();
  1189                           
  1190                           	global	_get_switches
  1191                           	signat	_get_switches,26
  1192  00A220  0002CD90           	call	(_get_switches)
              00000000           
  1193  00A224  002FFE26           	mov.w	#((0+f33536+4)-0),w6
  1194  00A226  00478306           	add.w	sp,w6,w6
  1195  00A228  00780B00           	mov.w	w0,[w6]
  1196                           ;DFMAIN.C: 528: if (((switches & 0x800) && LATD6
                                  == 0 || !(switches & 0x800) && LATD6 == 1) &&
  1197                           
  1198                           ;DFMAIN.C: 529: !ablate_bad_flags &&
  1199                           
  1200                           ;DFMAIN.C: 530: RFCycleSPS > 0)
  1201                           
  1202                           	line	530
  1203  00A22A  00208007           	mov.w	#0800h,w7
  1204  00A22C  0097B31F           	mov.w	[sp+((0+f33536+4)-0)],w6
  1205  00A22E  00630307           	and.w	w6,w7,w6
  1206  00A230  00E00006           	cp0.w	w6
  1207  00A232  00320008           	bra	z,u331
  1208  00A234  0004A238           	goto	u330
              00000000           
  1209  00A238                     u330:
  1210  00A238  00ABC2D6           	btst.b	(016B6h/8), #(016B6h&7)
  1211  00A23A  003A0004           	bra	nz,u341
  1212  00A23C  0004A240           	goto	u340
              00000000           
  1213  00A240                     u340:
  1214  00A240  0004A266           	goto	u350
              00000000           
  1215  00A244                     u331:
  1216  00A244                     u341:
  1217  00A244  0004A248           	goto	u351
              00000000           
  1218  00A248                     u351:
  1219  00A248  00208007           	mov.w	#0800h,w7
  1220  00A24A  0097B31F           	mov.w	[sp+((0+f33536+4)-0)],w6
  1221  00A24C  00630307           	and.w	w6,w7,w6
  1222  00A24E  00E00006           	cp0.w	w6
  1223  00A250  003A0008           	bra	nz,u361
  1224  00A252  0004A256           	goto	u360
              00000000           
  1225  00A256                     u360:
  1226  00A256  00ABC2D6           	btst.b	(016B6h/8), #(016B6h&7)
  1227  00A258  00320004           	bra	z,u371
  1228  00A25A  0004A25E           	goto	u370
              00000000           
  1229  00A25E                     u370:
  1230  00A25E  0004A266           	goto	u380
              00000000           
  1231  00A262                     u361:
  1232  00A262                     u371:
  1233  00A262  0004A26A           	goto	u381
              00000000           
  1234  00A266                     u350:
  1235  00A266                     u380:
  1236  00A266  0004A26E           	goto	u390
              00000000           
  1237  00A26A                     u381:
  1238  00A26A  0004A27E           	goto	u391
              00000000           
  1239  00A26E                     u390:
  1240  00A26E  002FFE86           	mov.w	#((0+f33536+10)-0),w6
  1241  00A270  00478306           	add.w	sp,w6,w6
  1242  00A272  00E00016           	cp0.w	[w6]
  1243  00A274  003A0004           	bra	nz,u401
  1244  00A276  0004A27A           	goto	u400
              00000000           
  1245  00A27A                     u400:
  1246  00A27A  0004A282           	goto	u410
              00000000           
  1247  00A27E                     u391:
  1248  00A27E                     u401:
  1249  00A27E  0004A28E           	goto	u411
              00000000           
  1250  00A282                     u410:
  1251  00A282  00E21138           	cp0.w	_RFCycleSPS
  1252  00A284  00320004           	bra	z,u421
  1253  00A286  0004A28A           	goto	u420
              00000000           
  1254  00A28A                     u420:
  1255  00A28A  0004A296           	goto	u430
              00000000           
  1256  00A28E                     u411:
  1257  00A28E                     u421:
  1258  00A28E  0004A292           	goto	u431
              00000000           
  1259  00A292                     u431:
  1260  00A292  0004A32E           	goto	l276
              00000000           
  1261  00A296                     u430:
  1262                           ;DFMAIN.C: 531: {
  1263                           
  1264                           ;DFMAIN.C: 532: if ((!ds.rfon) && (SettingsMode 
                                 == 0))
  1265                           
  1266                           	line	532
  1267  00A296  00211446           	mov.w	#_ds,w6
  1268  00A298  00780306           	mov.w	w6,w6
  1269  00A29A  00B00086           	add.w	#8,w6
  1270  00A29C  00E00016           	cp0.w	[w6]
  1271  00A29E  003A0008           	bra	nz,u441
  1272  00A2A0  0004A2A4           	goto	u440
              00000000           
  1273  00A2A4                     u440:
  1274  00A2A4  00E21140           	cp0.w	_SettingsMode
  1275  00A2A6  003A0004           	bra	nz,u451
  1276  00A2A8  0004A2AC           	goto	u450
              00000000           
  1277  00A2AC                     u450:
  1278  00A2AC  0004A2B8           	goto	u460
              00000000           
  1279  00A2B0                     u441:
  1280  00A2B0                     u451:
  1281  00A2B0  0004A2B4           	goto	u461
              00000000           
  1282  00A2B4                     u461:
  1283  00A2B4  0004A32A           	goto	l277
              00000000           
  1284  00A2B8                     u460:
  1285                           ;DFMAIN.C: 533: {
  1286                           
  1287                           ;DFMAIN.C: 536: ds.rfon = 1;
  1288                           
  1289                           	line	536
  1290  00A2B8  00200016           	mov.w	#01h,w6
  1291  00A2BA  002114C7           	mov	#_ds+8,w7
  1292  00A2BC  00780B86           	mov.w	w6,[w7]
  1293                           ;DFMAIN.C: 537: ds.loopCount = 0;
  1294                           
  1295                           	line	537
  1296  00A2BE  00200006           	mov.w	#0,w6
  1297  00A2C0  00211867           	mov	#_ds+66,w7
  1298  00A2C2  00780B86           	mov.w	w6,[w7]
  1299                           ;DFMAIN.C: 542: ds.faultCount = 0;
  1300                           
  1301                           	line	542
  1302  00A2C4  00200006           	mov.w	#0,w6
  1303  00A2C6  00211887           	mov	#_ds+68,w7
  1304  00A2C8  00780B86           	mov.w	w6,[w7]
  1305                           ;DFMAIN.C: 544: tone(0x09);
  1306                           
  1307                           	line	544
  1308  00A2CA  00200090           	mov.w	#09h,w0
  1309  00A2CC  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  1310                           ;DFMAIN.C: 546: write_LEDs(0x01 | 0x02);
  1311                           
  1312                           	line	546
  1313  00A2D0  00200030           	mov.w	#03h,w0
  1314  00A2D2  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
              00000000           
  1315                           ;DFMAIN.C: 547: if (!ds.initial_imp)
  1316                           
  1317                           	line	547
  1318  00A2D6  00211446           	mov.w	#_ds,w6
  1319  00A2D8  00780306           	mov.w	w6,w6
  1320  00A2DA  00B000E6           	add.w	#14,w6
  1321  00A2DC  00E00016           	cp0.w	[w6]
  1322  00A2DE  003A0002           	bra	nz,u471
  1323  00A2E0  0004A2E8           	goto	u470
              00000000           
  1324  00A2E4                     u471:
  1325  00A2E4  0004A2EE           	goto	l278
              00000000           
  1326  00A2E8                     u470:
  1327                           ;DFMAIN.C: 548: ds.initial_imp = ds.impedance;
  1328                           
  1329                           	line	548
  1330  00A2E8  00808A26           	mov	_ds,w6
  1331  00A2EA  00211527           	mov	#_ds+14,w7
  1332  00A2EC  00780B86           	mov.w	w6,[w7]
  1333  00A2EE                     l278:
  1334                           ;DFMAIN.C: 552: LATD6 = 1;
  1335                           
  1336                           	line	552
  1337  00A2EE  00A8C2D6           	bset.b	(016B6h/8), #(016B6h&7)
  1338                           ;DFMAIN.C: 555: s_reg = s_reg & ~(0x00100L | 0x0
                                 0020L | 0x00080L) | 0x00001L;
  1339                           
  1340                           	line	555
  1341  00A2F0  00200005           	mov.w	#highword(01h), w5
  1342  00A2F2  00200014           	mov.w	#(01h & 0ffffh), w4
  1343  00A2F4  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  1344  00A2F6  00478306           	add.w	sp,w6,w6
  1345  00A2F8  00BE0116           	mov.d	[w6],w2
  1346  00A2FA  002FFFF7           	mov.w	#highword(-417), w7
  1347  00A2FC  002FE5F6           	mov.w	#(-417 & 0ffffh), w6
  1348  00A2FE  00610006           	and.w	w2,w6,w0
  1349  00A300  00618087           	and.w	w3,w7,w1
  1350  00A302  00700304           	ior.w	w0,w4,w6
  1351  00A304  00708385           	ior.w	w1,w5,w7
  1352  00A306  009FBF86           	mov.w	w6,[sp+((0+f33536+18)-0)]
  1353  00A308  009FBF97           	mov.w	w7,[sp+((0+f33536+18)-0+2)]
  1354                           ;DFMAIN.C: 559: gDFDisplyPrintRFGraphicItem(1);
  1355                           
  1356                           	global	_gDFDisplyPrintRFGraphicItem
  1357                           	signat	_gDFDisplyPrintRFGraphicItem,4154
  1358                           	line	559
  1359  00A30A  00200010           	mov.w	#01h,w0
  1360  00A30C  00029224           	call	(_gDFDisplyPrintRFGraphicItem)	;0 bytes ad
              00000000           justment
  1361                           ;DFMAIN.C: 563: if (RFCycleSPS == RFCycleSPSPres
                                 et)
  1362                           
  1363                           	line	563
  1364  00A310  002113A6           	mov.w	#_RFCycleSPSPreset,w6
  1365  00A312  00780016           	mov.w	[w6],w0
  1366  00A314  00E31138           	cp.w	_RFCycleSPS
  1367  00A316  003A0002           	bra	nz,u481
  1368  00A318  0004A320           	goto	u480
              00000000           
  1369  00A31C                     u481:
  1370  00A31C  0004A32A           	goto	l279
              00000000           
  1371  00A320                     u480:
  1372                           ;DFMAIN.C: 564: {
  1373                           
  1374                           ;DFMAIN.C: 565: Cycles++;
  1375                           
  1376                           	line	565
  1377  00A320  00EC2D66           	inc.w	_Cycles
  1378                           ;DFMAIN.C: 566: gDFDisplyPrintCyclesValueTextIt(
                                 Cycles);
  1379                           
  1380                           	global	_gDFDisplyPrintCyclesValueTextIt
  1381                           	signat	_gDFDisplyPrintCyclesValueTextIt,4154
  1382                           	line	566
  1383  00A322  0020D666           	mov.w	#_Cycles,w6
  1384  00A324  00780016           	mov.w	[w6],w0
  1385  00A326  00028800           	call	(_gDFDisplyPrintCyclesValueTextIt)	;0 byte
              00000000           s adjustment
  1386                           	line	567
  1387  00A32A                     l279:
  1388                           	line	568
  1389  00A32A                     l277:
  1390                           ;DFMAIN.C: 567: }
  1391                           
  1392                           ;DFMAIN.C: 568: }
  1393                           
  1394                           ;DFMAIN.C: 569: }
  1395                           
  1396                           	line	569
  1397  00A32A  0004A3A4           	goto	l280
              00000000           
  1398                           	line	570
  1399  00A32E                     l276:
  1400                           ;DFMAIN.C: 570: else
  1401                           
  1402                           ;DFMAIN.C: 571: {
  1403                           
  1404                           ;DFMAIN.C: 572: if (ds.rfon)
  1405                           
  1406                           	line	572
  1407  00A32E  00211446           	mov.w	#_ds,w6
  1408  00A330  00780306           	mov.w	w6,w6
  1409  00A332  00B00086           	add.w	#8,w6
  1410  00A334  00E00016           	cp0.w	[w6]
  1411  00A336  00320002           	bra	z,u491
  1412  00A338  0004A340           	goto	u490
              00000000           
  1413  00A33C                     u491:
  1414  00A33C  0004A390           	goto	l281
              00000000           
  1415  00A340                     u490:
  1416                           ;DFMAIN.C: 573: {
  1417                           
  1418                           ;DFMAIN.C: 575: imp_pulse_measure((0));
  1419                           
  1420                           	signat	_imp_pulse_measure,4154
  1421                           	line	575
  1422  00A340  00200000           	mov.w	#0,w0
  1423  00A342  0002BB6C           	call	(_imp_pulse_measure)	;0 bytes adjustment
              00000000           
  1424                           ;DFMAIN.C: 576: ds.rfon = ds.rfontime = 0;
  1425                           
  1426                           	line	576
  1427  00A346  00211446           	mov.w	#_ds,w6
  1428  00A348  00780306           	mov.w	w6,w6
  1429  00A34A  00B00026           	add.w	#2,w6
  1430  00A34C  00200007           	mov.w	#0,w7
  1431  00A34E  00780B07           	mov.w	w7,[w6]
  1432  00A350  00780396           	mov.w	[w6],w7
  1433  00A352  00211446           	mov.w	#_ds,w6
  1434  00A354  00780306           	mov.w	w6,w6
  1435  00A356  00B00086           	add.w	#8,w6
  1436  00A358  00780B07           	mov.w	w7,[w6]
  1437                           ;DFMAIN.C: 577: ds.RFpower = 0;
  1438                           
  1439                           	line	577
  1440  00A35A  00200006           	mov.w	#0,w6
  1441  00A35C  002115A7           	mov	#_ds+22,w7
  1442  00A35E  00780B86           	mov.w	w6,[w7]
  1443                           ;DFMAIN.C: 578: ds.RFvoltage = ds.RFcurrent = 0;
  1444                           
  1445                           	line	578
  1446  00A360  00211446           	mov.w	#_ds,w6
  1447  00A362  00780306           	mov.w	w6,w6
  1448  00A364  00B00206           	add.w	#32,w6
  1449  00A366  00200007           	mov.w	#0,w7
  1450  00A368  00780B07           	mov.w	w7,[w6]
  1451  00A36A  00780396           	mov.w	[w6],w7
  1452  00A36C  00211446           	mov.w	#_ds,w6
  1453  00A36E  00780306           	mov.w	w6,w6
  1454  00A370  00B001E6           	add.w	#30,w6
  1455  00A372  00780B07           	mov.w	w7,[w6]
  1456                           ;DFMAIN.C: 582: gDFDisplyPrintRFGraphicItem(0);
  1457                           
  1458                           	line	582
  1459  00A374  00200000           	mov.w	#0,w0
  1460  00A376  00029224           	call	(_gDFDisplyPrintRFGraphicItem)	;0 bytes ad
              00000000           justment
  1461                           ;DFMAIN.C: 584: tone(0x09);
  1462                           
  1463                           	line	584
  1464  00A37A  00200090           	mov.w	#09h,w0
  1465  00A37C  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  1466                           ;DFMAIN.C: 591: if (RFCycleSPS == 0)
  1467                           
  1468                           	line	591
  1469  00A380  00E21138           	cp0.w	_RFCycleSPS
  1470  00A382  003A0002           	bra	nz,u501
  1471  00A384  0004A38C           	goto	u500
              00000000           
  1472  00A388                     u501:
  1473  00A388  0004A390           	goto	l282
              00000000           
  1474  00A38C                     u500:
  1475                           ;DFMAIN.C: 592: {
  1476                           
  1477                           ;DFMAIN.C: 593: FlashRFCycleCount = 5 * 50;
  1478                           
  1479                           	line	593
  1480  00A38C  00200FA6           	mov.w	#0FAh,w6
  1481  00A38E  00886B76           	mov	w6,_FlashRFCycleCount
  1482                           	line	594
  1483  00A390                     l282:
  1484                           	line	595
  1485  00A390                     l281:
  1486                           ;DFMAIN.C: 594: }
  1487                           
  1488                           ;DFMAIN.C: 595: }
  1489                           
  1490                           ;DFMAIN.C: 597: LATD6 = 0;
  1491                           
  1492                           	line	597
  1493  00A390  00A9C2D6           	bclr.b	(016B6h/8), #(016B6h&7)
  1494                           ;DFMAIN.C: 598: LATD7 = 0;
  1495                           
  1496                           	line	598
  1497  00A392  00A9E2D6           	bclr.b	(016B7h/8), #(016B7h&7)
  1498                           ;DFMAIN.C: 599: s_reg &= ~(0x00001L | 0x00100L);
  1499                           
  1500                           	line	599
  1501  00A394  002FFFF5           	mov.w	#highword(-258), w5
  1502  00A396  002FEFE4           	mov.w	#(-258 & 0ffffh), w4
  1503  00A398  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  1504  00A39A  00478306           	add.w	sp,w6,w6
  1505  00A39C  00780396           	mov.w	[w6],w7
  1506  00A39E  00639B04           	and.w	w7,w4,[w6++]
  1507  00A3A0  00780396           	mov.w	[w6],w7
  1508  00A3A2  00639305           	and.w	w7,w5,[w6--]
  1509                           	line	600
  1510  00A3A4                     l280:
  1511                           ;DFMAIN.C: 600: }
  1512                           
  1513                           ;DFMAIN.C: 604: if (SettingsMode == 0)
  1514                           
  1515                           	line	604
  1516  00A3A4  00E21140           	cp0.w	_SettingsMode
  1517  00A3A6  003A0002           	bra	nz,u511
  1518  00A3A8  0004A3B0           	goto	u510
              00000000           
  1519  00A3AC                     u511:
  1520  00A3AC  0004A42C           	goto	l283
              00000000           
  1521  00A3B0                     u510:
  1522                           ;DFMAIN.C: 605: {
  1523                           
  1524                           ;DFMAIN.C: 606: if ((switches & 0x04) && pwr_set
                                 ting < ABLATE_POWER_SETTING_MAXNDX)
  1525                           
  1526                           	line	606
  1527  00A3B0  0097B31F           	mov.w	[sp+((0+f33536+4)-0)],w6
  1528  00A3B2  00B20046           	and.w	#4,w6
  1529  00A3B4  00E00006           	cp0.w	w6
  1530  00A3B6  0032000C           	bra	z,u521
  1531  00A3B8  0004A3BC           	goto	u520
              00000000           
  1532  00A3BC                     u520:
  1533  00A3BC  00200027           	mov.w	#02h,w7
  1534  00A3BE  002FFF46           	mov.w	#((0+f33536+22)-0),w6
  1535  00A3C0  00478306           	add.w	sp,w6,w6
  1536  00A3C2  00780316           	mov.w	[w6],w6
  1537  00A3C4  00E13007           	cp.w	w6, w7
  1538  00A3C6  00310004           	bra	geu,u531
  1539  00A3C8  0004A3CC           	goto	u530
              00000000           
  1540  00A3CC                     u530:
  1541  00A3CC  0004A3D8           	goto	u540
              00000000           
  1542  00A3D0                     u521:
  1543  00A3D0                     u531:
  1544  00A3D0  0004A3D4           	goto	u541
              00000000           
  1545  00A3D4                     u541:
  1546  00A3D4  0004A3EE           	goto	l284
              00000000           
  1547  00A3D8                     u540:
  1548                           ;DFMAIN.C: 607: {
  1549                           
  1550                           ;DFMAIN.C: 610: tone(0x09);
  1551                           
  1552                           	line	610
  1553  00A3D8  00200090           	mov.w	#09h,w0
  1554  00A3DA  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  1555                           ;DFMAIN.C: 611: ++pwr_setting;
  1556                           
  1557                           	line	611
  1558  00A3DE  0097BB2F           	mov.w	[sp+((0+f33536+22)-0)],w6
  1559  00A3E0  00B00016           	add.w	#1,w6
  1560  00A3E2  009FBFA6           	mov.w	w6,[sp+((0+f33536+22)-0)]
  1561                           ;DFMAIN.C: 612: SetPowerSetting(pwr_setting);
  1562                           
  1563                           	line	612
  1564  00A3E4  0097B82F           	mov.w	[sp+((0+f33536+22)-0)],w0
  1565  00A3E6  0002BD48           	call	(_SetPowerSetting)	;0 bytes adjustment
              00000000           
  1566                           ;DFMAIN.C: 613: }
  1567                           
  1568                           	line	613
  1569  00A3EA  0004A428           	goto	l285
              00000000           
  1570                           	line	614
  1571  00A3EE                     l284:
  1572                           ;DFMAIN.C: 614: else if ((switches & 0x08) && pw
                                 r_setting > ABLATE_POWER_SETTING_MINNDX)
  1573                           
  1574  00A3EE  0097B31F           	mov.w	[sp+((0+f33536+4)-0)],w6
  1575  00A3F0  00B20086           	and.w	#8,w6
  1576  00A3F2  00E00006           	cp0.w	w6
  1577  00A3F4  0032000C           	bra	z,u551
  1578  00A3F6  0004A3FA           	goto	u550
              00000000           
  1579  00A3FA                     u550:
  1580  00A3FA  00200017           	mov.w	#01h,w7
  1581  00A3FC  002FFF46           	mov.w	#((0+f33536+22)-0),w6
  1582  00A3FE  00478306           	add.w	sp,w6,w6
  1583  00A400  00780316           	mov.w	[w6],w6
  1584  00A402  00E13007           	cp.w	w6, w7
  1585  00A404  00360004           	bra	leu,u561
  1586  00A406  0004A40A           	goto	u560
              00000000           
  1587  00A40A                     u560:
  1588  00A40A  0004A416           	goto	u570
              00000000           
  1589  00A40E                     u551:
  1590  00A40E                     u561:
  1591  00A40E  0004A412           	goto	u571
              00000000           
  1592  00A412                     u571:
  1593  00A412  0004A428           	goto	l286
              00000000           
  1594  00A416                     u570:
  1595                           ;DFMAIN.C: 615: {
  1596                           
  1597                           ;DFMAIN.C: 618: tone(0x09);
  1598                           
  1599                           	line	618
  1600  00A416  00200090           	mov.w	#09h,w0
  1601  00A418  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  1602                           ;DFMAIN.C: 619: --pwr_setting;
  1603                           
  1604                           	line	619
  1605  00A41C  0097BB2F           	mov.w	[sp+((0+f33536+22)-0)],w6
  1606  00A41E  00B10016           	sub.w	#1,w6
  1607  00A420  009FBFA6           	mov.w	w6,[sp+((0+f33536+22)-0)]
  1608                           ;DFMAIN.C: 620: SetPowerSetting(pwr_setting);
  1609                           
  1610                           	line	620
  1611  00A422  0097B82F           	mov.w	[sp+((0+f33536+22)-0)],w0
  1612  00A424  0002BD48           	call	(_SetPowerSetting)	;0 bytes adjustment
              00000000           
  1613                           	line	621
  1614  00A428                     l286:
  1615                           	line	622
  1616  00A428                     l285:
  1617                           ;DFMAIN.C: 621: }
  1618                           
  1619                           ;DFMAIN.C: 622: }
  1620                           
  1621  00A428  0004A560           	goto	l287
              00000000           
  1622                           	line	623
  1623  00A42C                     l283:
  1624                           ;DFMAIN.C: 623: else
  1625                           
  1626                           ;DFMAIN.C: 624: {
  1627                           
  1628                           ;DFMAIN.C: 627: if (get_raw_switches() & 0x04)
  1629                           
  1630                           	line	627
  1631  00A42C  0002CF06           	call	(_get_raw_switches)
              00000000           
  1632  00A430  00B20040           	and.w	#4,w0
  1633  00A432  00E00000           	cp0.w	w0
  1634  00A434  00320002           	bra	z,u581
  1635  00A436  0004A43E           	goto	u580
              00000000           
  1636  00A43A                     u581:
  1637  00A43A  0004A4B6           	goto	l288
              00000000           
  1638  00A43E                     u580:
  1639                           ;DFMAIN.C: 628: {
  1640                           
  1641                           ;DFMAIN.C: 631: RFCycleAdjusted = 1;
  1642                           
  1643                           	line	631
  1644  00A43E  00EF2D72           	clr.w	_RFCycleAdjusted
  1645  00A440  00EC2D72           	inc.w	_RFCycleAdjusted
  1646                           ;DFMAIN.C: 632: PostStartupRFCycleAdjusted = 1;
  1647                           
  1648                           	line	632
  1649  00A442  00EF313C           	clr.w	_PostStartupRFCycleAdjusted
  1650  00A444  00EC313C           	inc.w	_PostStartupRFCycleAdjusted
  1651                           ;DFMAIN.C: 636: UpButtonHeldCount++;
  1652                           
  1653                           	line	636
  1654  00A446  00EC2D7A           	inc.w	_UpButtonHeldCount
  1655                           ;DFMAIN.C: 640: if (UpButtonHeldCount > (10*50))
  1656                           
  1657                           	line	640
  1658  00A448  00201F47           	mov.w	#01F4h,w7
  1659  00A44A  00806BD6           	mov	_UpButtonHeldCount,w6
  1660  00A44C  00E13007           	cp.w	w6, w7
  1661  00A44E  00360002           	bra	leu,u591
  1662  00A450  0004A458           	goto	u590
              00000000           
  1663  00A454                     u591:
  1664  00A454  0004A464           	goto	l289
              00000000           
  1665  00A458                     u590:
  1666                           ;DFMAIN.C: 641: {
  1667                           
  1668                           ;DFMAIN.C: 642: time_increment = (120);
  1669                           
  1670                           	line	642
  1671  00A458  00200787           	mov.w	#078h,w7
  1672  00A45A  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1673  00A45C  00478306           	add.w	sp,w6,w6
  1674  00A45E  00780B07           	mov.w	w7,[w6]
  1675                           ;DFMAIN.C: 643: }
  1676                           
  1677                           	line	643
  1678  00A460  0004A488           	goto	l290
              00000000           
  1679                           	line	644
  1680  00A464                     l289:
  1681                           ;DFMAIN.C: 644: else if (UpButtonHeldCount > (5*
                                 50))
  1682                           
  1683  00A464  00200FA7           	mov.w	#0FAh,w7
  1684  00A466  00806BD6           	mov	_UpButtonHeldCount,w6
  1685  00A468  00E13007           	cp.w	w6, w7
  1686  00A46A  00360002           	bra	leu,u601
  1687  00A46C  0004A474           	goto	u600
              00000000           
  1688  00A470                     u601:
  1689  00A470  0004A480           	goto	l291
              00000000           
  1690  00A474                     u600:
  1691                           ;DFMAIN.C: 645: {
  1692                           
  1693                           ;DFMAIN.C: 646: time_increment = (30);
  1694                           
  1695                           	line	646
  1696  00A474  002001E7           	mov.w	#01Eh,w7
  1697  00A476  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1698  00A478  00478306           	add.w	sp,w6,w6
  1699  00A47A  00780B07           	mov.w	w7,[w6]
  1700                           ;DFMAIN.C: 647: }
  1701                           
  1702                           	line	647
  1703  00A47C  0004A488           	goto	l292
              00000000           
  1704                           	line	648
  1705  00A480                     l291:
  1706                           ;DFMAIN.C: 648: else
  1707                           
  1708                           ;DFMAIN.C: 649: {
  1709                           
  1710                           ;DFMAIN.C: 650: time_increment = (7);
  1711                           
  1712                           	line	650
  1713  00A480  00200077           	mov.w	#07h,w7
  1714  00A482  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1715  00A484  00478306           	add.w	sp,w6,w6
  1716  00A486  00780B07           	mov.w	w7,[w6]
  1717                           	line	651
  1718  00A488                     l292:
  1719  00A488                     l290:
  1720                           ;DFMAIN.C: 651: }
  1721                           
  1722                           ;DFMAIN.C: 653: if ((RFCycleSPSPreset+time_incre
                                 ment) <= (10*60*50))
  1723                           
  1724                           	line	653
  1725  00A488  00275306           	mov.w	#07530h,w6
  1726  00A48A  002FFF67           	mov.w	#((0+f33536+24)-0),w7
  1727  00A48C  00478387           	add.w	sp,w7,w7
  1728  00A48E  00780297           	mov.w	[w7],w5
  1729  00A490  002113A7           	mov.w	#_RFCycleSPSPreset,w7
  1730  00A492  00780397           	mov.w	[w7],w7
  1731  00A494  00438385           	add.w	w7,w5,w7
  1732  00A496  00E13806           	cp.w	w7, w6
  1733  00A498  003E0002           	bra	gtu,u611
  1734  00A49A  0004A4A2           	goto	u610
              00000000           
  1735  00A49E                     u611:
  1736  00A49E  0004A4AA           	goto	l293
              00000000           
  1737  00A4A2                     u610:
  1738                           ;DFMAIN.C: 654: {
  1739                           
  1740                           ;DFMAIN.C: 655: RFCycleSPSPreset += time_increme
                                 nt;
  1741                           
  1742                           	line	655
  1743  00A4A2  0097B83F           	mov.w	[sp+((0+f33536+24)-0)],w0
  1744  00A4A4  00B4313A           	add.w	_RFCycleSPSPreset	;add _RFCycleSPSPreset 
                                 with w0
  1745                           ;DFMAIN.C: 656: }
  1746                           
  1747                           	line	656
  1748  00A4A6  0004A4AE           	goto	l294
              00000000           
  1749                           	line	657
  1750  00A4AA                     l293:
  1751                           ;DFMAIN.C: 657: else
  1752                           
  1753                           ;DFMAIN.C: 658: {
  1754                           
  1755                           ;DFMAIN.C: 659: RFCycleSPSPreset = (10*60*50);
  1756                           
  1757                           	line	659
  1758  00A4AA  00275306           	mov.w	#07530h,w6
  1759  00A4AC  008889D6           	mov	w6,_RFCycleSPSPreset
  1760                           	line	660
  1761  00A4AE                     l294:
  1762                           ;DFMAIN.C: 660: }
  1763                           
  1764                           ;DFMAIN.C: 664: RFCycleSPS = RFCycleSPSPreset;
  1765                           
  1766                           	line	664
  1767  00A4AE  008089D6           	mov	_RFCycleSPSPreset,w6
  1768  00A4B0  008889C6           	mov	w6,_RFCycleSPS
  1769                           ;DFMAIN.C: 665: }
  1770                           
  1771                           	line	665
  1772  00A4B2  0004A4B8           	goto	l295
              00000000           
  1773                           	line	666
  1774  00A4B6                     l288:
  1775                           ;DFMAIN.C: 666: else
  1776                           
  1777                           ;DFMAIN.C: 667: {
  1778                           
  1779                           ;DFMAIN.C: 668: UpButtonHeldCount = 0;
  1780                           
  1781                           	line	668
  1782  00A4B6  00EF2D7A           	clr.w	_UpButtonHeldCount
  1783                           	line	669
  1784  00A4B8                     l295:
  1785                           ;DFMAIN.C: 669: }
  1786                           
  1787                           ;DFMAIN.C: 673: if (get_raw_switches() & 0x08)
  1788                           
  1789                           	line	673
  1790  00A4B8  0002CF06           	call	(_get_raw_switches)
              00000000           
  1791  00A4BC  00B20080           	and.w	#8,w0
  1792  00A4BE  00E00000           	cp0.w	w0
  1793  00A4C0  00320002           	bra	z,u621
  1794  00A4C2  0004A4CA           	goto	u620
              00000000           
  1795  00A4C6                     u621:
  1796  00A4C6  0004A55E           	goto	l296
              00000000           
  1797  00A4CA                     u620:
  1798                           ;DFMAIN.C: 674: {
  1799                           
  1800                           ;DFMAIN.C: 675: RFCycleAdjusted = 1;
  1801                           
  1802                           	line	675
  1803  00A4CA  00EF2D72           	clr.w	_RFCycleAdjusted
  1804  00A4CC  00EC2D72           	inc.w	_RFCycleAdjusted
  1805                           ;DFMAIN.C: 676: PostStartupRFCycleAdjusted = 1;
  1806                           
  1807                           	line	676
  1808  00A4CE  00EF313C           	clr.w	_PostStartupRFCycleAdjusted
  1809  00A4D0  00EC313C           	inc.w	_PostStartupRFCycleAdjusted
  1810                           ;DFMAIN.C: 678: DownButtonHeldCount++;
  1811                           
  1812                           	line	678
  1813  00A4D2  00EC2D6C           	inc.w	_DownButtonHeldCount
  1814                           ;DFMAIN.C: 679: if (DownButtonHeldCount > (10*50
                                 ))
  1815                           
  1816                           	line	679
  1817  00A4D4  00201F47           	mov.w	#01F4h,w7
  1818  00A4D6  00806B66           	mov	_DownButtonHeldCount,w6
  1819  00A4D8  00E13007           	cp.w	w6, w7
  1820  00A4DA  00360002           	bra	leu,u631
  1821  00A4DC  0004A4E4           	goto	u630
              00000000           
  1822  00A4E0                     u631:
  1823  00A4E0  0004A4F0           	goto	l297
              00000000           
  1824  00A4E4                     u630:
  1825                           ;DFMAIN.C: 680: {
  1826                           
  1827                           ;DFMAIN.C: 681: time_increment = (120);
  1828                           
  1829                           	line	681
  1830  00A4E4  00200787           	mov.w	#078h,w7
  1831  00A4E6  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1832  00A4E8  00478306           	add.w	sp,w6,w6
  1833  00A4EA  00780B07           	mov.w	w7,[w6]
  1834                           ;DFMAIN.C: 682: }
  1835                           
  1836                           	line	682
  1837  00A4EC  0004A514           	goto	l298
              00000000           
  1838                           	line	683
  1839  00A4F0                     l297:
  1840                           ;DFMAIN.C: 683: else if (DownButtonHeldCount > (
                                 5*50))
  1841                           
  1842  00A4F0  00200FA7           	mov.w	#0FAh,w7
  1843  00A4F2  00806B66           	mov	_DownButtonHeldCount,w6
  1844  00A4F4  00E13007           	cp.w	w6, w7
  1845  00A4F6  00360002           	bra	leu,u641
  1846  00A4F8  0004A500           	goto	u640
              00000000           
  1847  00A4FC                     u641:
  1848  00A4FC  0004A50C           	goto	l299
              00000000           
  1849  00A500                     u640:
  1850                           ;DFMAIN.C: 684: {
  1851                           
  1852                           ;DFMAIN.C: 685: time_increment = (30);
  1853                           
  1854                           	line	685
  1855  00A500  002001E7           	mov.w	#01Eh,w7
  1856  00A502  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1857  00A504  00478306           	add.w	sp,w6,w6
  1858  00A506  00780B07           	mov.w	w7,[w6]
  1859                           ;DFMAIN.C: 686: }
  1860                           
  1861                           	line	686
  1862  00A508  0004A514           	goto	l300
              00000000           
  1863                           	line	687
  1864  00A50C                     l299:
  1865                           ;DFMAIN.C: 687: else
  1866                           
  1867                           ;DFMAIN.C: 688: {
  1868                           
  1869                           ;DFMAIN.C: 689: time_increment = (7);
  1870                           
  1871                           	line	689
  1872  00A50C  00200077           	mov.w	#07h,w7
  1873  00A50E  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1874  00A510  00478306           	add.w	sp,w6,w6
  1875  00A512  00780B07           	mov.w	w7,[w6]
  1876                           	line	690
  1877  00A514                     l300:
  1878  00A514                     l298:
  1879                           ;DFMAIN.C: 690: }
  1880                           
  1881                           ;DFMAIN.C: 692: temp_rf_cycle_sps_preset = RFCyc
                                 leSPSPreset;
  1882                           
  1883                           	line	692
  1884  00A514  002113A6           	mov.w	#_RFCycleSPSPreset,w6
  1885  00A516  00780216           	mov.w	[w6],w4
  1886  00A518  00EB0280           	clr.w	w5
  1887  00A51A  009FBFC4           	mov.w	w4,[sp+((0+f33536+26)-0)]
  1888  00A51C  009FBFD5           	mov.w	w5,[sp+((0+f33536+26)-0+2)]
  1889                           ;DFMAIN.C: 693: if ((temp_rf_cycle_sps_preset - 
                                 time_increment) >=
  1890                           
  1891                           ;DFMAIN.C: 694: (0*60*50))
  1892                           
  1893                           	line	694
  1894  00A51E  00200005           	mov.w	#highword(0), w5
  1895  00A520  00200004           	mov.w	#(0 & 0ffffh), w4
  1896  00A522  002FFF86           	mov.w	#((0+f33536+26)-0),w6
  1897  00A524  00478306           	add.w	sp,w6,w6
  1898  00A526  00BE0116           	mov.d	[w6],w2
  1899  00A528  002FFF66           	mov.w	#((0+f33536+24)-0),w6
  1900  00A52A  00478306           	add.w	sp,w6,w6
  1901  00A52C  00780316           	mov.w	[w6],w6
  1902  00A52E  00780306           	mov.w	w6,w6
  1903  00A530  00EB0380           	clr.w	w7
  1904  00A532  00510006           	sub.w	w2,w6,w0
  1905  00A534  00598087           	subb.w	w3,w7,w1
  1906  00A536  00280007           	mov.w	#8000h,w7
  1907  00A538  00688307           	xor	w1,w7,w6
  1908  00A53A  006A8387           	xor	w5,w7,w7
  1909  00A53C  00E13007           	cp.w	w6, w7
  1910  00A53E  003A0001           	bra	nz,u655
  1911  00A540  00E10004           	cp.w	w0, w4
  1912  00A542                     u655:
  1913  00A542  00390002           	bra	ltu,u651
  1914  00A544  0004A54C           	goto	u650
              00000000           
  1915  00A548                     u651:
  1916  00A548  0004A554           	goto	l301
              00000000           
  1917  00A54C                     u650:
  1918                           ;DFMAIN.C: 695: {
  1919                           
  1920                           ;DFMAIN.C: 696: RFCycleSPSPreset -= time_increme
                                 nt;
  1921                           
  1922                           	line	696
  1923  00A54C  0097B83F           	mov.w	[sp+((0+f33536+24)-0)],w0
  1924  00A54E  00B5313A           	sub.w	_RFCycleSPSPreset	;sub _RFCycleSPSPreset 
                                 with w0
  1925                           ;DFMAIN.C: 697: }
  1926                           
  1927                           	line	697
  1928  00A550  0004A556           	goto	l302
              00000000           
  1929                           	line	698
  1930  00A554                     l301:
  1931                           ;DFMAIN.C: 698: else
  1932                           
  1933                           ;DFMAIN.C: 699: {
  1934                           
  1935                           ;DFMAIN.C: 700: RFCycleSPSPreset = (0*60*50);
  1936                           
  1937                           	line	700
  1938  00A554  00EF313A           	clr.w	_RFCycleSPSPreset
  1939                           	line	701
  1940  00A556                     l302:
  1941                           ;DFMAIN.C: 701: }
  1942                           
  1943                           ;DFMAIN.C: 703: RFCycleSPS = RFCycleSPSPreset;
  1944                           
  1945                           	line	703
  1946  00A556  008089D6           	mov	_RFCycleSPSPreset,w6
  1947  00A558  008889C6           	mov	w6,_RFCycleSPS
  1948                           ;DFMAIN.C: 704: }
  1949                           
  1950                           	line	704
  1951  00A55A  0004A560           	goto	l303
              00000000           
  1952                           	line	705
  1953  00A55E                     l296:
  1954                           ;DFMAIN.C: 705: else
  1955                           
  1956                           ;DFMAIN.C: 706: {
  1957                           
  1958                           ;DFMAIN.C: 707: DownButtonHeldCount = 0;
  1959                           
  1960                           	line	707
  1961  00A55E  00EF2D6C           	clr.w	_DownButtonHeldCount
  1962                           	line	708
  1963  00A560                     l303:
  1964                           	line	709
  1965  00A560                     l287:
  1966                           ;DFMAIN.C: 708: }
  1967                           
  1968                           ;DFMAIN.C: 709: }
  1969                           
  1970                           ;DFMAIN.C: 711: if ((get_raw_switches() & 0x01) 
                                 && (SettingsMode == 0))
  1971                           
  1972                           	line	711
  1973  00A560  0002CF06           	call	(_get_raw_switches)
              00000000           
  1974  00A564  00B20010           	and.w	#1,w0
  1975  00A566  00E00000           	cp0.w	w0
  1976  00A568  00320008           	bra	z,u661
  1977  00A56A  0004A56E           	goto	u660
              00000000           
  1978  00A56E                     u660:
  1979  00A56E  00E21140           	cp0.w	_SettingsMode
  1980  00A570  003A0004           	bra	nz,u671
  1981  00A572  0004A576           	goto	u670
              00000000           
  1982  00A576                     u670:
  1983  00A576  0004A582           	goto	u680
              00000000           
  1984  00A57A                     u661:
  1985  00A57A                     u671:
  1986  00A57A  0004A57E           	goto	u681
              00000000           
  1987  00A57E                     u681:
  1988  00A57E  0004A5D0           	goto	l304
              00000000           
  1989  00A582                     u680:
  1990                           ;DFMAIN.C: 712: {
  1991                           
  1992                           ;DFMAIN.C: 714: ResetButtonHeldCount++;
  1993                           
  1994                           	line	714
  1995  00A582  00EC2D78           	inc.w	_ResetButtonHeldCount
  1996                           ;DFMAIN.C: 715: if (ResetButtonHeldCount == (3*5
                                 0))
  1997                           
  1998                           	line	715
  1999  00A584  00200960           	mov.w	#096h,w0
  2000  00A586  00E30D78           	cp.w	_ResetButtonHeldCount
  2001  00A588  003A0002           	bra	nz,u691
  2002  00A58A  0004A592           	goto	u690
              00000000           
  2003  00A58E                     u691:
  2004  00A58E  0004A5CC           	goto	l305
              00000000           
  2005  00A592                     u690:
  2006                           ;DFMAIN.C: 716: {
  2007                           
  2008                           ;DFMAIN.C: 719: tone(0x09);
  2009                           
  2010                           	line	719
  2011  00A592  00200090           	mov.w	#09h,w0
  2012  00A594  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  2013                           ;DFMAIN.C: 720: ds.totalrfontime=0;
  2014                           
  2015                           	line	720
  2016  00A598  00211446           	mov.w	#_ds,w6
  2017  00A59A  00780306           	mov.w	w6,w6
  2018  00A59C  00B00046           	add.w	#4,w6
  2019  00A59E  00200007           	mov.w	#(0 & 0ffffh), w7
  2020  00A5A0  00781B07           	mov.w	w7,[w6++]
  2021  00A5A2  00200007           	mov.w	#highword(0), w7
  2022  00A5A4  00781307           	mov.w	w7,[w6--]
  2023                           ;DFMAIN.C: 721: RFCycleSPS = RFCycleSPSPreset;
  2024                           
  2025                           	line	721
  2026  00A5A6  008089D6           	mov	_RFCycleSPSPreset,w6
  2027  00A5A8  008889C6           	mov	w6,_RFCycleSPS
  2028                           ;DFMAIN.C: 722: Cycles = 0;
  2029                           
  2030                           	line	722
  2031  00A5AA  00EF2D66           	clr.w	_Cycles
  2032                           ;DFMAIN.C: 723: FlashRFCycleCount = 0;
  2033                           
  2034                           	line	723
  2035  00A5AC  00EF2D6E           	clr.w	_FlashRFCycleCount
  2036                           ;DFMAIN.C: 725: gDFDisplyPrintRFToTalValueTextI(
                                 0);
  2037                           
  2038                           	global	_gDFDisplyPrintRFToTalValueTextI
  2039                           	signat	_gDFDisplyPrintRFToTalValueTextI,4154
  2040                           	line	725
  2041  00A5AE  00200000           	mov.w	#0,w0
  2042  00A5B0  00029294           	call	(_gDFDisplyPrintRFToTalValueTextI)	;0 byte
              00000000           s adjustment
  2043                           ;DFMAIN.C: 726: gDFDisplyPrintRFCycleValueTextI(
                                 RFCycleSPSPreset/50, 0, 0);
  2044                           
  2045                           	global	_gDFDisplyPrintRFCycleValueTextI
  2046                           	signat	_gDFDisplyPrintRFCycleValueTextI,12346
  2047                           	line	726
  2048  00A5B4  00200004           	mov.w	#0,w4
  2049  00A5B6  00200002           	mov.w	#0,w2
  2050  00A5B8  00200327           	mov.w	#032h,w7
  2051  00A5BA  008089D6           	mov	_RFCycleSPSPreset,w6
  2052  00A5BC  00090011           	repeat	#18-1
  2053  00A5BE  00D88307           	div.uw	w6,w7
  2054  00A5C0  0002911C           	call	(_gDFDisplyPrintRFCycleValueTextI)	;0 byte
              00000000           s adjustment
  2055                           ;DFMAIN.C: 727: gDFDisplyPrintCyclesValueTextIt(
                                 Cycles);
  2056                           
  2057                           	line	727
  2058  00A5C4  0020D666           	mov.w	#_Cycles,w6
  2059  00A5C6  00780016           	mov.w	[w6],w0
  2060  00A5C8  00028800           	call	(_gDFDisplyPrintCyclesValueTextIt)	;0 byte
              00000000           s adjustment
  2061                           	line	728
  2062  00A5CC                     l305:
  2063                           ;DFMAIN.C: 728: }
  2064                           
  2065                           ;DFMAIN.C: 730: }
  2066                           
  2067                           	line	730
  2068  00A5CC  0004A5D2           	goto	l306
              00000000           
  2069                           	line	731
  2070  00A5D0                     l304:
  2071                           ;DFMAIN.C: 731: else
  2072                           
  2073                           ;DFMAIN.C: 732: {
  2074                           
  2075                           ;DFMAIN.C: 733: ResetButtonHeldCount = 0;
  2076                           
  2077                           	line	733
  2078  00A5D0  00EF2D78           	clr.w	_ResetButtonHeldCount
  2079                           	line	734
  2080  00A5D2                     l306:
  2081                           ;DFMAIN.C: 734: }
  2082                           
  2083                           ;DFMAIN.C: 746: if ((SettingsMode == 0) && (ds.r
                                 fon == 0))
  2084                           
  2085                           	line	746
  2086  00A5D2  00E21140           	cp0.w	_SettingsMode
  2087  00A5D4  003A000B           	bra	nz,u701
  2088  00A5D6  0004A5DA           	goto	u700
              00000000           
  2089  00A5DA                     u700:
  2090  00A5DA  00211446           	mov.w	#_ds,w6
  2091  00A5DC  00780306           	mov.w	w6,w6
  2092  00A5DE  00B00086           	add.w	#8,w6
  2093  00A5E0  00E00016           	cp0.w	[w6]
  2094  00A5E2  003A0004           	bra	nz,u711
  2095  00A5E4  0004A5E8           	goto	u710
              00000000           
  2096  00A5E8                     u710:
  2097  00A5E8  0004A5F4           	goto	u720
              00000000           
  2098  00A5EC                     u701:
  2099  00A5EC                     u711:
  2100  00A5EC  0004A5F0           	goto	u721
              00000000           
  2101  00A5F0                     u721:
  2102  00A5F0  0004A65C           	goto	l307
              00000000           
  2103  00A5F4                     u720:
  2104                           ;DFMAIN.C: 747: {
  2105                           
  2106                           ;DFMAIN.C: 748: if (get_raw_switches() & 0x200)
  2107                           
  2108                           	line	748
  2109  00A5F4  0002CF06           	call	(_get_raw_switches)
              00000000           
  2110  00A5F8  00B22000           	and.w	#512,w0
  2111  00A5FA  00E00000           	cp0.w	w0
  2112  00A5FC  00320002           	bra	z,u731
  2113  00A5FE  0004A606           	goto	u730
              00000000           
  2114  00A602                     u731:
  2115  00A602  0004A626           	goto	l308
              00000000           
  2116  00A606                     u730:
  2117                           ;DFMAIN.C: 749: {
  2118                           
  2119                           ;DFMAIN.C: 750: CycleSwitchHeldAtExpirationCoun+
                                 +;
  2120                           
  2121                           	line	750
  2122  00A606  00EC2D64           	inc.w	_CycleSwitchHeldAtExpirationCoun
  2123                           ;DFMAIN.C: 751: if (CycleSwitchHeldAtExpirationC
                                 oun ==
  2124                           
  2125                           ;DFMAIN.C: 752: (3*50))
  2126                           
  2127                           	line	752
  2128  00A608  00200960           	mov.w	#096h,w0
  2129  00A60A  00E30D64           	cp.w	_CycleSwitchHeldAtExpirationCoun
  2130  00A60C  003A0002           	bra	nz,u741
  2131  00A60E  0004A616           	goto	u740
              00000000           
  2132  00A612                     u741:
  2133  00A612  0004A622           	goto	l309
              00000000           
  2134  00A616                     u740:
  2135                           ;DFMAIN.C: 753: {
  2136                           
  2137                           ;DFMAIN.C: 754: tone(0x09);
  2138                           
  2139                           	line	754
  2140  00A616  00200090           	mov.w	#09h,w0
  2141  00A618  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  2142                           ;DFMAIN.C: 755: RFCycleSPS = RFCycleSPSPreset;
  2143                           
  2144                           	line	755
  2145  00A61C  008089D6           	mov	_RFCycleSPSPreset,w6
  2146  00A61E  008889C6           	mov	w6,_RFCycleSPS
  2147                           ;DFMAIN.C: 756: FlashRFCycleCount = 0;
  2148                           
  2149                           	line	756
  2150  00A620  00EF2D6E           	clr.w	_FlashRFCycleCount
  2151                           	line	757
  2152  00A622                     l309:
  2153                           ;DFMAIN.C: 757: }
  2154                           
  2155                           ;DFMAIN.C: 758: }
  2156                           
  2157                           	line	758
  2158  00A622  0004A628           	goto	l310
              00000000           
  2159                           	line	759
  2160  00A626                     l308:
  2161                           ;DFMAIN.C: 759: else
  2162                           
  2163                           ;DFMAIN.C: 760: {
  2164                           
  2165                           ;DFMAIN.C: 761: CycleSwitchHeldAtExpirationCoun 
                                 = 0;
  2166                           
  2167                           	line	761
  2168  00A626  00EF2D64           	clr.w	_CycleSwitchHeldAtExpirationCoun
  2169                           	line	762
  2170  00A628                     l310:
  2171                           ;DFMAIN.C: 762: }
  2172                           
  2173                           ;DFMAIN.C: 764: if (get_raw_switches() & 0x02)
  2174                           
  2175                           	line	764
  2176  00A628  0002CF06           	call	(_get_raw_switches)
              00000000           
  2177  00A62C  00B20020           	and.w	#2,w0
  2178  00A62E  00E00000           	cp0.w	w0
  2179  00A630  00320002           	bra	z,u751
  2180  00A632  0004A63A           	goto	u750
              00000000           
  2181  00A636                     u751:
  2182  00A636  0004A65A           	goto	l311
              00000000           
  2183  00A63A                     u750:
  2184                           ;DFMAIN.C: 765: {
  2185                           
  2186                           ;DFMAIN.C: 766: CycleButtonHeldAtExpirationCoun+
                                 +;
  2187                           
  2188                           	line	766
  2189  00A63A  00EC2D60           	inc.w	_CycleButtonHeldAtExpirationCoun
  2190                           ;DFMAIN.C: 767: if (CycleButtonHeldAtExpirationC
                                 oun ==
  2191                           
  2192                           ;DFMAIN.C: 768: (50/5))
  2193                           
  2194                           	line	768
  2195  00A63C  00806B06           	mov	_CycleButtonHeldAtExpirationCoun,w6
  2196  00A63E  00E1306A           	cp.w	w6, #10
  2197  00A640  003A0002           	bra	nz,u761
  2198  00A642  0004A64A           	goto	u760
              00000000           
  2199  00A646                     u761:
  2200  00A646  0004A656           	goto	l312
              00000000           
  2201  00A64A                     u760:
  2202                           ;DFMAIN.C: 769: {
  2203                           
  2204                           ;DFMAIN.C: 770: tone(0x09);
  2205                           
  2206                           	line	770
  2207  00A64A  00200090           	mov.w	#09h,w0
  2208  00A64C  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  2209                           ;DFMAIN.C: 771: RFCycleSPS = RFCycleSPSPreset;
  2210                           
  2211                           	line	771
  2212  00A650  008089D6           	mov	_RFCycleSPSPreset,w6
  2213  00A652  008889C6           	mov	w6,_RFCycleSPS
  2214                           ;DFMAIN.C: 772: FlashRFCycleCount = 0;
  2215                           
  2216                           	line	772
  2217  00A654  00EF2D6E           	clr.w	_FlashRFCycleCount
  2218                           	line	773
  2219  00A656                     l312:
  2220                           ;DFMAIN.C: 773: }
  2221                           
  2222                           ;DFMAIN.C: 774: }
  2223                           
  2224                           	line	774
  2225  00A656  0004A65C           	goto	l313
              00000000           
  2226                           	line	775
  2227  00A65A                     l311:
  2228                           ;DFMAIN.C: 775: else
  2229                           
  2230                           ;DFMAIN.C: 776: {
  2231                           
  2232                           ;DFMAIN.C: 777: CycleButtonHeldAtExpirationCoun 
                                 = 0;
  2233                           
  2234                           	line	777
  2235  00A65A  00EF2D60           	clr.w	_CycleButtonHeldAtExpirationCoun
  2236                           	line	778
  2237  00A65C                     l313:
  2238                           	line	779
  2239  00A65C                     l307:
  2240                           ;DFMAIN.C: 778: }
  2241                           
  2242                           ;DFMAIN.C: 779: }
  2243                           
  2244                           ;DFMAIN.C: 788: if (ds.rfon == 0)
  2245                           
  2246                           	line	788
  2247  00A65C  00211446           	mov.w	#_ds,w6
  2248  00A65E  00780306           	mov.w	w6,w6
  2249  00A660  00B00086           	add.w	#8,w6
  2250  00A662  00E00016           	cp0.w	[w6]
  2251  00A664  003A0002           	bra	nz,u771
  2252  00A666  0004A66E           	goto	u770
              00000000           
  2253  00A66A                     u771:
  2254  00A66A  0004A6F4           	goto	l314
              00000000           
  2255  00A66E                     u770:
  2256                           ;DFMAIN.C: 789: {
  2257                           
  2258                           ;DFMAIN.C: 790: if (get_raw_switches() & 0x02)
  2259                           
  2260                           	line	790
  2261  00A66E  0002CF06           	call	(_get_raw_switches)
              00000000           
  2262  00A672  00B20020           	and.w	#2,w0
  2263  00A674  00E00000           	cp0.w	w0
  2264  00A676  00320002           	bra	z,u781
  2265  00A678  0004A680           	goto	u780
              00000000           
  2266  00A67C                     u781:
  2267  00A67C  0004A6EE           	goto	l315
              00000000           
  2268  00A680                     u780:
  2269                           ;DFMAIN.C: 791: {
  2270                           
  2271                           ;DFMAIN.C: 792: CycleButtonHeldCount++;
  2272                           
  2273                           	line	792
  2274  00A680  00EC2D62           	inc.w	_CycleButtonHeldCount
  2275                           ;DFMAIN.C: 793: if (SettingsMode == 0)
  2276                           
  2277                           	line	793
  2278  00A682  00E21140           	cp0.w	_SettingsMode
  2279  00A684  003A0002           	bra	nz,u791
  2280  00A686  0004A68E           	goto	u790
              00000000           
  2281  00A68A                     u791:
  2282  00A68A  0004A6BE           	goto	l316
              00000000           
  2283  00A68E                     u790:
  2284                           ;DFMAIN.C: 794: {
  2285                           
  2286                           ;DFMAIN.C: 795: if ((CycleButtonHeldCount == (3*
                                 50)) &&
  2287                           
  2288                           ;DFMAIN.C: 796: (CycleButtonReleased == 1))
  2289                           
  2290                           	line	796
  2291  00A68E  00200960           	mov.w	#096h,w0
  2292  00A690  00E30D62           	cp.w	_CycleButtonHeldCount
  2293  00A692  003A0009           	bra	nz,u801
  2294  00A694  0004A698           	goto	u800
              00000000           
  2295  00A698                     u800:
  2296  00A698  008089F6           	mov	_CycleButtonReleased,w6
  2297  00A69A  00E13061           	cp.w	w6, #1
  2298  00A69C  003A0004           	bra	nz,u811
  2299  00A69E  0004A6A2           	goto	u810
              00000000           
  2300  00A6A2                     u810:
  2301  00A6A2  0004A6AE           	goto	u820
              00000000           
  2302  00A6A6                     u801:
  2303  00A6A6                     u811:
  2304  00A6A6  0004A6AA           	goto	u821
              00000000           
  2305  00A6AA                     u821:
  2306  00A6AA  0004A6BA           	goto	l317
              00000000           
  2307  00A6AE                     u820:
  2308                           ;DFMAIN.C: 797: {
  2309                           
  2310                           ;DFMAIN.C: 798: tone(0x09);
  2311                           
  2312                           	line	798
  2313  00A6AE  00200090           	mov.w	#09h,w0
  2314  00A6B0  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  2315                           ;DFMAIN.C: 799: EnterSettingsMode();
  2316                           
  2317                           	signat	_EnterSettingsMode,26
  2318                           	line	799
  2319  00A6B4  0002BD56           	call	(_EnterSettingsMode)
              00000000           
  2320                           ;DFMAIN.C: 800: CycleButtonReleased = 0;
  2321                           
  2322                           	line	800
  2323  00A6B8  00EF313E           	clr.w	_CycleButtonReleased
  2324                           	line	801
  2325  00A6BA                     l317:
  2326                           ;DFMAIN.C: 801: }
  2327                           
  2328                           ;DFMAIN.C: 802: }
  2329                           
  2330                           	line	802
  2331  00A6BA  0004A6EA           	goto	l318
              00000000           
  2332                           	line	803
  2333  00A6BE                     l316:
  2334                           ;DFMAIN.C: 803: else
  2335                           
  2336                           ;DFMAIN.C: 804: {
  2337                           
  2338                           ;DFMAIN.C: 811: if ((RFCycleAdjusted == 1) &&
  2339                           
  2340                           ;DFMAIN.C: 812: (CycleButtonHeldCount == (50/5))
                                 )
  2341                           
  2342                           	line	812
  2343  00A6BE  00806B96           	mov	_RFCycleAdjusted,w6
  2344  00A6C0  00E13061           	cp.w	w6, #1
  2345  00A6C2  003A0009           	bra	nz,u831
  2346  00A6C4  0004A6C8           	goto	u830
              00000000           
  2347  00A6C8                     u830:
  2348  00A6C8  00806B16           	mov	_CycleButtonHeldCount,w6
  2349  00A6CA  00E1306A           	cp.w	w6, #10
  2350  00A6CC  003A0004           	bra	nz,u841
  2351  00A6CE  0004A6D2           	goto	u840
              00000000           
  2352  00A6D2                     u840:
  2353  00A6D2  0004A6DE           	goto	u850
              00000000           
  2354  00A6D6                     u831:
  2355  00A6D6                     u841:
  2356  00A6D6  0004A6DA           	goto	u851
              00000000           
  2357  00A6DA                     u851:
  2358  00A6DA  0004A6EA           	goto	l319
              00000000           
  2359  00A6DE                     u850:
  2360                           ;DFMAIN.C: 813: {
  2361                           
  2362                           ;DFMAIN.C: 826: tone(0x09);
  2363                           
  2364                           	line	826
  2365  00A6DE  00200090           	mov.w	#09h,w0
  2366  00A6E0  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  2367                           ;DFMAIN.C: 827: ExitSettingsMode();
  2368                           
  2369                           	signat	_ExitSettingsMode,26
  2370                           	line	827
  2371  00A6E4  0002BDB2           	call	(_ExitSettingsMode)
              00000000           
  2372                           ;DFMAIN.C: 828: CycleButtonReleased = 0;
  2373                           
  2374                           	line	828
  2375  00A6E8  00EF313E           	clr.w	_CycleButtonReleased
  2376                           	line	829
  2377  00A6EA                     l319:
  2378                           	line	830
  2379  00A6EA                     l318:
  2380                           ;DFMAIN.C: 829: }
  2381                           
  2382                           ;DFMAIN.C: 830: }
  2383                           
  2384                           ;DFMAIN.C: 831: }
  2385                           
  2386                           	line	831
  2387  00A6EA  0004A6F4           	goto	l320
              00000000           
  2388                           	line	832
  2389  00A6EE                     l315:
  2390                           ;DFMAIN.C: 832: else
  2391                           
  2392                           ;DFMAIN.C: 833: {
  2393                           
  2394                           ;DFMAIN.C: 834: CycleButtonHeldCount = 0;
  2395                           
  2396                           	line	834
  2397  00A6EE  00EF2D62           	clr.w	_CycleButtonHeldCount
  2398                           ;DFMAIN.C: 835: CycleButtonReleased = 1;
  2399                           
  2400                           	line	835
  2401  00A6F0  00EF313E           	clr.w	_CycleButtonReleased
  2402  00A6F2  00EC313E           	inc.w	_CycleButtonReleased
  2403                           	line	836
  2404  00A6F4                     l320:
  2405                           	line	837
  2406  00A6F4                     l314:
  2407                           ;DFMAIN.C: 836: }
  2408                           
  2409                           ;DFMAIN.C: 837: }
  2410                           
  2411                           ;DFMAIN.C: 841: if (ds.rfon)
  2412                           
  2413                           	line	841
  2414  00A6F4  00211446           	mov.w	#_ds,w6
  2415  00A6F6  00780306           	mov.w	w6,w6
  2416  00A6F8  00B00086           	add.w	#8,w6
  2417  00A6FA  00E00016           	cp0.w	[w6]
  2418  00A6FC  00320002           	bra	z,u861
  2419  00A6FE  0004A706           	goto	u860
              00000000           
  2420  00A702                     u861:
  2421  00A702  0004A7A2           	goto	l321
              00000000           
  2422  00A706                     u860:
  2423                           ;DFMAIN.C: 842: {
  2424                           
  2425                           ;DFMAIN.C: 844: SetPowerSetting(pwr_setting);
  2426                           
  2427                           	line	844
  2428  00A706  0097B82F           	mov.w	[sp+((0+f33536+22)-0)],w0
  2429  00A708  0002BD48           	call	(_SetPowerSetting)	;0 bytes adjustment
              00000000           
  2430                           ;DFMAIN.C: 845: ablate_power(&ds, pwr_setting);
  2431                           
  2432                           	signat	_ablate_power,8250
  2433                           	line	845
  2434  00A70C  0097B92F           	mov.w	[sp+((0+f33536+22)-0)],w2
  2435  00A70E  00211446           	mov.w	#_ds,w6
  2436  00A710  00780006           	mov.w	w6,w0
  2437  00A712  0002B65C           	call	(_ablate_power)	;0 bytes adjustment
              00000000           
  2438                           ;DFMAIN.C: 849: slTemp = (signed int)ds.RFpower 
                                 - (signed int)ds.power_setp;
  2439                           
  2440                           	line	849
  2441  00A716  00211446           	mov.w	#_ds,w6
  2442  00A718  00780306           	mov.w	w6,w6
  2443  00A71A  00B00106           	add.w	#16,w6
  2444  00A71C  00780296           	mov.w	[w6],w5
  2445  00A71E  00211446           	mov.w	#_ds,w6
  2446  00A720  00780306           	mov.w	w6,w6
  2447  00A722  00B00166           	add.w	#22,w6
  2448  00A724  00780396           	mov.w	[w6],w7
  2449  00A726  00538385           	sub.w	w7,w5,w7
  2450  00A728  00780307           	mov.w	w7,w6
  2451  00A72A  00EB0380           	clr.w	w7
  2452  00A72C  00A7F006           	btsc	w6,#15
  2453  00A72E  00EB8380           	setm	w7
  2454  00A730  00886C06           	mov.w	w6, F9705
  2455  00A732  00886C17           	mov.w	w7, F9705+2
  2456                           ;DFMAIN.C: 850: slTemp = (slTemp * 100) / ds.pow
                                 er_setp;
  2457                           
  2458                           	line	850
  2459  00A734  00200003           	mov.w	#highword(064h), w3
  2460  00A736  00200642           	mov.w	#(064h & 0ffffh), w2
  2461  00A738  00806C04           	mov.w	F9705,w4
  2462  00A73A  00806C15           	mov.w	F9705+2,w5
  2463  00A73C  00BE8004           	mov.d	w4,w0
  2464                           	global	almul
  2465  00A73E  0002FB96           	call	almul
              00000000           
  2466  00A742  00211446           	mov.w	#_ds,w6
  2467  00A744  00780306           	mov.w	w6,w6
  2468  00A746  00B00106           	add.w	#16,w6
  2469  00A748  00780396           	mov.w	[w6],w7
  2470  00A74A  00780107           	mov.w	w7,w2
  2471  00A74C  00EB0180           	clr.w	w3
  2472                           	global	aldiv
  2473  00A74E  0002FB62           	call	aldiv
              00000000           
  2474  00A752  00886C00           	mov.w	w0, F9705
  2475  00A754  00886C11           	mov.w	w1, F9705+2
  2476                           ;DFMAIN.C: 855: if (slTemp < (10))
  2477                           
  2478                           	line	855
  2479  00A756  00200007           	mov.w	#highword(0Ah), w7
  2480  00A758  002000A6           	mov.w	#(0Ah & 0ffffh), w6
  2481  00A75A  00806C04           	mov.w	F9705,w4
  2482  00A75C  00806C15           	mov.w	F9705+2,w5
  2483  00A75E  00280003           	mov.w	#8000h,w3
  2484  00A760  006A8103           	xor	w5,w3,w2
  2485  00A762  006B8183           	xor	w7,w3,w3
  2486  00A764  00E11003           	cp.w	w2, w3
  2487  00A766  003A0001           	bra	nz,u875
  2488  00A768  00E12006           	cp.w	w4, w6
  2489  00A76A                     u875:
  2490  00A76A  00310002           	bra	geu,u871
  2491  00A76C  0004A774           	goto	u870
              00000000           
  2492  00A770                     u871:
  2493  00A770  0004A77A           	goto	l322
              00000000           
  2494  00A774                     u870:
  2495                           ;DFMAIN.C: 856: {
  2496                           
  2497                           ;DFMAIN.C: 857: ds.faultCount = 0;
  2498                           
  2499                           	line	857
  2500  00A774  00200006           	mov.w	#0,w6
  2501  00A776  00211887           	mov	#_ds+68,w7
  2502  00A778  00780B86           	mov.w	w6,[w7]
  2503                           	line	858
  2504  00A77A                     l322:
  2505                           ;DFMAIN.C: 858: }
  2506                           
  2507                           ;DFMAIN.C: 865: ds.rfontime++;
  2508                           
  2509                           	line	865
  2510  00A77A  00211446           	mov.w	#_ds,w6
  2511  00A77C  00780306           	mov.w	w6,w6
  2512  00A77E  00B00026           	add.w	#2,w6
  2513  00A780  00E80B16           	inc.w	[w6],[w6]
  2514                           ;DFMAIN.C: 866: ds.totalrfontime++;
  2515                           
  2516                           	line	866
  2517  00A782  00211446           	mov.w	#_ds,w6
  2518  00A784  00780306           	mov.w	w6,w6
  2519  00A786  00B00046           	add.w	#4,w6
  2520  00A788  00780396           	mov.w	[w6],w7
  2521  00A78A  00439B61           	add.w	w7,#1,[w6++]
  2522  00A78C  00780396           	mov.w	[w6],w7
  2523  00A78E  004B9360           	addc.w	w7,#0,[w6--]
  2524                           ;DFMAIN.C: 867: if (RFCycleSPS > 0)
  2525                           
  2526                           	line	867
  2527  00A790  00E21138           	cp0.w	_RFCycleSPS
  2528  00A792  00320002           	bra	z,u881
  2529  00A794  0004A79C           	goto	u880
              00000000           
  2530  00A798                     u881:
  2531  00A798  0004A79E           	goto	l323
              00000000           
  2532  00A79C                     u880:
  2533                           ;DFMAIN.C: 868: {
  2534                           
  2535                           ;DFMAIN.C: 869: RFCycleSPS--;
  2536                           
  2537                           	line	869
  2538  00A79C  00ED3138           	dec.w	_RFCycleSPS
  2539                           	line	870
  2540  00A79E                     l323:
  2541                           ;DFMAIN.C: 870: }
  2542                           
  2543                           ;DFMAIN.C: 871: }
  2544                           
  2545                           	line	871
  2546  00A79E  0004A7AA           	goto	l324
              00000000           
  2547                           	line	872
  2548  00A7A2                     l321:
  2549                           ;DFMAIN.C: 872: else
  2550                           
  2551                           ;DFMAIN.C: 873: imp_pulse_measure(&ds);
  2552                           
  2553                           	line	873
  2554  00A7A2  00211446           	mov.w	#_ds,w6
  2555  00A7A4  00780006           	mov.w	w6,w0
  2556  00A7A6  0002BB6C           	call	(_imp_pulse_measure)	;0 bytes adjustment
              00000000           
  2557  00A7AA                     l324:
  2558                           ;DFMAIN.C: 877: get_temperature(&ds);
  2559                           
  2560                           	signat	_get_temperature,4154
  2561                           	line	877
  2562  00A7AA  00211446           	mov.w	#_ds,w6
  2563  00A7AC  00780006           	mov.w	w6,w0
  2564  00A7AE  0002BA3C           	call	(_get_temperature)	;0 bytes adjustment
              00000000           
  2565                           ;DFMAIN.C: 881: if (s_reg & 0x00001L)
  2566                           
  2567                           	line	881
  2568  00A7B2  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  2569  00A7B4  00478306           	add.w	sp,w6,w6
  2570  00A7B6  00BE0216           	mov.d	[w6],w4
  2571  00A7B8  00200007           	mov.w	#highword(01h), w7
  2572  00A7BA  00200016           	mov.w	#(01h & 0ffffh), w6
  2573  00A7BC  00620106           	and.w	w4,w6,w2
  2574  00A7BE  00628187           	and.w	w5,w7,w3
  2575  00A7C0  00E00003           	cp0.w	w3
  2576  00A7C2  003A0001           	bra	nz,u895
  2577  00A7C4  00E00002           	cp0.w	w2
  2578  00A7C6                     	u895:
  2579  00A7C6  00320002           	bra	z,u891
  2580  00A7C8  0004A7D0           	goto	u890
              00000000           
  2581  00A7CC                     u891:
  2582  00A7CC  0004A7E4           	goto	l325
              00000000           
  2583  00A7D0                     u890:
  2584                           ;DFMAIN.C: 883: s_reg &=
  2585                           
  2586                           ;DFMAIN.C: 884: ~(0x00004L | 0x00010L | 0x00040L
                                  | 0x08000L);
  2587                           
  2588                           	line	884
  2589  00A7D0  002FFFF5           	mov.w	#highword(-32853), w5
  2590  00A7D2  0027FAB4           	mov.w	#(-32853 & 0ffffh), w4
  2591  00A7D4  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  2592  00A7D6  00478306           	add.w	sp,w6,w6
  2593  00A7D8  00780396           	mov.w	[w6],w7
  2594  00A7DA  00639B04           	and.w	w7,w4,[w6++]
  2595  00A7DC  00780396           	mov.w	[w6],w7
  2596  00A7DE  00639305           	and.w	w7,w5,[w6--]
  2597  00A7E0  0004A80C           	goto	l326
              00000000           
  2598                           	line	885
  2599  00A7E4                     l325:
  2600                           ;DFMAIN.C: 885: else
  2601                           
  2602                           ;DFMAIN.C: 886: {
  2603                           
  2604                           ;DFMAIN.C: 888: s_reg =
  2605                           
  2606                           ;DFMAIN.C: 889: s_reg & ~(0x00004L | 0x00010L | 
                                 0x00040L | 0x08000L)
  2607                           
  2608                           ;DFMAIN.C: 890: | ((s_reg & (0x00002L | 0x00008L
                                  | 0x00020L | 0x04000L)) << 1);
  2609                           
  2610                           	line	890
  2611  00A7E4  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  2612  00A7E6  00478306           	add.w	sp,w6,w6
  2613  00A7E8  00BE0216           	mov.d	[w6],w4
  2614  00A7EA  00200007           	mov.w	#highword(0402Ah), w7
  2615  00A7EC  002402A6           	mov.w	#(0402Ah & 0ffffh), w6
  2616  00A7EE  00620106           	and.w	w4,w6,w2
  2617  00A7F0  00628187           	and.w	w5,w7,w3
  2618  00A7F2  00D00202           	sl	w2,w4
  2619  00A7F4  00D28283           	rlc	w3,w5
  2620  00A7F6  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  2621  00A7F8  00478306           	add.w	sp,w6,w6
  2622  00A7FA  00BE0116           	mov.d	[w6],w2
  2623  00A7FC  002FFFF7           	mov.w	#highword(-32853), w7
  2624  00A7FE  0027FAB6           	mov.w	#(-32853 & 0ffffh), w6
  2625  00A800  00610006           	and.w	w2,w6,w0
  2626  00A802  00618087           	and.w	w3,w7,w1
  2627  00A804  00700304           	ior.w	w0,w4,w6
  2628  00A806  00708385           	ior.w	w1,w5,w7
  2629  00A808  009FBF86           	mov.w	w6,[sp+((0+f33536+18)-0)]
  2630  00A80A  009FBF97           	mov.w	w7,[sp+((0+f33536+18)-0+2)]
  2631                           	line	891
  2632  00A80C                     l326:
  2633                           ;DFMAIN.C: 891: }
  2634                           
  2635                           ;DFMAIN.C: 916: if ((displaytimer = timecount % 
                                 50) == 0 || displaytimer == (50 / 2))
  2636                           
  2637                           	line	916
  2638  00A80C  00200003           	mov.w	#highword(032h), w3
  2639  00A80E  00200322           	mov.w	#(032h & 0ffffh), w2
  2640  00A810  002FFDE6           	mov.w	#((0+f33536+0)-0),w6
  2641  00A812  00478306           	add.w	sp,w6,w6
  2642  00A814  00BE0016           	mov.d	[w6],w0
  2643                           	global	llmod
  2644  00A816  0002FB40           	call	llmod
              00000000           
  2645  00A81A  002FFE66           	mov.w	#((0+f33536+8)-0),w6
  2646  00A81C  00478306           	add.w	sp,w6,w6
  2647  00A81E  00780B00           	mov.w	w0,[w6]
  2648  00A820  00E00016           	cp0.w	[w6]
  2649  00A822  003A0002           	bra	nz,u901
  2650  00A824  0004A832           	goto	u900
              00000000           
  2651  00A828                     u901:
  2652  00A828  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2653  00A82A  00E13079           	cp.w	w6, #25
  2654  00A82C  003A0004           	bra	nz,u911
  2655  00A82E  0004A832           	goto	u910
              00000000           
  2656  00A832                     u900:
  2657  00A832                     u910:
  2658  00A832  0004A83E           	goto	u920
              00000000           
  2659  00A836                     u911:
  2660  00A836  0004A83A           	goto	u921
              00000000           
  2661  00A83A                     u921:
  2662  00A83A  0004A854           	goto	l327
              00000000           
  2663  00A83E                     u920:
  2664                           ;DFMAIN.C: 917: {
  2665                           
  2666                           ;DFMAIN.C: 918: display_time(ds.totalrfontime, R
                                 FCycleSPS);
  2667                           
  2668                           	signat	_display_time,8250
  2669                           	line	918
  2670  00A83E  00211386           	mov.w	#_RFCycleSPS,w6
  2671  00A840  00780116           	mov.w	[w6],w2
  2672  00A842  00211446           	mov.w	#_ds,w6
  2673  00A844  00780306           	mov.w	w6,w6
  2674  00A846  00B00046           	add.w	#4,w6
  2675  00A848  00780036           	mov.w	[w6++],w0
  2676  00A84A  007800A6           	mov.w	[w6--],w1
  2677  00A84C  0002B4A8           	call	(_display_time)	;0 bytes adjustment
              00000000           
  2678                           ;DFMAIN.C: 919: }
  2679                           
  2680                           	line	919
  2681  00A850  0004ABCC           	goto	l328
              00000000           
  2682                           	line	920
  2683  00A854                     l327:
  2684                           ;DFMAIN.C: 920: else if (displaytimer == 4 || di
                                 splaytimer == (50 / 2) + 4)
  2685                           
  2686  00A854  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2687  00A856  00E13064           	cp.w	w6, #4
  2688  00A858  003A0002           	bra	nz,u931
  2689  00A85A  0004A868           	goto	u930
              00000000           
  2690  00A85E                     u931:
  2691  00A85E  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2692  00A860  00E1307D           	cp.w	w6, #29
  2693  00A862  003A0004           	bra	nz,u941
  2694  00A864  0004A868           	goto	u940
              00000000           
  2695  00A868                     u930:
  2696  00A868                     u940:
  2697  00A868  0004A874           	goto	u950
              00000000           
  2698  00A86C                     u941:
  2699  00A86C  0004A870           	goto	u951
              00000000           
  2700  00A870                     u951:
  2701  00A870  0004A880           	goto	l329
              00000000           
  2702  00A874                     u950:
  2703                           ;DFMAIN.C: 921: {
  2704                           
  2705                           ;DFMAIN.C: 923: gDFDisplyPrintPowerValueTextIte(
                                 pwr_setting);
  2706                           
  2707                           	global	_gDFDisplyPrintPowerValueTextIte
  2708                           	signat	_gDFDisplyPrintPowerValueTextIte,4154
  2709                           	line	923
  2710  00A874  0097BB2F           	mov.w	[sp+((0+f33536+22)-0)], w6
  2711  00A876  00784006           	mov.b	w6,w0
  2712  00A878  00029070           	call	(_gDFDisplyPrintPowerValueTextIte)	;0 byte
              00000000           s adjustment
  2713                           ;DFMAIN.C: 925: }
  2714                           
  2715                           	line	925
  2716  00A87C  0004ABCC           	goto	l330
              00000000           
  2717                           	line	926
  2718  00A880                     l329:
  2719                           ;DFMAIN.C: 926: else if (displaytimer == 6 || di
                                 splaytimer == (50 / 2) + 6 && !(ablate_bad_imp_c
                                 nt))
  2720                           
  2721  00A880  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2722  00A882  00E13066           	cp.w	w6, #6
  2723  00A884  003A0002           	bra	nz,u961
  2724  00A886  0004A8A8           	goto	u960
              00000000           
  2725  00A88A                     u961:
  2726  00A88A  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2727  00A88C  00E1307F           	cp.w	w6, #31
  2728  00A88E  003A000A           	bra	nz,u971
  2729  00A890  0004A894           	goto	u970
              00000000           
  2730  00A894                     u970:
  2731  00A894  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
  2732  00A896  00478306           	add.w	sp,w6,w6
  2733  00A898  00E00016           	cp0.w	[w6]
  2734  00A89A  003A0004           	bra	nz,u981
  2735  00A89C  0004A8A0           	goto	u980
              00000000           
  2736  00A8A0                     u980:
  2737  00A8A0  0004A8A8           	goto	u990
              00000000           
  2738  00A8A4                     u971:
  2739  00A8A4                     u981:
  2740  00A8A4  0004A8AC           	goto	u991
              00000000           
  2741  00A8A8                     u960:
  2742  00A8A8                     u990:
  2743  00A8A8  0004A8B4           	goto	u1000
              00000000           
  2744  00A8AC                     u991:
  2745  00A8AC  0004A8B0           	goto	u1001
              00000000           
  2746  00A8B0                     u1001:
  2747  00A8B0  0004A8CA           	goto	l331
              00000000           
  2748  00A8B4                     u1000:
  2749                           ;DFMAIN.C: 927: {
  2750                           
  2751                           ;DFMAIN.C: 928: gDFDisplyPrintImpedanceGraphicI(
                                 ds.impedance, isDeviceConnected(),
  2752                           
  2753                           ;DFMAIN.C: 929: ablate_bad_imp_cnt, 0);
  2754                           
  2755                           	global	_gDFDisplyPrintImpedanceGraphicI
  2756                           	signat	_gDFDisplyPrintImpedanceGraphicI,16442
  2757                           	signat	_isDeviceConnected,26
  2758                           	line	929
  2759  00A8B4  0002BCAA           	call	(_isDeviceConnected)
              00000000           
  2760  00A8B8  00780100           	mov	w0, w2
  2761  00A8BA  00211446           	mov.w	#_ds,w6
  2762  00A8BC  00780016           	mov.w	[w6],w0
  2763  00A8BE  0097B27F           	mov.w	[sp+((0+f33536+16)-0)],w4
  2764  00A8C0  00200006           	mov.w	#0,w6
  2765  00A8C2  00028B2C           	call	(_gDFDisplyPrintImpedanceGraphicI)	;0 byte
              00000000           s adjustment
  2766                           ;DFMAIN.C: 930: }
  2767                           
  2768                           	line	930
  2769  00A8C6  0004ABCC           	goto	l332
              00000000           
  2770                           	line	931
  2771  00A8CA                     l331:
  2772                           ;DFMAIN.C: 931: else if (displaytimer == (50 / 2
                                 ) + 6 && ablate_bad_imp_cnt)
  2773                           
  2774  00A8CA  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2775  00A8CC  00E1307F           	cp.w	w6, #31
  2776  00A8CE  003A000A           	bra	nz,u1011
  2777  00A8D0  0004A8D4           	goto	u1010
              00000000           
  2778  00A8D4                     u1010:
  2779  00A8D4  002FFEE6           	mov.w	#((0+f33536+16)-0),w6
  2780  00A8D6  00478306           	add.w	sp,w6,w6
  2781  00A8D8  00E00016           	cp0.w	[w6]
  2782  00A8DA  00320004           	bra	z,u1021
  2783  00A8DC  0004A8E0           	goto	u1020
              00000000           
  2784  00A8E0                     u1020:
  2785  00A8E0  0004A8EC           	goto	u1030
              00000000           
  2786  00A8E4                     u1011:
  2787  00A8E4                     u1021:
  2788  00A8E4  0004A8E8           	goto	u1031
              00000000           
  2789  00A8E8                     u1031:
  2790  00A8E8  0004A902           	goto	l333
              00000000           
  2791  00A8EC                     u1030:
  2792                           ;DFMAIN.C: 932: {
  2793                           
  2794                           ;DFMAIN.C: 933: gDFDisplyPrintImpedanceGraphicI(
                                 ds.impedance, isDeviceConnected(),
  2795                           
  2796                           ;DFMAIN.C: 934: ablate_bad_imp_cnt, 0);
  2797                           
  2798                           	line	934
  2799  00A8EC  0002BCAA           	call	(_isDeviceConnected)
              00000000           
  2800  00A8F0  00780100           	mov	w0, w2
  2801  00A8F2  00211446           	mov.w	#_ds,w6
  2802  00A8F4  00780016           	mov.w	[w6],w0
  2803  00A8F6  0097B27F           	mov.w	[sp+((0+f33536+16)-0)],w4
  2804  00A8F8  00200006           	mov.w	#0,w6
  2805  00A8FA  00028B2C           	call	(_gDFDisplyPrintImpedanceGraphicI)	;0 byte
              00000000           s adjustment
  2806                           ;DFMAIN.C: 935: }
  2807                           
  2808                           	line	935
  2809  00A8FE  0004ABCC           	goto	l334
              00000000           
  2810                           	line	936
  2811  00A902                     l333:
  2812                           ;DFMAIN.C: 936: else if (displaytimer == 18)
  2813                           
  2814  00A902  0097B33F           	mov.w	[sp+((0+f33536+8)-0)],w6
  2815  00A904  00E13072           	cp.w	w6, #18
  2816  00A906  003A0002           	bra	nz,u1041
  2817  00A908  0004A910           	goto	u1040
              00000000           
  2818  00A90C                     u1041:
  2819  00A90C  0004ABCC           	goto	l335
              00000000           
  2820  00A910                     u1040:
  2821                           ;DFMAIN.C: 937: {
  2822                           
  2823                           ;DFMAIN.C: 943: if ((RFCycleAdjusted == 0) || (P
                                 ostStartupRFCycleAdjusted == 0))
  2824                           
  2825                           	line	943
  2826  00A910  00E20D72           	cp0.w	_RFCycleAdjusted
  2827  00A912  003A0002           	bra	nz,u1051
  2828  00A914  0004A920           	goto	u1050
              00000000           
  2829  00A918                     u1051:
  2830  00A918  00E2113C           	cp0.w	_PostStartupRFCycleAdjusted
  2831  00A91A  003A0004           	bra	nz,u1061
  2832  00A91C  0004A920           	goto	u1060
              00000000           
  2833  00A920                     u1050:
  2834  00A920                     u1060:
  2835  00A920  0004A92C           	goto	u1070
              00000000           
  2836  00A924                     u1061:
  2837  00A924  0004A928           	goto	u1071
              00000000           
  2838  00A928                     u1071:
  2839  00A928  0004A958           	goto	l336
              00000000           
  2840  00A92C                     u1070:
  2841                           ;DFMAIN.C: 944: {
  2842                           
  2843                           ;DFMAIN.C: 947: if (RFCycleEraseOnly == 0)
  2844                           
  2845                           	line	947
  2846  00A92C  00E20D74           	cp0.w	_RFCycleEraseOnly
  2847  00A92E  003A0002           	bra	nz,u1081
  2848  00A930  0004A938           	goto	u1080
              00000000           
  2849  00A934                     u1081:
  2850  00A934  0004A940           	goto	l337
              00000000           
  2851  00A938                     u1080:
  2852                           ;DFMAIN.C: 948: {
  2853                           
  2854                           ;DFMAIN.C: 949: RFCycleEraseOnly = 1;
  2855                           
  2856                           	line	949
  2857  00A938  00EF2D74           	clr.w	_RFCycleEraseOnly
  2858  00A93A  00EC2D74           	inc.w	_RFCycleEraseOnly
  2859                           ;DFMAIN.C: 950: }
  2860                           
  2861                           	line	950
  2862  00A93C  0004A942           	goto	l338
              00000000           
  2863                           	line	951
  2864  00A940                     l337:
  2865                           ;DFMAIN.C: 951: else
  2866                           
  2867                           ;DFMAIN.C: 952: {
  2868                           
  2869                           ;DFMAIN.C: 953: RFCycleEraseOnly = 0;
  2870                           
  2871                           	line	953
  2872  00A940  00EF2D74           	clr.w	_RFCycleEraseOnly
  2873                           	line	954
  2874  00A942                     l338:
  2875                           ;DFMAIN.C: 954: }
  2876                           
  2877                           ;DFMAIN.C: 955: gDFDisplyPrintRFCycleValueTextI(
                                 RFCycleSPS/50, 1, RFCycleEraseOnly);
  2878                           
  2879                           	line	955
  2880  00A942  0020D746           	mov.w	#_RFCycleEraseOnly,w6
  2881  00A944  00780216           	mov.w	[w6],w4
  2882  00A946  00200012           	mov.w	#01h,w2
  2883  00A948  00200327           	mov.w	#032h,w7
  2884  00A94A  008089C6           	mov	_RFCycleSPS,w6
  2885  00A94C  00090011           	repeat	#18-1
  2886  00A94E  00D88307           	div.uw	w6,w7
  2887  00A950  0002911C           	call	(_gDFDisplyPrintRFCycleValueTextI)	;0 byte
              00000000           s adjustment
  2888                           ;DFMAIN.C: 956: }
  2889                           
  2890                           	line	956
  2891  00A954  0004AB0A           	goto	l339
              00000000           
  2892                           	line	957
  2893  00A958                     l336:
  2894                           ;DFMAIN.C: 957: else
  2895                           
  2896                           ;DFMAIN.C: 958: {
  2897                           
  2898                           ;DFMAIN.C: 959: if (RFCycleSet == 1)
  2899                           
  2900                           	line	959
  2901  00A958  00806BB6           	mov	_RFCycleSet,w6
  2902  00A95A  00E13061           	cp.w	w6, #1
  2903  00A95C  003A0002           	bra	nz,u1091
  2904  00A95E  0004A966           	goto	u1090
              00000000           
  2905  00A962                     u1091:
  2906  00A962  0004AB0A           	goto	l340
              00000000           
  2907  00A966                     u1090:
  2908                           ;DFMAIN.C: 960: {
  2909                           
  2910                           ;DFMAIN.C: 968: if (FlashRFCycleCount > 0)
  2911                           
  2912                           	line	968
  2913  00A966  00E20D6E           	cp0.w	_FlashRFCycleCount
  2914  00A968  00320002           	bra	z,u1101
  2915  00A96A  0004A972           	goto	u1100
              00000000           
  2916  00A96E                     u1101:
  2917  00A96E  0004A9A6           	goto	l341
              00000000           
  2918  00A972                     u1100:
  2919                           ;DFMAIN.C: 969: {
  2920                           
  2921                           ;DFMAIN.C: 970: PriorFlashRFCycleCount = FlashRF
                                 CycleCount;
  2922                           
  2923                           	line	970
  2924  00A972  00806B76           	mov	_FlashRFCycleCount,w6
  2925  00A974  00886B86           	mov	w6,_PriorFlashRFCycleCount
  2926                           ;DFMAIN.C: 971: FlashRFCycleCount -= 50;
  2927                           
  2928                           	line	971
  2929  00A976  00200320           	mov.w	#032h,w0
  2930  00A978  00B52D6E           	sub.w	_FlashRFCycleCount	;sub _FlashRFCycleCoun
                                 t with w0
  2931                           ;DFMAIN.C: 972: if (RFCycleEraseOnly == 0)
  2932                           
  2933                           	line	972
  2934  00A97A  00E20D74           	cp0.w	_RFCycleEraseOnly
  2935  00A97C  003A0002           	bra	nz,u1111
  2936  00A97E  0004A986           	goto	u1110
              00000000           
  2937  00A982                     u1111:
  2938  00A982  0004A98E           	goto	l342
              00000000           
  2939  00A986                     u1110:
  2940                           ;DFMAIN.C: 973: {
  2941                           
  2942                           ;DFMAIN.C: 974: RFCycleEraseOnly = 1;
  2943                           
  2944                           	line	974
  2945  00A986  00EF2D74           	clr.w	_RFCycleEraseOnly
  2946  00A988  00EC2D74           	inc.w	_RFCycleEraseOnly
  2947                           ;DFMAIN.C: 975: }
  2948                           
  2949                           	line	975
  2950  00A98A  0004A990           	goto	l343
              00000000           
  2951                           	line	976
  2952  00A98E                     l342:
  2953                           ;DFMAIN.C: 976: else
  2954                           
  2955                           ;DFMAIN.C: 977: {
  2956                           
  2957                           ;DFMAIN.C: 978: RFCycleEraseOnly = 0;
  2958                           
  2959                           	line	978
  2960  00A98E  00EF2D74           	clr.w	_RFCycleEraseOnly
  2961                           	line	979
  2962  00A990                     l343:
  2963                           ;DFMAIN.C: 979: }
  2964                           
  2965                           ;DFMAIN.C: 980: gDFDisplyPrintRFCycleValueTextI(
                                 RFCycleSPS/50, 1, RFCycleEraseOnly);
  2966                           
  2967                           	line	980
  2968  00A990  0020D746           	mov.w	#_RFCycleEraseOnly,w6
  2969  00A992  00780216           	mov.w	[w6],w4
  2970  00A994  00200012           	mov.w	#01h,w2
  2971  00A996  00200327           	mov.w	#032h,w7
  2972  00A998  008089C6           	mov	_RFCycleSPS,w6
  2973  00A99A  00090011           	repeat	#18-1
  2974  00A99C  00D88307           	div.uw	w6,w7
  2975  00A99E  0002911C           	call	(_gDFDisplyPrintRFCycleValueTextI)	;0 byte
              00000000           s adjustment
  2976                           ;DFMAIN.C: 981: }
  2977                           
  2978                           	line	981
  2979  00A9A2  0004A9C4           	goto	l344
              00000000           
  2980                           	line	982
  2981  00A9A6                     l341:
  2982                           ;DFMAIN.C: 982: else
  2983                           
  2984                           ;DFMAIN.C: 983: {
  2985                           
  2986                           ;DFMAIN.C: 984: if (PriorFlashRFCycleCount > 0)
  2987                           
  2988                           	line	984
  2989  00A9A6  00E20D70           	cp0.w	_PriorFlashRFCycleCount
  2990  00A9A8  00320002           	bra	z,u1121
  2991  00A9AA  0004A9B2           	goto	u1120
              00000000           
  2992  00A9AE                     u1121:
  2993  00A9AE  0004A9C4           	goto	l345
              00000000           
  2994  00A9B2                     u1120:
  2995                           ;DFMAIN.C: 985: {
  2996                           
  2997                           ;DFMAIN.C: 988: PriorFlashRFCycleCount = 0;
  2998                           
  2999                           	line	988
  3000  00A9B2  00EF2D70           	clr.w	_PriorFlashRFCycleCount
  3001                           ;DFMAIN.C: 989: gDFDisplyPrintRFCycleValueTextI(
                                 RFCycleSPS/50, 1, 0);
  3002                           
  3003                           	line	989
  3004  00A9B4  00200004           	mov.w	#0,w4
  3005  00A9B6  00200012           	mov.w	#01h,w2
  3006  00A9B8  00200327           	mov.w	#032h,w7
  3007  00A9BA  008089C6           	mov	_RFCycleSPS,w6
  3008  00A9BC  00090011           	repeat	#18-1
  3009  00A9BE  00D88307           	div.uw	w6,w7
  3010  00A9C0  0002911C           	call	(_gDFDisplyPrintRFCycleValueTextI)	;0 byte
              00000000           s adjustment
  3011                           	line	990
  3012  00A9C4                     l345:
  3013                           	line	991
  3014  00A9C4                     l344:
  3015                           ;DFMAIN.C: 990: }
  3016                           
  3017                           ;DFMAIN.C: 991: }
  3018                           
  3019                           ;DFMAIN.C: 995: if (SettingsMode == 0)
  3020                           
  3021                           	line	995
  3022  00A9C4  00E21140           	cp0.w	_SettingsMode
  3023  00A9C6  003A0002           	bra	nz,u1131
  3024  00A9C8  0004A9D0           	goto	u1130
              00000000           
  3025  00A9CC                     u1131:
  3026  00A9CC  0004AB0A           	goto	l346
              00000000           
  3027  00A9D0                     u1130:
  3028                           ;DFMAIN.C: 996: {
  3029                           
  3030                           ;DFMAIN.C: 997: if (isDeviceConnected())
  3031                           
  3032                           	line	997
  3033  00A9D0  0002BCAA           	call	(_isDeviceConnected)
              00000000           
  3034  00A9D4  00E00000           	cp0.w	w0
  3035  00A9D6  00320002           	bra	z,u1141
  3036  00A9D8  0004A9E0           	goto	u1140
              00000000           
  3037  00A9DC                     u1141:
  3038  00A9DC  0004AAB8           	goto	l347
              00000000           
  3039  00A9E0                     u1140:
  3040                           ;DFMAIN.C: 998: {
  3041                           
  3042                           ;DFMAIN.C: 1001: DeviceDisconnectReported = 0;
  3043                           
  3044                           	line	1001
  3045  00A9E0  00EF2D6A           	clr.w	_DeviceDisconnectReported
  3046                           ;DFMAIN.C: 1002: if (DeviceConnectReported == 0)
  3047                           
  3048                           	line	1002
  3049  00A9E2  00E20D68           	cp0.w	_DeviceConnectReported
  3050  00A9E4  003A0002           	bra	nz,u1151
  3051  00A9E6  0004A9EE           	goto	u1150
              00000000           
  3052  00A9EA                     u1151:
  3053  00A9EA  0004AA58           	goto	l348
              00000000           
  3054  00A9EE                     u1150:
  3055                           ;DFMAIN.C: 1003: {
  3056                           
  3057                           ;DFMAIN.C: 1004: DeviceConnectReported = 1;
  3058                           
  3059                           	line	1004
  3060  00A9EE  00EF2D68           	clr.w	_DeviceConnectReported
  3061  00A9F0  00EC2D68           	inc.w	_DeviceConnectReported
  3062                           ;DFMAIN.C: 1005: gDFDisplyPrintTextItem(CONNECT_
                                 DEVICE_DISPLAY_ITEM_ID,
  3063                           
  3064                           ;DFMAIN.C: 1006: "null", 0);
  3065                           
  3066                           	global	_gDFDisplyPrintTextItem
  3067                           	signat	_gDFDisplyPrintTextItem,12346
  3068                           	line	1006
  3069  00A9F2  00200004           	mov.w	#0,w4
  3070  00A9F4  00285A62           	mov.w	#u119,w2
  3071  00A9F6  002000B0           	mov.w	#0Bh,w0
  3072  00A9F8  000298D6           	call	(_gDFDisplyPrintTextItem)	;0 bytes adjustm
              00000000           ent
  3073                           ;DFMAIN.C: 1018: gDFDisplyPrintTemperatureValues
                                 (ds.setting,
  3074                           
  3075                           ;DFMAIN.C: 1019: ds.temperature2/10,
  3076                           
  3077                           ;DFMAIN.C: 1020: ds.temperature1/10,
  3078                           
  3079                           ;DFMAIN.C: 1021: ablate_bad_tc1_cnt || ablate_ba
                                 d_tc2_cnt, 1, 0);
  3080                           
  3081                           	global	_gDFDisplyPrintTemperatureValues
  3082                           	signat	_gDFDisplyPrintTemperatureValues,24634
  3083                           	line	1021
  3084  00A9FC  00200006           	mov.w	#0,w6
  3085  00A9FE  00781F86           	push	w6
  3086  00AA00  00200016           	mov.w	#01h,w6
  3087  00AA02  00781F86           	push	w6
  3088  00AA04  002FFE66           	mov.w	#((0+f33536+12)-4),w6
  3089  00AA06  00478306           	add.w	sp,w6,w6
  3090  00AA08  00E00016           	cp0.w	[w6]
  3091  00AA0A  003A000A           	bra	nz,u1161
  3092  00AA0C  0004AA10           	goto	u1160
              00000000           
  3093  00AA10                     u1160:
  3094  00AA10  002FFE86           	mov.w	#((0+f33536+14)-4),w6
  3095  00AA12  00478306           	add.w	sp,w6,w6
  3096  00AA14  00E00016           	cp0.w	[w6]
  3097  00AA16  003A0004           	bra	nz,u1171
  3098  00AA18  0004AA1C           	goto	u1170
              00000000           
  3099  00AA1C                     u1170:
  3100  00AA1C  0004AA2A           	goto	u1180
              00000000           
  3101  00AA20                     u1161:
  3102  00AA20                     u1171:
  3103  00AA20  0004AA24           	goto	u1181
              00000000           
  3104  00AA24                     u1181:
  3105  00AA24  00200016           	mov	#1,w6
  3106  00AA26  0004AA2C           	goto	u1196
              00000000           
  3107  00AA2A                     u1180:
  3108  00AA2A  00EB0300           	clr.w	w6
  3109  00AA2C                     u1196:
  3110  00AA2C  002000A7           	mov.w	#0Ah,w7
  3111  00AA2E  00211445           	mov.w	#_ds,w5
  3112  00AA30  00780285           	mov.w	w5,w5
  3113  00AA32  00B00245           	add.w	#36,w5
  3114  00AA34  00780195           	mov.w	[w5],w3
  3115  00AA36  00090011           	repeat	#18-1
  3116  00AA38  00D88187           	div.uw	w3,w7
  3117  00AA3A  00FD0200           	exch	w0,w4
  3118  00AA3C  002000A7           	mov.w	#0Ah,w7
  3119  00AA3E  00211445           	mov.w	#_ds,w5
  3120  00AA40  00780285           	mov.w	w5,w5
  3121  00AA42  00B00265           	add.w	#38,w5
  3122  00AA44  00780195           	mov.w	[w5],w3
  3123  00AA46  00090011           	repeat	#18-1
  3124  00AA48  00D88187           	div.uw	w3,w7
  3125  00AA4A  00FD0100           	exch	w0,w2
  3126  00AA4C  00211447           	mov.w	#_ds,w7
  3127  00AA4E  00780387           	mov.w	w7,w7
  3128  00AA50  00B00547           	add.w	#84,w7
  3129  00AA52  00784017           	mov.b	[w7],w0
  3130  00AA54  00029356           	call	(_gDFDisplyPrintTemperatureValues)	;4 byte
              00000000           s adjustment
  3131                           	line	1022
  3132  00AA58                     l348:
  3133                           ;DFMAIN.C: 1022: }
  3134                           
  3135                           ;DFMAIN.C: 1026: gDFDisplyPrintTemperatureValues
                                 (ds.setting,
  3136                           
  3137                           ;DFMAIN.C: 1027: ds.temperature2/10,
  3138                           
  3139                           ;DFMAIN.C: 1028: ds.temperature1/10,
  3140                           
  3141                           ;DFMAIN.C: 1029: ablate_bad_tc1_cnt || ablate_ba
                                 d_tc2_cnt, 0, 0);
  3142                           
  3143                           	line	1029
  3144  00AA58  00200006           	mov.w	#0,w6
  3145  00AA5A  00781F86           	push	w6
  3146  00AA5C  00200006           	mov.w	#0,w6
  3147  00AA5E  00781F86           	push	w6
  3148  00AA60  002FFE66           	mov.w	#((0+f33536+12)-4),w6
  3149  00AA62  00478306           	add.w	sp,w6,w6
  3150  00AA64  00E00016           	cp0.w	[w6]
  3151  00AA66  003A000A           	bra	nz,u1201
  3152  00AA68  0004AA6C           	goto	u1200
              00000000           
  3153  00AA6C                     u1200:
  3154  00AA6C  002FFE86           	mov.w	#((0+f33536+14)-4),w6
  3155  00AA6E  00478306           	add.w	sp,w6,w6
  3156  00AA70  00E00016           	cp0.w	[w6]
  3157  00AA72  003A0004           	bra	nz,u1211
  3158  00AA74  0004AA78           	goto	u1210
              00000000           
  3159  00AA78                     u1210:
  3160  00AA78  0004AA86           	goto	u1220
              00000000           
  3161  00AA7C                     u1201:
  3162  00AA7C                     u1211:
  3163  00AA7C  0004AA80           	goto	u1221
              00000000           
  3164  00AA80                     u1221:
  3165  00AA80  00200016           	mov	#1,w6
  3166  00AA82  0004AA88           	goto	u1236
              00000000           
  3167  00AA86                     u1220:
  3168  00AA86  00EB0300           	clr.w	w6
  3169  00AA88                     u1236:
  3170  00AA88  002000A7           	mov.w	#0Ah,w7
  3171  00AA8A  00211445           	mov.w	#_ds,w5
  3172  00AA8C  00780285           	mov.w	w5,w5
  3173  00AA8E  00B00245           	add.w	#36,w5
  3174  00AA90  00780195           	mov.w	[w5],w3
  3175  00AA92  00090011           	repeat	#18-1
  3176  00AA94  00D88187           	div.uw	w3,w7
  3177  00AA96  00FD0200           	exch	w0,w4
  3178  00AA98  002000A7           	mov.w	#0Ah,w7
  3179  00AA9A  00211445           	mov.w	#_ds,w5
  3180  00AA9C  00780285           	mov.w	w5,w5
  3181  00AA9E  00B00265           	add.w	#38,w5
  3182  00AAA0  00780195           	mov.w	[w5],w3
  3183  00AAA2  00090011           	repeat	#18-1
  3184  00AAA4  00D88187           	div.uw	w3,w7
  3185  00AAA6  00FD0100           	exch	w0,w2
  3186  00AAA8  00211447           	mov.w	#_ds,w7
  3187  00AAAA  00780387           	mov.w	w7,w7
  3188  00AAAC  00B00547           	add.w	#84,w7
  3189  00AAAE  00784017           	mov.b	[w7],w0
  3190  00AAB0  00029356           	call	(_gDFDisplyPrintTemperatureValues)	;4 byte
              00000000           s adjustment
  3191                           ;DFMAIN.C: 1030: }
  3192                           
  3193                           	line	1030
  3194  00AAB4  0004AB0A           	goto	l349
              00000000           
  3195                           	line	1031
  3196  00AAB8                     l347:
  3197                           ;DFMAIN.C: 1031: else
  3198                           
  3199                           ;DFMAIN.C: 1032: {
  3200                           
  3201                           ;DFMAIN.C: 1035: DeviceConnectReported = 0;
  3202                           
  3203                           	line	1035
  3204  00AAB8  00EF2D68           	clr.w	_DeviceConnectReported
  3205                           ;DFMAIN.C: 1036: if (DeviceDisconnectReported ==
                                  0)
  3206                           
  3207                           	line	1036
  3208  00AABA  00E20D6A           	cp0.w	_DeviceDisconnectReported
  3209  00AABC  003A0002           	bra	nz,u1241
  3210  00AABE  0004AAC6           	goto	u1240
              00000000           
  3211  00AAC2                     u1241:
  3212  00AAC2  0004AB0A           	goto	l350
              00000000           
  3213  00AAC6                     u1240:
  3214                           ;DFMAIN.C: 1037: {
  3215                           
  3216                           ;DFMAIN.C: 1038: DeviceDisconnectReported = 1;
  3217                           
  3218                           	line	1038
  3219  00AAC6  00EF2D6A           	clr.w	_DeviceDisconnectReported
  3220  00AAC8  00EC2D6A           	inc.w	_DeviceDisconnectReported
  3221                           ;DFMAIN.C: 1040: gDFDisplyPrintTemperatureValues
                                 (ds.setting,
  3222                           
  3223                           ;DFMAIN.C: 1041: ds.temperature2/10,
  3224                           
  3225                           ;DFMAIN.C: 1042: ds.temperature1/10, 0, 1, 1);
  3226                           
  3227                           	line	1042
  3228  00AACA  00200016           	mov.w	#01h,w6
  3229  00AACC  00781F86           	push	w6
  3230  00AACE  00200016           	mov.w	#01h,w6
  3231  00AAD0  00781F86           	push	w6
  3232  00AAD2  00200006           	mov.w	#0,w6
  3233  00AAD4  002000A7           	mov.w	#0Ah,w7
  3234  00AAD6  00211445           	mov.w	#_ds,w5
  3235  00AAD8  00780285           	mov.w	w5,w5
  3236  00AADA  00B00245           	add.w	#36,w5
  3237  00AADC  00780195           	mov.w	[w5],w3
  3238  00AADE  00090011           	repeat	#18-1
  3239  00AAE0  00D88187           	div.uw	w3,w7
  3240  00AAE2  00FD0200           	exch	w0,w4
  3241  00AAE4  002000A7           	mov.w	#0Ah,w7
  3242  00AAE6  00211445           	mov.w	#_ds,w5
  3243  00AAE8  00780285           	mov.w	w5,w5
  3244  00AAEA  00B00265           	add.w	#38,w5
  3245  00AAEC  00780195           	mov.w	[w5],w3
  3246  00AAEE  00090011           	repeat	#18-1
  3247  00AAF0  00D88187           	div.uw	w3,w7
  3248  00AAF2  00FD0100           	exch	w0,w2
  3249  00AAF4  00211447           	mov.w	#_ds,w7
  3250  00AAF6  00780387           	mov.w	w7,w7
  3251  00AAF8  00B00547           	add.w	#84,w7
  3252  00AAFA  00784017           	mov.b	[w7],w0
  3253  00AAFC  00029356           	call	(_gDFDisplyPrintTemperatureValues)	;4 byte
              00000000           s adjustment
  3254                           ;DFMAIN.C: 1044: gDFDisplyPrintTextItem(CONNECT_
                                 DEVICE_DISPLAY_ITEM_ID,
  3255                           
  3256                           ;DFMAIN.C: 1045: "null", 1);
  3257                           
  3258                           	line	1045
  3259  00AB00  00200014           	mov.w	#01h,w4
  3260  00AB02  00285A62           	mov.w	#u129,w2
  3261  00AB04  002000B0           	mov.w	#0Bh,w0
  3262  00AB06  000298D6           	call	(_gDFDisplyPrintTextItem)	;0 bytes adjustm
              00000000           ent
  3263                           	line	1046
  3264  00AB0A                     l350:
  3265                           	line	1047
  3266  00AB0A                     l349:
  3267                           	line	1048
  3268  00AB0A                     l346:
  3269                           	line	1049
  3270  00AB0A                     l340:
  3271                           	line	1050
  3272  00AB0A                     l339:
  3273                           ;DFMAIN.C: 1046: }
  3274                           
  3275                           ;DFMAIN.C: 1047: }
  3276                           
  3277                           ;DFMAIN.C: 1048: }
  3278                           
  3279                           ;DFMAIN.C: 1049: }
  3280                           
  3281                           ;DFMAIN.C: 1050: }
  3282                           
  3283                           ;DFMAIN.C: 1054: switch (ds.setting)
  3284                           
  3285                           	line	1054
  3286  00AB0A  0004ABB6           	goto	l352
              00000000           
  3287                           ;DFMAIN.C: 1055: {
  3288                           
  3289                           ;DFMAIN.C: 1056: case ABLATE_POWER_SETTING_LEVEL
                                 1:
  3290                           
  3291                           	line	1056
  3292  00AB0E                     l353:
  3293                           	line	1057
  3294  00AB0E                     l354:
  3295                           ;DFMAIN.C: 1057: case ABLATE_POWER_SETTING_LEVEL
                                 2:
  3296                           
  3297                           ;DFMAIN.C: 1059: if (ds.temperature2 < 450 && ds
                                 .rfon == 1)
  3298                           
  3299                           	line	1059
  3300  00AB0E  00201C26           	mov.w	#01C2h,w6
  3301  00AB10  00211447           	mov.w	#_ds,w7
  3302  00AB12  00780387           	mov.w	w7,w7
  3303  00AB14  00B00267           	add.w	#38,w7
  3304  00AB16  00780297           	mov.w	[w7],w5
  3305  00AB18  00E12806           	cp.w	w5, w6
  3306  00AB1A  0031000C           	bra	geu,u1251
  3307  00AB1C  0004AB20           	goto	u1250
              00000000           
  3308  00AB20                     u1250:
  3309  00AB20  00211446           	mov.w	#_ds,w6
  3310  00AB22  00780306           	mov.w	w6,w6
  3311  00AB24  00B00086           	add.w	#8,w6
  3312  00AB26  00780396           	mov.w	[w6],w7
  3313  00AB28  00E13861           	cp.w	w7, #1
  3314  00AB2A  003A0004           	bra	nz,u1261
  3315  00AB2C  0004AB30           	goto	u1260
              00000000           
  3316  00AB30                     u1260:
  3317  00AB30  0004AB3C           	goto	u1270
              00000000           
  3318  00AB34                     u1251:
  3319  00AB34                     u1261:
  3320  00AB34  0004AB38           	goto	u1271
              00000000           
  3321  00AB38                     u1271:
  3322  00AB38  0004AB62           	goto	l355
              00000000           
  3323  00AB3C                     u1270:
  3324                           ;DFMAIN.C: 1060: {
  3325                           
  3326                           ;DFMAIN.C: 1061: s_reg = 0;
  3327                           
  3328                           	line	1061
  3329  00AB3C  00200005           	mov.w	#highword(0), w5
  3330  00AB3E  00200004           	mov.w	#(0 & 0ffffh), w4
  3331  00AB40  009FBF84           	mov.w	w4,[sp+((0+f33536+18)-0)]
  3332  00AB42  009FBF95           	mov.w	w5,[sp+((0+f33536+18)-0+2)]
  3333                           ;DFMAIN.C: 1062: s_reg = s_reg & ~(0x00100L | 0x
                                 00020L | 0x00080L) | 0x00001L;
  3334                           
  3335                           	line	1062
  3336  00AB44  00200005           	mov.w	#highword(01h), w5
  3337  00AB46  00200014           	mov.w	#(01h & 0ffffh), w4
  3338  00AB48  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  3339  00AB4A  00478306           	add.w	sp,w6,w6
  3340  00AB4C  00BE0116           	mov.d	[w6],w2
  3341  00AB4E  002FFFF7           	mov.w	#highword(-417), w7
  3342  00AB50  002FE5F6           	mov.w	#(-417 & 0ffffh), w6
  3343  00AB52  00610006           	and.w	w2,w6,w0
  3344  00AB54  00618087           	and.w	w3,w7,w1
  3345  00AB56  00700304           	ior.w	w0,w4,w6
  3346  00AB58  00708385           	ior.w	w1,w5,w7
  3347  00AB5A  009FBF86           	mov.w	w6,[sp+((0+f33536+18)-0)]
  3348  00AB5C  009FBF97           	mov.w	w7,[sp+((0+f33536+18)-0+2)]
  3349                           ;DFMAIN.C: 1063: }
  3350                           
  3351                           	line	1063
  3352  00AB5E  0004ABAA           	goto	l356
              00000000           
  3353                           	line	1064
  3354  00AB62                     l355:
  3355                           ;DFMAIN.C: 1064: else if (ds.temperature2 >= 450
                                  && ds.rfon == 1)
  3356                           
  3357  00AB62  00201C26           	mov.w	#01C2h,w6
  3358  00AB64  00211447           	mov.w	#_ds,w7
  3359  00AB66  00780387           	mov.w	w7,w7
  3360  00AB68  00B00267           	add.w	#38,w7
  3361  00AB6A  00780297           	mov.w	[w7],w5
  3362  00AB6C  00E12806           	cp.w	w5, w6
  3363  00AB6E  0039000C           	bra	ltu,u1281
  3364  00AB70  0004AB74           	goto	u1280
              00000000           
  3365  00AB74                     u1280:
  3366  00AB74  00211446           	mov.w	#_ds,w6
  3367  00AB76  00780306           	mov.w	w6,w6
  3368  00AB78  00B00086           	add.w	#8,w6
  3369  00AB7A  00780396           	mov.w	[w6],w7
  3370  00AB7C  00E13861           	cp.w	w7, #1
  3371  00AB7E  003A0004           	bra	nz,u1291
  3372  00AB80  0004AB84           	goto	u1290
              00000000           
  3373  00AB84                     u1290:
  3374  00AB84  0004AB90           	goto	u1300
              00000000           
  3375  00AB88                     u1281:
  3376  00AB88                     u1291:
  3377  00AB88  0004AB8C           	goto	u1301
              00000000           
  3378  00AB8C                     u1301:
  3379  00AB8C  0004ABAA           	goto	l357
              00000000           
  3380  00AB90                     u1300:
  3381                           ;DFMAIN.C: 1065: {
  3382                           
  3383                           ;DFMAIN.C: 1066: s_reg = s_reg & ~(0x00100L | 0x
                                 00020L | 0x00080L) | 0x00008L;
  3384                           
  3385                           	line	1066
  3386  00AB90  00200005           	mov.w	#highword(08h), w5
  3387  00AB92  00200084           	mov.w	#(08h & 0ffffh), w4
  3388  00AB94  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  3389  00AB96  00478306           	add.w	sp,w6,w6
  3390  00AB98  00BE0116           	mov.d	[w6],w2
  3391  00AB9A  002FFFF7           	mov.w	#highword(-417), w7
  3392  00AB9C  002FE5F6           	mov.w	#(-417 & 0ffffh), w6
  3393  00AB9E  00610006           	and.w	w2,w6,w0
  3394  00ABA0  00618087           	and.w	w3,w7,w1
  3395  00ABA2  00700304           	ior.w	w0,w4,w6
  3396  00ABA4  00708385           	ior.w	w1,w5,w7
  3397  00ABA6  009FBF86           	mov.w	w6,[sp+((0+f33536+18)-0)]
  3398  00ABA8  009FBF97           	mov.w	w7,[sp+((0+f33536+18)-0+2)]
  3399                           	line	1067
  3400  00ABAA                     l357:
  3401                           	line	1069
  3402  00ABAA                     l356:
  3403                           ;DFMAIN.C: 1067: }
  3404                           
  3405                           ;DFMAIN.C: 1069: break;
  3406                           
  3407  00ABAA  0004ABCC           	goto	l351
              00000000           
  3408                           ;DFMAIN.C: 1071: default:
  3409                           
  3410                           	line	1071
  3411  00ABAE                     l358:
  3412                           ;DFMAIN.C: 1072: break;
  3413                           
  3414                           	line	1072
  3415  00ABAE  0004ABCC           	goto	l351
              00000000           
  3416                           ;DFMAIN.C: 1074: }
  3417                           
  3418                           	line	1074
  3419  00ABB2  0004ABCC           	goto	l351
              00000000           
  3420                           	line	1054
  3421  00ABB6                     l352:
  3422  00ABB6  00211446           	mov.w	#_ds,w6
  3423  00ABB8  00780306           	mov.w	w6,w6
  3424  00ABBA  00B00546           	add.w	#84,w6
  3425  00ABBC  00780396           	mov.w	[w6],w7
  3426  00ABBE  00780207           	mov.w	w7,w4
  3427  00ABC0  00520261           	sub.w	w4,#1,w4
  3428  00ABC2  0032FFA5           	bra	z,l353
  3429  00ABC4  00520261           	sub.w	w4,#1,w4
  3430  00ABC6  0032FFA3           	bra	z,l354
  3431  00ABC8  0004ABAE           	goto	l358
              00000000           
  3432                           
  3433                           	line	1074
  3434  00ABCC                     l351:
  3435                           	line	1076
  3436  00ABCC                     l335:
  3437                           	line	1078
  3438  00ABCC                     l334:
  3439  00ABCC                     l332:
  3440  00ABCC                     l330:
  3441  00ABCC                     l328:
  3442                           ;DFMAIN.C: 1076: }
  3443                           
  3444                           ;DFMAIN.C: 1078: tonechk(timecount, s_reg);
  3445                           
  3446                           	signat	_tonechk,8250
  3447  00ABCC  002FFF06           	mov.w	#((0+f33536+18)-0),w6
  3448  00ABCE  00478306           	add.w	sp,w6,w6
  3449  00ABD0  00BE0116           	mov.d	[w6],w2
  3450  00ABD2  002FFDE6           	mov.w	#((0+f33536+0)-0),w6
  3451  00ABD4  00478306           	add.w	sp,w6,w6
  3452  00ABD6  00BE0016           	mov.d	[w6],w0
  3453  00ABD8  0002AC48           	call	(_tonechk)	;0 bytes adjustment
              00000000           
  3454                           ;DFMAIN.C: 1080: if (gDFDisplyProcessDisplayRequ
                                 ests() == 0)
  3455                           
  3456                           	global	_gDFDisplyProcessDisplayRequests
  3457                           	signat	_gDFDisplyProcessDisplayRequests,26
  3458                           	line	1080
  3459  00ABDC  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
              00000000           
  3460  00ABE0  00E00000           	cp0.w	w0
  3461  00ABE2  003A0002           	bra	nz,u1311
  3462  00ABE4  0004ABEC           	goto	u1310
              00000000           
  3463  00ABE8                     u1311:
  3464  00ABE8  0004ABF6           	goto	l359
              00000000           
  3465  00ABEC                     u1310:
  3466                           ;DFMAIN.C: 1081: {
  3467                           
  3468                           ;DFMAIN.C: 1082: fault_routine(WARNING_SEVERITY,
                                  80, "Display Processing");
  3469                           
  3470                           	line	1082
  3471  00ABEC  00285B44           	mov.w	#u139,w4
  3472  00ABEE  00200502           	mov.w	#050h,w2
  3473  00ABF0  00200000           	mov.w	#0,w0
  3474  00ABF2  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  3475                           	line	1083
  3476  00ABF6                     l359:
  3477                           ;DFMAIN.C: 1083: }
  3478                           
  3479                           ;DFMAIN.C: 1085: if (((status = get_status()) & 
                                 0x10) == 0)
  3480                           
  3481                           	line	1085
  3482  00ABF6  0002CF58           	call	(_get_status)
              00000000           
  3483  00ABFA  00FB8300           	ze	w0,w6
  3484  00ABFC  009FB7A6           	mov.w	w6,[sp+((0+f33536+6)-0)]
  3485  00ABFE  00B20106           	and.w	#16,w6
  3486  00AC00  00E00006           	cp0.w	w6
  3487  00AC02  003A0002           	bra	nz,u1321
  3488  00AC04  0004AC0C           	goto	u1320
              00000000           
  3489  00AC08                     u1321:
  3490  00AC08  0004AC16           	goto	l360
              00000000           
  3491  00AC0C                     u1320:
  3492                           ;DFMAIN.C: 1086: fault_routine(FAULT_SEVERITY, 3
                                 9, "Watchdog");
  3493                           
  3494                           	line	1086
  3495  00AC0C  00285AB4           	mov.w	#u149,w4
  3496  00AC0E  00200272           	mov.w	#027h,w2
  3497  00AC10  00200010           	mov.w	#01h,w0
  3498  00AC12  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  3499  00AC16                     l360:
  3500                           ;DFMAIN.C: 1088: (LATG15 = !(LATG15 = 0));
  3501                           
  3502                           	line	1088
  3503  00AC16  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  3504  00AC18  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  3505  00AC1A  00320002           	bra	z,u1331
  3506  00AC1C  0004AC24           	goto	u1330
              00000000           
  3507  00AC20                     u1331:
  3508  00AC20  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  3509  00AC22  00370001           	bra	u1342
  3510  00AC24                     u1330:
  3511  00AC24  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  3512  00AC26                     u1342:
  3513                           	line	482
  3514  00AC26  002FFDE6           	mov.w	#((0+f33536+0)-0),w6
  3515  00AC28  00478306           	add.w	sp,w6,w6
  3516  00AC2A  00780396           	mov.w	[w6],w7
  3517  00AC2C  00439B61           	add.w	w7,#1,[w6++]
  3518  00AC2E  00780396           	mov.w	[w6],w7
  3519  00AC30  004B9360           	addc.w	w7,#0,[w6--]
  3520  00AC32  0004A0E2           	goto	l255
              00000000           
  3521  00AC36                     l256:
  3522                           ;DFMAIN.C: 1090: }
  3523                           
  3524                           ;DFMAIN.C: 1092: return switches;
  3525                           
  3526                           	line	1092
  3527  00AC36  0097B01F           	mov.w	[sp+((0+f33536+4)-0)], w0
  3528  00AC38  00780000           	mov.w	w0,w0
  3529  00AC3A  0004AC3E           	goto	l254
              00000000           
  3530                           ;DFMAIN.C: 1093: }
  3531                           
  3532                           	line	1093
  3533  00AC3E                     l254:
  3534                           	local	_ablate_loop
  3535                           
  3536  00AC3E  00B1022F           	sub.w	#34,sp
  3537  00AC40  00060000           	return
  3538                           	line	466
  3539                           
  3540  00AC42                     f33531:
  3541                           
  3542  00AC42  00B0022F           	add.w	#34,sp
  3543  00AC44  0004A0B4           	goto	f33530
              00000000           
  3544  000000                     f33536	equ	-34		;stack offset for auto's
  3545  000000                     f33533	equ	-38		;stack offset for parameters
  3546                           	line	0
  3547                           	psect	mconst,class=MCONST,space=1,reloc=2,pad=2
  3548                           	psect	mconst
  3549  0084E2                     align 2
  3550  0084E2                     _gui:
  3551                           	
  3552  0084E2                     	ds	2
  3553                           	psect	const,class=CONST,delta=1,reloc=4,width=2
                                 ,pad=4
  3554                           	psect	const
  3555  0009C4                     align 4
  3556                           
  3557  0009C4  00000010           	dw	(16)
  3558                           	psect	mconst
  3559                           	
  3560  0084E4                     	ds	2
  3561                           	psect	const
  3562                           
  3563  0009C8  00000001           	dw	(1)
  3564                           	psect	mconst
  3565                           	
  3566  0084E6                     	ds	2
  3567                           	psect	const
  3568                           
  3569  0009CC  00000008           	dw	(8)
  3570                           	psect	mconst
  3571                           	
  3572  0084E8                     	ds	2
  3573                           	psect	const
  3574                           
  3575  0009D0  00000010           	dw	(16)
  3576                           	psect	mconst
  3577                           	
  3578  0084EA                     	ds	2
  3579                           	psect	const
  3580                           
  3581  0009D4  00000008           	dw	(8)
  3582                           	psect	mconst
  3583                           	
  3584  0084EC                     	ds	2
  3585                           	psect	const
  3586                           
  3587  0009D8  00000010           	dw	(16)
  3588                           	psect	mconst
  3589                           	
  3590  0084EE                     	ds	2
  3591                           	psect	const
  3592                           
  3593  0009DC  00000008           	dw	(8)
  3594                           	psect	mconst
  3595                           	
  3596  0084F0                     	ds	2
  3597                           	psect	const
  3598                           
  3599  0009E0  00000010           	dw	(16)
  3600                           	psect	mconst
  3601                           	
  3602  0084F2                     	ds	2
  3603                           	psect	const
  3604                           
  3605  0009E4  00000004           	dw	(4)
  3606                           	psect	mconst
  3607                           	
  3608  0084F4                     	ds	2
  3609                           	psect	const
  3610                           
  3611  0009E8  00000005           	dw	(5)
  3612                           	psect	mconst
  3613                           	
  3614  0084F6                     	ds	2
  3615                           	psect	const
  3616                           
  3617  0009EC  00000010           	dw	(16)
  3618                           	psect	mconst
  3619                           	
  3620  0084F8                     	ds	2
  3621                           	psect	const
  3622                           
  3623  0009F0  00000004           	dw	(4)
  3624                           	psect	mconst
  3625                           	
  3626  0084FA                     	ds	2
  3627                           	psect	const
  3628                           
  3629  0009F4  00000010           	dw	(16)
  3630                           	psect	mconst
  3631                           	
  3632  0084FC                     	ds	2
  3633                           	psect	const
  3634                           
  3635  0009F8  00000003           	dw	(3)
  3636                           	psect	mconst
  3637                           	
  3638  0084FE                     	ds	2
  3639                           	psect	const
  3640                           
  3641  0009FC  00000003           	dw	(3)
  3642                           	psect	mconst
  3643                           	
  3644  008500                     	ds	2
  3645                           	psect	const
  3646                           
  3647  000A00  00000003           	dw	(3)
  3648                           	psect	mconst
  3649                           	
  3650  008502                     	ds	2
  3651                           	psect	const
  3652                           
  3653  000A04  00000010           	dw	(16)
  3654                           	psect	text
  3655                           	line	1144
  3656  00AC48                     _tonechk:
  3657  00AC48  0004ADC4           	goto	f33661
              00000000           
  3658  00AC4C                     f33660:
  3659                           
  3660                           ;DFMAIN.C: 1143: static void tonechk(unsigned lo
                                 ng timecount, unsigned long s_reg)
  3661                           
  3662                           ;DFMAIN.C: 1144: {
  3663                           
  3664                           ;DFMAIN.C: 1145: static signed int old_i = 0;
  3665                           
  3666                           ;DFMAIN.C: 1146: signed int i;
  3667                           
  3668                           ;DFMAIN.C: 1147: unsigned int sound;
  3669                           
  3670                           ;DFMAIN.C: 1149: for (i = 0; s_reg != 0L; i++)
  3671                           
  3672                           	line	1149
  3673  00AC4C  00200007           	mov.w	#0,w7
  3674  00AC4E  002FFF26           	mov.w	#((0+f33666+0)-0),w6
  3675  00AC50  00478306           	add.w	sp,w6,w6
  3676  00AC52  00780B07           	mov.w	w7,[w6]
  3677                           ;_s_reg stored from w23
  3678  00AC54  009FBFB2           	mov.w	w2,[sp+((0+f33666+4)-0)]
  3679  00AC56  009FBFC3           	mov.w	w3,[sp+((0+f33666+4)-0+2)]
  3680                           ;_timecount stored from w01
  3681  00AC58  009FBFD0           	mov.w	w0,[sp+((0+f33666+8)-0)]
  3682  00AC5A  009FBFE1           	mov.w	w1,[sp+((0+f33666+8)-0+2)]
  3683  00AC5C  002FFF66           	mov.w	#((0+f33666+4)-0),w6
  3684  00AC5E  00478306           	add.w	sp,w6,w6
  3685  00AC60  00780236           	mov.w	[w6++],w4
  3686  00AC62  007802A6           	mov.w	[w6--],w5
  3687  00AC64  00E00005           	cp0.w	w5
  3688  00AC66  003A0001           	bra	nz,u1355
  3689  00AC68  00E00004           	cp0.w	w4
  3690  00AC6A                     	u1355:
  3691  00AC6A  003A0002           	bra	nz,u1351
  3692  00AC6C  0004AC74           	goto	u1350
              00000000           
  3693  00AC70                     u1351:
  3694  00AC70  0004AC78           	goto	l363
              00000000           
  3695  00AC74                     u1350:
  3696  00AC74  0004ACA6           	goto	l364
              00000000           
  3697                           	line	1150
  3698  00AC78                     l363:
  3699                           ;DFMAIN.C: 1150: s_reg >>= 1;
  3700                           
  3701  00AC78  00200017           	mov.w	#01h,w7
  3702  00AC7A  002FFF66           	mov.w	#((0+f33666+4)-0),w6
  3703  00AC7C  00478306           	add.w	sp,w6,w6
  3704  00AC7E                     u1366:
  3705  00AC7E  00E94387           	dec.b	w7,w7
  3706  00AC80  00330003           	bra	n,u1366e
  3707  00AC82  00D10B56           	lsr	[++w6],[w6]
  3708  00AC84  00D38B46           	rrc	[--w6],[w6]
  3709  00AC86  0037FFFB           	bra	u1366
  3710  00AC88                     u1366e:
  3711                           	line	1149
  3712  00AC88  0097BB1F           	mov.w	[sp+((0+f33666+0)-0)],w6
  3713  00AC8A  00B00016           	add.w	#1,w6
  3714  00AC8C  009FBF96           	mov.w	w6,[sp+((0+f33666+0)-0)]
  3715  00AC8E  002FFF66           	mov.w	#((0+f33666+4)-0),w6
  3716  00AC90  00478306           	add.w	sp,w6,w6
  3717  00AC92  00780236           	mov.w	[w6++],w4
  3718  00AC94  007802A6           	mov.w	[w6--],w5
  3719  00AC96  00E00005           	cp0.w	w5
  3720  00AC98  003A0001           	bra	nz,u1375
  3721  00AC9A  00E00004           	cp0.w	w4
  3722  00AC9C                     	u1375:
  3723  00AC9C  003A0002           	bra	nz,u1371
  3724  00AC9E  0004ACA6           	goto	u1370
              00000000           
  3725  00ACA2                     u1371:
  3726  00ACA2  0004AC78           	goto	l363
              00000000           
  3727  00ACA6                     u1370:
  3728  00ACA6                     l364:
  3729                           ;DFMAIN.C: 1152: if (i == old_i || gui[i].sound 
                                 == 0x01 && gui[old_i].sound == 0x01)
  3730                           
  3731                           	line	1152
  3732  00ACA6  0020D566           	mov.w	#F9715,w6
  3733  00ACA8  00780396           	mov.w	[w6],w7
  3734  00ACAA  0097BB1F           	mov.w	[sp+((0+f33666+0)-0)],w6
  3735  00ACAC  00E13007           	cp.w	w6, w7
  3736  00ACAE  003A0002           	bra	nz,u1381
  3737  00ACB0  0004ACE6           	goto	u1380
              00000000           
  3738  00ACB4                     u1381:
  3739  00ACB4  00284E26           	mov.w	#_gui,w6
  3740  00ACB6  00780306           	mov.w	w6,w6
  3741  00ACB8  0097BB9F           	mov.w	[sp+((0+f33666+0)-0)],w7
  3742  00ACBA  00DD3BC1           	sl	w7,#1,w7
  3743  00ACBC  00438386           	add.w	w7,w6,w7
  3744  00ACBE  00780317           	mov.w	[w7],w6
  3745  00ACC0  00E13061           	cp.w	w6, #1
  3746  00ACC2  003A000F           	bra	nz,u1391
  3747  00ACC4  0004ACC8           	goto	u1390
              00000000           
  3748  00ACC8                     u1390:
  3749  00ACC8  00284E26           	mov.w	#_gui,w6
  3750  00ACCA  00780306           	mov.w	w6,w6
  3751  00ACCC  0020D567           	mov.w	#F9715,w7
  3752  00ACCE  00780397           	mov.w	[w7],w7
  3753  00ACD0  00DD3BC1           	sl	w7,#1,w7
  3754  00ACD2  00438386           	add.w	w7,w6,w7
  3755  00ACD4  00780317           	mov.w	[w7],w6
  3756  00ACD6  00E13061           	cp.w	w6, #1
  3757  00ACD8  003A0004           	bra	nz,u1401
  3758  00ACDA  0004ACDE           	goto	u1400
              00000000           
  3759  00ACDE                     u1400:
  3760  00ACDE  0004ACE6           	goto	u1410
              00000000           
  3761  00ACE2                     u1391:
  3762  00ACE2                     u1401:
  3763  00ACE2  0004ACEA           	goto	u1411
              00000000           
  3764  00ACE6                     u1380:
  3765  00ACE6                     u1410:
  3766  00ACE6  0004ACF2           	goto	u1420
              00000000           
  3767  00ACEA                     u1411:
  3768  00ACEA  0004ACEE           	goto	u1421
              00000000           
  3769  00ACEE                     u1421:
  3770  00ACEE  0004AD6A           	goto	l366
              00000000           
  3771  00ACF2                     u1420:
  3772                           ;DFMAIN.C: 1153: {
  3773                           
  3774                           ;DFMAIN.C: 1154: if (tone(0x11) == 0
  3775                           
  3776                           ;DFMAIN.C: 1155: && ((sound = gui[i].sound) == 0
                                 x05 || sound == 0x01
  3777                           
  3778                           ;DFMAIN.C: 1156: || sound == 0x03 || sound == 0x
                                 08))
  3779                           
  3780                           	line	1156
  3781  00ACF2  00200110           	mov.w	#011h,w0
  3782  00ACF4  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  3783  00ACF8  00E00000           	cp0.w	w0
  3784  00ACFA  003A002A           	bra	nz,u1431
  3785  00ACFC  0004AD00           	goto	u1430
              00000000           
  3786  00AD00                     u1430:
  3787  00AD00  00284E26           	mov.w	#_gui,w6
  3788  00AD02  00780306           	mov.w	w6,w6
  3789  00AD04  0097BB9F           	mov.w	[sp+((0+f33666+0)-0)],w7
  3790  00AD06  00DD3BC1           	sl	w7,#1,w7
  3791  00AD08  00438386           	add.w	w7,w6,w7
  3792  00AD0A  00780317           	mov.w	[w7],w6
  3793  00AD0C  009FBFA6           	mov.w	w6,[sp+((0+f33666+2)-0)]
  3794  00AD0E  00E13065           	cp.w	w6, #5
  3795  00AD10  003A0002           	bra	nz,u1441
  3796  00AD12  0004AD20           	goto	u1440
              00000000           
  3797  00AD16                     u1441:
  3798  00AD16  0097BB2F           	mov.w	[sp+((0+f33666+2)-0)],w6
  3799  00AD18  00E13061           	cp.w	w6, #1
  3800  00AD1A  003A0004           	bra	nz,u1451
  3801  00AD1C  0004AD20           	goto	u1450
              00000000           
  3802  00AD20                     u1440:
  3803  00AD20                     u1450:
  3804  00AD20  0004AD32           	goto	u1460
              00000000           
  3805  00AD24                     u1451:
  3806  00AD24  0004AD28           	goto	u1461
              00000000           
  3807  00AD28                     u1461:
  3808  00AD28  0097BB2F           	mov.w	[sp+((0+f33666+2)-0)],w6
  3809  00AD2A  00E13063           	cp.w	w6, #3
  3810  00AD2C  003A0004           	bra	nz,u1471
  3811  00AD2E  0004AD32           	goto	u1470
              00000000           
  3812  00AD32                     u1460:
  3813  00AD32                     u1470:
  3814  00AD32  0004AD44           	goto	u1480
              00000000           
  3815  00AD36                     u1471:
  3816  00AD36  0004AD3A           	goto	u1481
              00000000           
  3817  00AD3A                     u1481:
  3818  00AD3A  0097BB2F           	mov.w	[sp+((0+f33666+2)-0)],w6
  3819  00AD3C  00E13068           	cp.w	w6, #8
  3820  00AD3E  003A0004           	bra	nz,u1491
  3821  00AD40  0004AD44           	goto	u1490
              00000000           
  3822  00AD44                     u1480:
  3823  00AD44                     u1490:
  3824  00AD44  0004AD4C           	goto	u1500
              00000000           
  3825  00AD48                     u1491:
  3826  00AD48  0004AD50           	goto	u1501
              00000000           
  3827  00AD4C                     u1500:
  3828  00AD4C  0004AD58           	goto	u1510
              00000000           
  3829  00AD50                     u1431:
  3830  00AD50                     u1501:
  3831  00AD50  0004AD54           	goto	u1511
              00000000           
  3832  00AD54                     u1511:
  3833  00AD54  0004AD5E           	goto	l367
              00000000           
  3834  00AD58                     u1510:
  3835                           ;DFMAIN.C: 1157: tone(sound);
  3836                           
  3837                           	line	1157
  3838  00AD58  0097B82F           	mov.w	[sp+((0+f33666+2)-0)],w0
  3839  00AD5A  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  3840  00AD5E                     l367:
  3841                           ;DFMAIN.C: 1158: old_i = i;
  3842                           
  3843                           	line	1158
  3844  00AD5E  002FFF26           	mov.w	#((0+f33666+0)-0),w6
  3845  00AD60  00478306           	add.w	sp,w6,w6
  3846  00AD62  00780316           	mov.w	[w6],w6
  3847  00AD64  00886AB6           	mov	w6,F9715
  3848                           ;DFMAIN.C: 1159: return;
  3849                           
  3850                           	line	1159
  3851  00AD66  0004ADC0           	goto	l362
              00000000           
  3852                           	line	1160
  3853  00AD6A                     l366:
  3854                           ;DFMAIN.C: 1160: }
  3855                           
  3856                           ;DFMAIN.C: 1161: sound = gui[old_i].sound;
  3857                           
  3858                           	line	1161
  3859  00AD6A  00284E26           	mov.w	#_gui,w6
  3860  00AD6C  00780306           	mov.w	w6,w6
  3861  00AD6E  0020D567           	mov.w	#F9715,w7
  3862  00AD70  00780397           	mov.w	[w7],w7
  3863  00AD72  00DD3BC1           	sl	w7,#1,w7
  3864  00AD74  00438386           	add.w	w7,w6,w7
  3865  00AD76  002FFF46           	mov.w	#((0+f33666+2)-0),w6
  3866  00AD78  00478306           	add.w	sp,w6,w6
  3867  00AD7A  00780B17           	mov.w	[w7],[w6]
  3868                           ;DFMAIN.C: 1162: old_i = i;
  3869                           
  3870                           	line	1162
  3871  00AD7C  002FFF26           	mov.w	#((0+f33666+0)-0),w6
  3872  00AD7E  00478306           	add.w	sp,w6,w6
  3873  00AD80  00780316           	mov.w	[w6],w6
  3874  00AD82  00886AB6           	mov	w6,F9715
  3875                           ;DFMAIN.C: 1163: if (i == 0 && sound == 0x05)
  3876                           
  3877                           	line	1163
  3878  00AD84  002FFF26           	mov.w	#((0+f33666+0)-0),w6
  3879  00AD86  00478306           	add.w	sp,w6,w6
  3880  00AD88  00E00016           	cp0.w	[w6]
  3881  00AD8A  003A0009           	bra	nz,u1521
  3882  00AD8C  0004AD90           	goto	u1520
              00000000           
  3883  00AD90                     u1520:
  3884  00AD90  0097BB2F           	mov.w	[sp+((0+f33666+2)-0)],w6
  3885  00AD92  00E13065           	cp.w	w6, #5
  3886  00AD94  003A0004           	bra	nz,u1531
  3887  00AD96  0004AD9A           	goto	u1530
              00000000           
  3888  00AD9A                     u1530:
  3889  00AD9A  0004ADA6           	goto	u1540
              00000000           
  3890  00AD9E                     u1521:
  3891  00AD9E                     u1531:
  3892  00AD9E  0004ADA2           	goto	u1541
              00000000           
  3893  00ADA2                     u1541:
  3894  00ADA2  0004ADB0           	goto	l368
              00000000           
  3895  00ADA6                     u1540:
  3896                           ;DFMAIN.C: 1164: tone(0x06);
  3897                           
  3898                           	line	1164
  3899  00ADA6  00200060           	mov.w	#06h,w0
  3900  00ADA8  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  3901  00ADAC  0004ADC0           	goto	l369
              00000000           
  3902                           	line	1165
  3903  00ADB0                     l368:
  3904                           ;DFMAIN.C: 1165: else
  3905                           
  3906                           ;DFMAIN.C: 1166: tone(gui[i].sound);
  3907                           
  3908                           	line	1166
  3909  00ADB0  00284E26           	mov.w	#_gui,w6
  3910  00ADB2  00780306           	mov.w	w6,w6
  3911  00ADB4  0097BB9F           	mov.w	[sp+((0+f33666+0)-0)],w7
  3912  00ADB6  00DD3BC1           	sl	w7,#1,w7
  3913  00ADB8  00438386           	add.w	w7,w6,w7
  3914  00ADBA  00780017           	mov.w	[w7],w0
  3915  00ADBC  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  3916  00ADC0                     l369:
  3917                           ;DFMAIN.C: 1167: }
  3918                           
  3919                           	line	1167
  3920  00ADC0                     l362:
  3921                           	local	_tonechk
  3922                           
  3923  00ADC0  00B100EF           	sub.w	#14,sp
  3924  00ADC2  00060000           	return
  3925                           	line	1144
  3926                           
  3927  00ADC4                     f33661:
  3928                           
  3929  00ADC4  00B000EF           	add.w	#14,sp
  3930  00ADC6  0004AC4C           	goto	f33660
              00000000           
  3931  000000                     f33666	equ	-14		;stack offset for auto's
  3932  000000                     f33663	equ	-18		;stack offset for parameters
  3933                           	line	0
  3934                           	line	1181
  3935  00ADCA                     _start_sequence:
  3936  00ADCA  0004B13A           	goto	f33681
              00000000           
  3937  00ADCE                     f33680:
  3938                           
  3939                           ;DFMAIN.C: 1180: static unsigned int start_seque
                                 nce(unsigned int RFKflg)
  3940                           
  3941                           ;DFMAIN.C: 1181: {
  3942                           
  3943                           ;DFMAIN.C: 1182: unsigned int timecount = 0;
  3944                           
  3945                           	line	1182
  3946  00ADCE  00200007           	mov.w	#0,w7
  3947  00ADD0  002FFF06           	mov.w	#((0+f33686+0)-0),w6
  3948  00ADD2  00478306           	add.w	sp,w6,w6
  3949  00ADD4  00780B07           	mov.w	w7,[w6]
  3950                           ;DFMAIN.C: 1183: signed int temperature = 0;
  3951                           
  3952                           	line	1183
  3953  00ADD6  00200007           	mov.w	#0,w7
  3954  00ADD8  002FFF26           	mov.w	#((0+f33686+2)-0),w6
  3955  00ADDA  00478306           	add.w	sp,w6,w6
  3956  00ADDC  00780B07           	mov.w	w7,[w6]
  3957                           ;DFMAIN.C: 1184: unsigned int switches, rawswitc
                                 hes, status;
  3958                           
  3959                           ;DFMAIN.C: 1185: int display_id;
  3960                           
  3961                           ;DFMAIN.C: 1188: imp_pulse_measure((0));
  3962                           
  3963                           ;_RFKflg stored from w0
  3964                           	line	1188
  3965  00ADDE  002FFFC6           	mov.w	#((0+f33686+12)-0),w6
  3966  00ADE0  00478306           	add.w	sp,w6,w6
  3967  00ADE2  00780B00           	mov.w	w0,[w6]
  3968  00ADE4  00200000           	mov.w	#0,w0
  3969  00ADE6  0002BB6C           	call	(_imp_pulse_measure)	;0 bytes adjustment
              00000000           
  3970                           ;DFMAIN.C: 1189: ds.rfon = ds.rfontime = 0;
  3971                           
  3972                           	line	1189
  3973  00ADEA  00211446           	mov.w	#_ds,w6
  3974  00ADEC  00780306           	mov.w	w6,w6
  3975  00ADEE  00B00026           	add.w	#2,w6
  3976  00ADF0  00200007           	mov.w	#0,w7
  3977  00ADF2  00780B07           	mov.w	w7,[w6]
  3978  00ADF4  00780396           	mov.w	[w6],w7
  3979  00ADF6  00211446           	mov.w	#_ds,w6
  3980  00ADF8  00780306           	mov.w	w6,w6
  3981  00ADFA  00B00086           	add.w	#8,w6
  3982  00ADFC  00780B07           	mov.w	w7,[w6]
  3983                           ;DFMAIN.C: 1190: ds.totalrfontime = 0;
  3984                           
  3985                           	line	1190
  3986  00ADFE  00211446           	mov.w	#_ds,w6
  3987  00AE00  00780306           	mov.w	w6,w6
  3988  00AE02  00B00046           	add.w	#4,w6
  3989  00AE04  00200007           	mov.w	#(0 & 0ffffh), w7
  3990  00AE06  00781B07           	mov.w	w7,[w6++]
  3991  00AE08  00200007           	mov.w	#highword(0), w7
  3992  00AE0A  00781307           	mov.w	w7,[w6--]
  3993                           ;DFMAIN.C: 1191: ds.lastpressure = 0;
  3994                           
  3995                           	line	1191
  3996  00AE0C  00200006           	mov.w	#0,w6
  3997  00AE0E  00211507           	mov	#_ds+12,w7
  3998  00AE10  00780B86           	mov.w	w6,[w7]
  3999                           ;DFMAIN.C: 1192: ds.initial_imp = 0;
  4000                           
  4001                           	line	1192
  4002  00AE12  00200006           	mov.w	#0,w6
  4003  00AE14  00211527           	mov	#_ds+14,w7
  4004  00AE16  00780B86           	mov.w	w6,[w7]
  4005                           ;DFMAIN.C: 1193: ds.RFpower = 0;
  4006                           
  4007                           	line	1193
  4008  00AE18  00200006           	mov.w	#0,w6
  4009  00AE1A  002115A7           	mov	#_ds+22,w7
  4010  00AE1C  00780B86           	mov.w	w6,[w7]
  4011                           ;DFMAIN.C: 1195: ds.RFpower_comp = ds.RFpower_av
                                 e = 0;
  4012                           
  4013                           	line	1195
  4014  00AE1E  00211446           	mov.w	#_ds,w6
  4015  00AE20  00780306           	mov.w	w6,w6
  4016  00AE22  00B001A6           	add.w	#26,w6
  4017  00AE24  00200007           	mov.w	#0,w7
  4018  00AE26  00780B07           	mov.w	w7,[w6]
  4019  00AE28  00780396           	mov.w	[w6],w7
  4020  00AE2A  00211446           	mov.w	#_ds,w6
  4021  00AE2C  00780306           	mov.w	w6,w6
  4022  00AE2E  00B00186           	add.w	#24,w6
  4023  00AE30  00780B07           	mov.w	w7,[w6]
  4024                           ;DFMAIN.C: 1196: ds.power_setp_comp = ds.power_s
                                 etp_ave = 0;
  4025                           
  4026                           	line	1196
  4027  00AE32  00211446           	mov.w	#_ds,w6
  4028  00AE34  00780306           	mov.w	w6,w6
  4029  00AE36  00B00146           	add.w	#20,w6
  4030  00AE38  00200007           	mov.w	#0,w7
  4031  00AE3A  00780B07           	mov.w	w7,[w6]
  4032  00AE3C  00780396           	mov.w	[w6],w7
  4033  00AE3E  00211446           	mov.w	#_ds,w6
  4034  00AE40  00780306           	mov.w	w6,w6
  4035  00AE42  00B00126           	add.w	#18,w6
  4036  00AE44  00780B07           	mov.w	w7,[w6]
  4037                           ;DFMAIN.C: 1197: ds.pwr_track_err = 0;
  4038                           
  4039                           	line	1197
  4040  00AE46  00200006           	mov.w	#0,w6
  4041  00AE48  00211607           	mov	#_ds+28,w7
  4042  00AE4A  00780B86           	mov.w	w6,[w7]
  4043                           ;DFMAIN.C: 1199: ds.RFvoltage = ds.RFcurrent = 0
                                 ;
  4044                           
  4045                           	line	1199
  4046  00AE4C  00211446           	mov.w	#_ds,w6
  4047  00AE4E  00780306           	mov.w	w6,w6
  4048  00AE50  00B00206           	add.w	#32,w6
  4049  00AE52  00200007           	mov.w	#0,w7
  4050  00AE54  00780B07           	mov.w	w7,[w6]
  4051  00AE56  00780396           	mov.w	[w6],w7
  4052  00AE58  00211446           	mov.w	#_ds,w6
  4053  00AE5A  00780306           	mov.w	w6,w6
  4054  00AE5C  00B001E6           	add.w	#30,w6
  4055  00AE5E  00780B07           	mov.w	w7,[w6]
  4056                           ;DFMAIN.C: 1200: ds.acc_power = 0L;
  4057                           
  4058                           	line	1200
  4059  00AE60  00211446           	mov.w	#_ds,w6
  4060  00AE62  00780306           	mov.w	w6,w6
  4061  00AE64  00B002A6           	add.w	#42,w6
  4062  00AE66  00200007           	mov.w	#(0 & 0ffffh), w7
  4063  00AE68  00781B07           	mov.w	w7,[w6++]
  4064  00AE6A  00200007           	mov.w	#highword(0), w7
  4065  00AE6C  00781307           	mov.w	w7,[w6--]
  4066                           ;DFMAIN.C: 1201: ds.power_setp = 100;
  4067                           
  4068                           	line	1201
  4069  00AE6E  00200646           	mov.w	#064h,w6
  4070  00AE70  00211547           	mov	#_ds+16,w7
  4071  00AE72  00780B86           	mov.w	w6,[w7]
  4072                           ;DFMAIN.C: 1203: ds.looptime = ds.loopCount = 0;
  4073                           
  4074                           	line	1203
  4075  00AE74  00211446           	mov.w	#_ds,w6
  4076  00AE76  00780306           	mov.w	w6,w6
  4077  00AE78  00B00426           	add.w	#66,w6
  4078  00AE7A  00200007           	mov.w	#0,w7
  4079  00AE7C  00780B07           	mov.w	w7,[w6]
  4080  00AE7E  00780396           	mov.w	[w6],w7
  4081  00AE80  00211446           	mov.w	#_ds,w6
  4082  00AE82  00780306           	mov.w	w6,w6
  4083  00AE84  00B00406           	add.w	#64,w6
  4084  00AE86  00780B07           	mov.w	w7,[w6]
  4085                           ;DFMAIN.C: 1204: ds.faultCount = 0;
  4086                           
  4087                           	line	1204
  4088  00AE88  00200006           	mov.w	#0,w6
  4089  00AE8A  00211887           	mov	#_ds+68,w7
  4090  00AE8C  00780B86           	mov.w	w6,[w7]
  4091                           ;DFMAIN.C: 1206: LATD6 = LATD7 = 0;
  4092                           
  4093                           	line	1206
  4094  00AE8E  00A9E2D6           	bclr.b	(016B7h/8), #(016B7h&7)
  4095  00AE90  00ABE2D6           	btst.b	(016B7h/8), #(016B7h&7)
  4096  00AE92  003A0002           	bra	nz,u1551
  4097  00AE94  0004AE9C           	goto	u1550
              00000000           
  4098  00AE98                     u1551:
  4099  00AE98  00A8C2D6           	bset.b	(016B6h/8), #(016B6h&7)
  4100  00AE9A  00370001           	bra	u1562
  4101  00AE9C                     u1550:
  4102  00AE9C  00A9C2D6           	bclr.b	(016B6h/8), #(016B6h&7)
  4103  00AE9E                     u1562:
  4104                           ;DFMAIN.C: 1208: get_temperature(&ds);
  4105                           
  4106                           	line	1208
  4107  00AE9E  00211446           	mov.w	#_ds,w6
  4108  00AEA0  00780006           	mov.w	w6,w0
  4109  00AEA2  0002BA3C           	call	(_get_temperature)	;0 bytes adjustment
              00000000           
  4110                           ;DFMAIN.C: 1210: gDFDisplyPrintTextItem(SW_VERSI
                                 ON_DISPLAY_ITEM_ID, "S/V x.095XC.AA", 1);
  4111                           
  4112                           	line	1210
  4113  00AEA6  00200014           	mov.w	#01h,w4
  4114  00AEA8  00285E12           	mov.w	#u159,w2
  4115  00AEAA  00200000           	mov.w	#0,w0
  4116  00AEAC  000298D6           	call	(_gDFDisplyPrintTextItem)	;0 bytes adjustm
              00000000           ent
  4117                           ;DFMAIN.C: 1212: while (gDFDisplyDoesGraphicDisp
                                 layHave() == 1)
  4118                           
  4119                           	line	1212
  4120  00AEB0  0004AEE2           	goto	l371
              00000000           
  4121  00AEB4                     l372:
  4122                           ;DFMAIN.C: 1213: {
  4123                           
  4124                           ;DFMAIN.C: 1214: wait_for_20ms();
  4125                           
  4126                           	line	1214
  4127  00AEB4  0002D368           	call	(_wait_for_20ms)
              00000000           
  4128                           ;DFMAIN.C: 1215: if (gDFDisplyProcessDisplayRequ
                                 ests() == 0)
  4129                           
  4130                           	line	1215
  4131  00AEB8  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
              00000000           
  4132  00AEBC  00E00000           	cp0.w	w0
  4133  00AEBE  003A0002           	bra	nz,u1571
  4134  00AEC0  0004AEC8           	goto	u1570
              00000000           
  4135  00AEC4                     u1571:
  4136  00AEC4  0004AED2           	goto	l374
              00000000           
  4137  00AEC8                     u1570:
  4138                           ;DFMAIN.C: 1216: {
  4139                           
  4140                           ;DFMAIN.C: 1217: fault_routine(WARNING_SEVERITY,
                                  82, "Version");
  4141                           
  4142                           	line	1217
  4143  00AEC8  002859E4           	mov.w	#u169,w4
  4144  00AECA  00200522           	mov.w	#052h,w2
  4145  00AECC  00200000           	mov.w	#0,w0
  4146  00AECE  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  4147                           	line	1218
  4148  00AED2                     l374:
  4149                           ;DFMAIN.C: 1218: }
  4150                           
  4151                           ;DFMAIN.C: 1219: (LATG15 = !(LATG15 = 0));
  4152                           
  4153                           	line	1219
  4154  00AED2  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4155  00AED4  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  4156  00AED6  00320002           	bra	z,u1581
  4157  00AED8  0004AEE0           	goto	u1580
              00000000           
  4158  00AEDC                     u1581:
  4159  00AEDC  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  4160  00AEDE  00370001           	bra	u1592
  4161  00AEE0                     u1580:
  4162  00AEE0  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4163  00AEE2                     u1592:
  4164                           	line	1220
  4165  00AEE2                     l371:
  4166                           	global	_gDFDisplyDoesGraphicDisplayHave
  4167                           	signat	_gDFDisplyDoesGraphicDisplayHave,26
  4168                           	line	1212
  4169  00AEE2  000287C6           	call	(_gDFDisplyDoesGraphicDisplayHave)
              00000000           
  4170  00AEE6  00E10061           	cp.w	w0, #1
  4171  00AEE8  00320002           	bra	z,u1601
  4172  00AEEA  0004AEF2           	goto	u1600
              00000000           
  4173  00AEEE                     u1601:
  4174  00AEEE  0004AEB4           	goto	l372
              00000000           
  4175  00AEF2                     u1600:
  4176  00AEF2                     l373:
  4177                           ;DFMAIN.C: 1220: }
  4178                           
  4179                           ;DFMAIN.C: 1222: imp_pulse_measure((0));
  4180                           
  4181                           	line	1222
  4182  00AEF2  00200000           	mov.w	#0,w0
  4183  00AEF4  0002BB6C           	call	(_imp_pulse_measure)	;0 bytes adjustment
              00000000           
  4184                           ;DFMAIN.C: 1223: for (timecount = 0; timecount <
                                  2 * 50; timecount++)
  4185                           
  4186                           	line	1223
  4187  00AEF8  00200007           	mov.w	#0,w7
  4188  00AEFA  002FFF06           	mov.w	#((0+f33686+0)-0),w6
  4189  00AEFC  00478306           	add.w	sp,w6,w6
  4190  00AEFE  00780B07           	mov.w	w7,[w6]
  4191  00AF00  00200647           	mov.w	#064h,w7
  4192  00AF02  002FFF06           	mov.w	#((0+f33686+0)-0),w6
  4193  00AF04  00478306           	add.w	sp,w6,w6
  4194  00AF06  00780316           	mov.w	[w6],w6
  4195  00AF08  00E13007           	cp.w	w6, w7
  4196  00AF0A  00390002           	bra	ltu,u1611
  4197  00AF0C  0004AF14           	goto	u1610
              00000000           
  4198  00AF10                     u1611:
  4199  00AF10  0004AF18           	goto	l375
              00000000           
  4200  00AF14                     u1610:
  4201  00AF14  0004AF5C           	goto	l376
              00000000           
  4202                           	line	1224
  4203  00AF18                     l375:
  4204                           ;DFMAIN.C: 1224: {
  4205                           
  4206                           ;DFMAIN.C: 1225: wait_for_20ms();
  4207                           
  4208                           	line	1225
  4209  00AF18  0002D368           	call	(_wait_for_20ms)
              00000000           
  4210                           ;DFMAIN.C: 1226: imp_pulse_measure(&ds);
  4211                           
  4212                           	line	1226
  4213  00AF1C  00211446           	mov.w	#_ds,w6
  4214  00AF1E  00780006           	mov.w	w6,w0
  4215  00AF20  0002BB6C           	call	(_imp_pulse_measure)	;0 bytes adjustment
              00000000           
  4216                           ;DFMAIN.C: 1227: get_temperature(&ds);
  4217                           
  4218                           	line	1227
  4219  00AF24  00211446           	mov.w	#_ds,w6
  4220  00AF26  00780006           	mov.w	w6,w0
  4221  00AF28  0002BA3C           	call	(_get_temperature)	;0 bytes adjustment
              00000000           
  4222                           ;DFMAIN.C: 1228: tone(0x11);
  4223                           
  4224                           	line	1228
  4225  00AF2C  00200110           	mov.w	#011h,w0
  4226  00AF2E  0002CBDE           	call	(_tone)	;0 bytes adjustment
              00000000           
  4227                           ;DFMAIN.C: 1229: (LATG15 = !(LATG15 = 0));
  4228                           
  4229                           	line	1229
  4230  00AF32  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4231  00AF34  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  4232  00AF36  00320002           	bra	z,u1621
  4233  00AF38  0004AF40           	goto	u1620
              00000000           
  4234  00AF3C                     u1621:
  4235  00AF3C  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  4236  00AF3E  00370001           	bra	u1632
  4237  00AF40                     u1620:
  4238  00AF40  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4239  00AF42                     u1632:
  4240                           	line	1223
  4241  00AF42  0097BB0F           	mov.w	[sp+((0+f33686+0)-0)],w6
  4242  00AF44  00B00016           	add.w	#1,w6
  4243  00AF46  009FBF86           	mov.w	w6,[sp+((0+f33686+0)-0)]
  4244  00AF48  00200647           	mov.w	#064h,w7
  4245  00AF4A  002FFF06           	mov.w	#((0+f33686+0)-0),w6
  4246  00AF4C  00478306           	add.w	sp,w6,w6
  4247  00AF4E  00780316           	mov.w	[w6],w6
  4248  00AF50  00E13007           	cp.w	w6, w7
  4249  00AF52  00390002           	bra	ltu,u1641
  4250  00AF54  0004AF5C           	goto	u1640
              00000000           
  4251  00AF58                     u1641:
  4252  00AF58  0004AF18           	goto	l375
              00000000           
  4253  00AF5C                     u1640:
  4254  00AF5C                     l376:
  4255                           ;DFMAIN.C: 1230: }
  4256                           
  4257                           ;DFMAIN.C: 1231: timecount %= 50;
  4258                           
  4259                           	line	1231
  4260  00AF5C  00200327           	mov.w	#032h,w7
  4261  00AF5E  0097BB0F           	mov.w	[sp+((0+f33686+0)-0)],w6
  4262  00AF60  00090011           	repeat	#18-1
  4263  00AF62  00D80307           	div.sw	w6,w7
  4264  00AF64  009FBF81           	mov.w	w1,[sp+((0+f33686+0)-0)]
  4265                           ;DFMAIN.C: 1233: RFKflg = 1;
  4266                           
  4267                           	line	1233
  4268  00AF66  00200017           	mov.w	#01h,w7
  4269  00AF68  002FFFC6           	mov.w	#((0+f33686+12)-0),w6
  4270  00AF6A  00478306           	add.w	sp,w6,w6
  4271  00AF6C  00780B07           	mov.w	w7,[w6]
  4272                           ;DFMAIN.C: 1235: if (RFKflg == 1)
  4273                           
  4274                           	line	1235
  4275  00AF6E  0097BB6F           	mov.w	[sp+((0+f33686+12)-0)],w6
  4276  00AF70  00E13061           	cp.w	w6, #1
  4277  00AF72  003A0002           	bra	nz,u1651
  4278  00AF74  0004AF7C           	goto	u1650
              00000000           
  4279  00AF78                     u1651:
  4280  00AF78  0004B12C           	goto	l378
              00000000           
  4281  00AF7C                     u1650:
  4282                           ;DFMAIN.C: 1236: {
  4283                           
  4284                           ;DFMAIN.C: 1239: for (display_id = THERAPY_BKGND
                                 _DISPLAY_ITEM_ID;
  4285                           
  4286                           	line	1239
  4287  00AF7C  00200007           	mov.w	#0,w7
  4288  00AF7E  002FFFA6           	mov.w	#((0+f33686+10)-0),w6
  4289  00AF80  00478306           	add.w	sp,w6,w6
  4290  00AF82  00780B07           	mov.w	w7,[w6]
  4291                           ;DFMAIN.C: 1240: display_id <= OHMS_SYMBOL_DISPL
                                 AY_ITEM_ID;
  4292                           
  4293                           ;DFMAIN.C: 1241: display_id++)
  4294                           
  4295  00AF84  00200057           	mov.w	#05h,w7
  4296  00AF86  002FFFA6           	mov.w	#((0+f33686+10)-0),w6
  4297  00AF88  00478306           	add.w	sp,w6,w6
  4298  00AF8A  00780316           	mov.w	[w6],w6
  4299  00AF8C  00E13007           	cp.w	w6, w7
  4300  00AF8E  00340002           	bra	le,u1661
  4301  00AF90  0004AF98           	goto	u1660
              00000000           
  4302  00AF94                     u1661:
  4303  00AF94  0004AF9C           	goto	l379
              00000000           
  4304  00AF98                     u1660:
  4305  00AF98  0004B000           	goto	l380
              00000000           
  4306                           	line	1242
  4307  00AF9C                     l379:
  4308                           ;DFMAIN.C: 1242: {
  4309                           
  4310                           ;DFMAIN.C: 1243: gDFDisplyPrintGraphicItem(displ
                                 ay_id);
  4311                           
  4312                           	global	_gDFDisplyPrintGraphicItem
  4313                           	signat	_gDFDisplyPrintGraphicItem,4154
  4314                           	line	1243
  4315  00AF9C  0097BB5F           	mov.w	[sp+((0+f33686+10)-0)], w6
  4316  00AF9E  00784006           	mov.b	w6,w0
  4317  00AFA0  00028A06           	call	(_gDFDisplyPrintGraphicItem)	;0 bytes adju
              00000000           stment
  4318                           ;DFMAIN.C: 1245: while (gDFDisplyDoesGraphicDisp
                                 layHave() == 1)
  4319                           
  4320                           	line	1245
  4321  00AFA4  0004AFD6           	goto	l382
              00000000           
  4322  00AFA8                     l383:
  4323                           ;DFMAIN.C: 1246: {
  4324                           
  4325                           ;DFMAIN.C: 1247: wait_for_20ms();
  4326                           
  4327                           	line	1247
  4328  00AFA8  0002D368           	call	(_wait_for_20ms)
              00000000           
  4329                           ;DFMAIN.C: 1248: if (gDFDisplyProcessDisplayRequ
                                 ests() == 0)
  4330                           
  4331                           	line	1248
  4332  00AFAC  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
              00000000           
  4333  00AFB0  00E00000           	cp0.w	w0
  4334  00AFB2  003A0002           	bra	nz,u1671
  4335  00AFB4  0004AFBC           	goto	u1670
              00000000           
  4336  00AFB8                     u1671:
  4337  00AFB8  0004AFC6           	goto	l385
              00000000           
  4338  00AFBC                     u1670:
  4339                           ;DFMAIN.C: 1249: {
  4340                           
  4341                           ;DFMAIN.C: 1250: fault_routine(WARNING_SEVERITY,
                                  83, "Initial Graphics");
  4342                           
  4343                           	line	1250
  4344  00AFBC  002855C4           	mov.w	#u179,w4
  4345  00AFBE  00200532           	mov.w	#053h,w2
  4346  00AFC0  00200000           	mov.w	#0,w0
  4347  00AFC2  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  4348                           	line	1251
  4349  00AFC6                     l385:
  4350                           ;DFMAIN.C: 1251: }
  4351                           
  4352                           ;DFMAIN.C: 1252: (LATG15 = !(LATG15 = 0));
  4353                           
  4354                           	line	1252
  4355  00AFC6  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4356  00AFC8  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  4357  00AFCA  00320002           	bra	z,u1681
  4358  00AFCC  0004AFD4           	goto	u1680
              00000000           
  4359  00AFD0                     u1681:
  4360  00AFD0  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  4361  00AFD2  00370001           	bra	u1692
  4362  00AFD4                     u1680:
  4363  00AFD4  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4364  00AFD6                     u1692:
  4365                           	line	1253
  4366  00AFD6                     l382:
  4367                           	line	1245
  4368  00AFD6  000287C6           	call	(_gDFDisplyDoesGraphicDisplayHave)
              00000000           
  4369  00AFDA  00E10061           	cp.w	w0, #1
  4370  00AFDC  00320002           	bra	z,u1701
  4371  00AFDE  0004AFE6           	goto	u1700
              00000000           
  4372  00AFE2                     u1701:
  4373  00AFE2  0004AFA8           	goto	l383
              00000000           
  4374  00AFE6                     u1700:
  4375  00AFE6                     l384:
  4376                           	line	1241
  4377  00AFE6  0097BB5F           	mov.w	[sp+((0+f33686+10)-0)],w6
  4378  00AFE8  00B00016           	add.w	#1,w6
  4379  00AFEA  009FBFD6           	mov.w	w6,[sp+((0+f33686+10)-0)]
  4380                           	line	1240
  4381  00AFEC  00200057           	mov.w	#05h,w7
  4382  00AFEE  002FFFA6           	mov.w	#((0+f33686+10)-0),w6
  4383  00AFF0  00478306           	add.w	sp,w6,w6
  4384  00AFF2  00780316           	mov.w	[w6],w6
  4385  00AFF4  00E13007           	cp.w	w6, w7
  4386  00AFF6  00340002           	bra	le,u1711
  4387  00AFF8  0004B000           	goto	u1710
              00000000           
  4388  00AFFC                     u1711:
  4389  00AFFC  0004AF9C           	goto	l379
              00000000           
  4390  00B000                     u1710:
  4391  00B000                     l380:
  4392                           ;DFMAIN.C: 1253: }
  4393                           
  4394                           ;DFMAIN.C: 1254: }
  4395                           
  4396                           ;DFMAIN.C: 1258: Screen = THERAPY_DISPLAY_SCREEN
                                 ;
  4397                           
  4398                           	line	1258
  4399  00B000  00EF7142           	clr.b	_Screen
  4400  00B002  00EC7142           	inc.b	_Screen
  4401                           ;DFMAIN.C: 1262: gDFDisplyPrintImpedanceGraphicI
                                 (0, 0, 0, 0);
  4402                           
  4403                           	line	1262
  4404  00B004  00200006           	mov.w	#0,w6
  4405  00B006  00200004           	mov.w	#0,w4
  4406  00B008  00200002           	mov.w	#0,w2
  4407  00B00A  00200000           	mov.w	#0,w0
  4408  00B00C  00028B2C           	call	(_gDFDisplyPrintImpedanceGraphicI)	;0 byte
              00000000           s adjustment
  4409                           ;DFMAIN.C: 1264: while (gDFDisplyDoesGraphicDisp
                                 layHave() == 1)
  4410                           
  4411                           	line	1264
  4412  00B010  0004B042           	goto	l386
              00000000           
  4413  00B014                     l387:
  4414                           ;DFMAIN.C: 1265: {
  4415                           
  4416                           ;DFMAIN.C: 1266: wait_for_20ms();
  4417                           
  4418                           	line	1266
  4419  00B014  0002D368           	call	(_wait_for_20ms)
              00000000           
  4420                           ;DFMAIN.C: 1267: if (gDFDisplyProcessDisplayRequ
                                 ests() == 0)
  4421                           
  4422                           	line	1267
  4423  00B018  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
              00000000           
  4424  00B01C  00E00000           	cp0.w	w0
  4425  00B01E  003A0002           	bra	nz,u1721
  4426  00B020  0004B028           	goto	u1720
              00000000           
  4427  00B024                     u1721:
  4428  00B024  0004B032           	goto	l389
              00000000           
  4429  00B028                     u1720:
  4430                           ;DFMAIN.C: 1268: {
  4431                           
  4432                           ;DFMAIN.C: 1269: fault_routine(WARNING_SEVERITY,
                                  30, "Initial Impedance bar");
  4433                           
  4434                           	line	1269
  4435  00B028  002856D4           	mov.w	#u189,w4
  4436  00B02A  002001E2           	mov.w	#01Eh,w2
  4437  00B02C  00200000           	mov.w	#0,w0
  4438  00B02E  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  4439                           	line	1270
  4440  00B032                     l389:
  4441                           ;DFMAIN.C: 1270: }
  4442                           
  4443                           ;DFMAIN.C: 1271: (LATG15 = !(LATG15 = 0));
  4444                           
  4445                           	line	1271
  4446  00B032  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4447  00B034  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  4448  00B036  00320002           	bra	z,u1731
  4449  00B038  0004B040           	goto	u1730
              00000000           
  4450  00B03C                     u1731:
  4451  00B03C  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  4452  00B03E  00370001           	bra	u1742
  4453  00B040                     u1730:
  4454  00B040  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4455  00B042                     u1742:
  4456                           	line	1272
  4457  00B042                     l386:
  4458                           	line	1264
  4459  00B042  000287C6           	call	(_gDFDisplyDoesGraphicDisplayHave)
              00000000           
  4460  00B046  00E10061           	cp.w	w0, #1
  4461  00B048  00320002           	bra	z,u1751
  4462  00B04A  0004B052           	goto	u1750
              00000000           
  4463  00B04E                     u1751:
  4464  00B04E  0004B014           	goto	l387
              00000000           
  4465  00B052                     u1750:
  4466  00B052                     l388:
  4467                           ;DFMAIN.C: 1272: }
  4468                           
  4469                           ;DFMAIN.C: 1276: for (display_id = RF_CYCLE_LABE
                                 L_DISPLAY_ITEM_ID;
  4470                           
  4471                           	line	1276
  4472  00B052  00200017           	mov.w	#01h,w7
  4473  00B054  002FFFA6           	mov.w	#((0+f33686+10)-0),w6
  4474  00B056  00478306           	add.w	sp,w6,w6
  4475  00B058  00780B07           	mov.w	w7,[w6]
  4476                           ;DFMAIN.C: 1277: display_id <= TIMER_BTN_LABEL_D
                                 ISPLAY_ITEM_ID;
  4477                           
  4478                           ;DFMAIN.C: 1278: display_id++)
  4479                           
  4480  00B05A  00200097           	mov.w	#09h,w7
  4481  00B05C  002FFFA6           	mov.w	#((0+f33686+10)-0),w6
  4482  00B05E  00478306           	add.w	sp,w6,w6
  4483  00B060  00780316           	mov.w	[w6],w6
  4484  00B062  00E13007           	cp.w	w6, w7
  4485  00B064  00340002           	bra	le,u1761
  4486  00B066  0004B06E           	goto	u1760
              00000000           
  4487  00B06A                     u1761:
  4488  00B06A  0004B072           	goto	l390
              00000000           
  4489  00B06E                     u1760:
  4490  00B06E  0004B0DA           	goto	l391
              00000000           
  4491                           	line	1279
  4492  00B072                     l390:
  4493                           ;DFMAIN.C: 1279: {
  4494                           
  4495                           ;DFMAIN.C: 1280: gDFDisplyPrintTextItem(display_
                                 id, " ", 0);
  4496                           
  4497                           	line	1280
  4498  00B072  00200004           	mov.w	#0,w4
  4499  00B074  00285F02           	mov.w	#u199,w2
  4500  00B076  0097BB5F           	mov.w	[sp+((0+f33686+10)-0)], w6
  4501  00B078  00784006           	mov.b	w6,w0
  4502  00B07A  000298D6           	call	(_gDFDisplyPrintTextItem)	;0 bytes adjustm
              00000000           ent
  4503                           ;DFMAIN.C: 1282: while (gDFDisplyDoesGraphicDisp
                                 layHave() == 1)
  4504                           
  4505                           	line	1282
  4506  00B07E  0004B0B0           	goto	l393
              00000000           
  4507  00B082                     l394:
  4508                           ;DFMAIN.C: 1283: {
  4509                           
  4510                           ;DFMAIN.C: 1284: wait_for_20ms();
  4511                           
  4512                           	line	1284
  4513  00B082  0002D368           	call	(_wait_for_20ms)
              00000000           
  4514                           ;DFMAIN.C: 1285: if (gDFDisplyProcessDisplayRequ
                                 ests() == 0)
  4515                           
  4516                           	line	1285
  4517  00B086  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
              00000000           
  4518  00B08A  00E00000           	cp0.w	w0
  4519  00B08C  003A0002           	bra	nz,u1771
  4520  00B08E  0004B096           	goto	u1770
              00000000           
  4521  00B092                     u1771:
  4522  00B092  0004B0A0           	goto	l396
              00000000           
  4523  00B096                     u1770:
  4524                           ;DFMAIN.C: 1286: {
  4525                           
  4526                           ;DFMAIN.C: 1287: fault_routine(WARNING_SEVERITY,
                                  84, "Initial Labels");
  4527                           
  4528                           	line	1287
  4529  00B096  002853E4           	mov.w	#u209,w4
  4530  00B098  00200542           	mov.w	#054h,w2
  4531  00B09A  00200000           	mov.w	#0,w0
  4532  00B09C  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  4533                           	line	1288
  4534  00B0A0                     l396:
  4535                           ;DFMAIN.C: 1288: }
  4536                           
  4537                           ;DFMAIN.C: 1289: (LATG15 = !(LATG15 = 0));
  4538                           
  4539                           	line	1289
  4540  00B0A0  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4541  00B0A2  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  4542  00B0A4  00320002           	bra	z,u1781
  4543  00B0A6  0004B0AE           	goto	u1780
              00000000           
  4544  00B0AA                     u1781:
  4545  00B0AA  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  4546  00B0AC  00370001           	bra	u1792
  4547  00B0AE                     u1780:
  4548  00B0AE  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4549  00B0B0                     u1792:
  4550                           	line	1290
  4551  00B0B0                     l393:
  4552                           	line	1282
  4553  00B0B0  000287C6           	call	(_gDFDisplyDoesGraphicDisplayHave)
              00000000           
  4554  00B0B4  00E10061           	cp.w	w0, #1
  4555  00B0B6  00320002           	bra	z,u1801
  4556  00B0B8  0004B0C0           	goto	u1800
              00000000           
  4557  00B0BC                     u1801:
  4558  00B0BC  0004B082           	goto	l394
              00000000           
  4559  00B0C0                     u1800:
  4560  00B0C0                     l395:
  4561                           	line	1278
  4562  00B0C0  0097BB5F           	mov.w	[sp+((0+f33686+10)-0)],w6
  4563  00B0C2  00B00016           	add.w	#1,w6
  4564  00B0C4  009FBFD6           	mov.w	w6,[sp+((0+f33686+10)-0)]
  4565                           	line	1277
  4566  00B0C6  00200097           	mov.w	#09h,w7
  4567  00B0C8  002FFFA6           	mov.w	#((0+f33686+10)-0),w6
  4568  00B0CA  00478306           	add.w	sp,w6,w6
  4569  00B0CC  00780316           	mov.w	[w6],w6
  4570  00B0CE  00E13007           	cp.w	w6, w7
  4571  00B0D0  00340002           	bra	le,u1811
  4572  00B0D2  0004B0DA           	goto	u1810
              00000000           
  4573  00B0D6                     u1811:
  4574  00B0D6  0004B072           	goto	l390
              00000000           
  4575  00B0DA                     u1810:
  4576  00B0DA                     l391:
  4577                           ;DFMAIN.C: 1290: }
  4578                           
  4579                           ;DFMAIN.C: 1291: }
  4580                           
  4581                           ;DFMAIN.C: 1295: gDFDisplyPrintCyclesValueTextIt
                                 (Cycles);
  4582                           
  4583                           	line	1295
  4584  00B0DA  0020D666           	mov.w	#_Cycles,w6
  4585  00B0DC  00780016           	mov.w	[w6],w0
  4586  00B0DE  00028800           	call	(_gDFDisplyPrintCyclesValueTextIt)	;0 byte
              00000000           s adjustment
  4587                           ;DFMAIN.C: 1297: while (gDFDisplyDoesGraphicDisp
                                 layHave() == 1)
  4588                           
  4589                           	line	1297
  4590  00B0E2  0004B114           	goto	l397
              00000000           
  4591  00B0E6                     l398:
  4592                           ;DFMAIN.C: 1298: {
  4593                           
  4594                           ;DFMAIN.C: 1299: wait_for_20ms();
  4595                           
  4596                           	line	1299
  4597  00B0E6  0002D368           	call	(_wait_for_20ms)
              00000000           
  4598                           ;DFMAIN.C: 1300: if (gDFDisplyProcessDisplayRequ
                                 ests() == 0)
  4599                           
  4600                           	line	1300
  4601  00B0EA  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
              00000000           
  4602  00B0EE  00E00000           	cp0.w	w0
  4603  00B0F0  003A0002           	bra	nz,u1821
  4604  00B0F2  0004B0FA           	goto	u1820
              00000000           
  4605  00B0F6                     u1821:
  4606  00B0F6  0004B104           	goto	l400
              00000000           
  4607  00B0FA                     u1820:
  4608                           ;DFMAIN.C: 1301: {
  4609                           
  4610                           ;DFMAIN.C: 1302: fault_routine(WARNING_SEVERITY,
                                  85, "Initial Cycles");
  4611                           
  4612                           	line	1302
  4613  00B0FA  002854D4           	mov.w	#u219,w4
  4614  00B0FC  00200552           	mov.w	#055h,w2
  4615  00B0FE  00200000           	mov.w	#0,w0
  4616  00B100  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  4617                           	line	1303
  4618  00B104                     l400:
  4619                           ;DFMAIN.C: 1303: }
  4620                           
  4621                           ;DFMAIN.C: 1304: (LATG15 = !(LATG15 = 0));
  4622                           
  4623                           	line	1304
  4624  00B104  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4625  00B106  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  4626  00B108  00320002           	bra	z,u1831
  4627  00B10A  0004B112           	goto	u1830
              00000000           
  4628  00B10E                     u1831:
  4629  00B10E  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  4630  00B110  00370001           	bra	u1842
  4631  00B112                     u1830:
  4632  00B112  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  4633  00B114                     u1842:
  4634                           	line	1305
  4635  00B114                     l397:
  4636                           	line	1297
  4637  00B114  000287C6           	call	(_gDFDisplyDoesGraphicDisplayHave)
              00000000           
  4638  00B118  00E10061           	cp.w	w0, #1
  4639  00B11A  00320002           	bra	z,u1851
  4640  00B11C  0004B124           	goto	u1850
              00000000           
  4641  00B120                     u1851:
  4642  00B120  0004B0E6           	goto	l398
              00000000           
  4643  00B124                     u1850:
  4644  00B124                     l399:
  4645                           ;DFMAIN.C: 1305: }
  4646                           
  4647                           ;DFMAIN.C: 1307: wait_for_20ms();
  4648                           
  4649                           	line	1307
  4650  00B124  0002D368           	call	(_wait_for_20ms)
              00000000           
  4651                           ;DFMAIN.C: 1309: ablate_loop();
  4652                           
  4653                           	line	1309
  4654  00B128  0002A0B0           	call	(_ablate_loop)
              00000000           
  4655                           	line	1310
  4656  00B12C                     l378:
  4657                           ;DFMAIN.C: 1310: }
  4658                           
  4659                           ;DFMAIN.C: 1312: wait_for_20ms();
  4660                           
  4661                           	line	1312
  4662  00B12C  0002D368           	call	(_wait_for_20ms)
              00000000           
  4663                           ;DFMAIN.C: 1313: return 1;
  4664                           
  4665                           	line	1313
  4666  00B130  00200010           	mov.w	#1,w0	;return #1 in w0
  4667  00B132  0004B136           	goto	l370
              00000000           
  4668                           ;DFMAIN.C: 1314: }
  4669                           
  4670                           	line	1314
  4671  00B136                     l370:
  4672                           	local	_start_sequence
  4673                           
  4674  00B136  00B1010F           	sub.w	#16,sp
  4675  00B138  00060000           	return
  4676                           	line	1181
  4677                           
  4678  00B13A                     f33681:
  4679                           
  4680  00B13A  00B0010F           	add.w	#16,sp
  4681  00B13C  0004ADCE           	goto	f33680
              00000000           
  4682  000000                     f33686	equ	-16		;stack offset for auto's
  4683  000000                     f33683	equ	-20		;stack offset for parameters
  4684                           	line	0
  4685                           	line	1336
  4686  00B140                     _ablate_bad:
  4687  00B140  0004B49E           	goto	f33731
              00000000           
  4688  00B144                     f33730:
  4689                           
  4690                           ;DFMAIN.C: 1335: static unsigned int ablate_bad(
                                 struct DFinestruct *dfp)
  4691                           
  4692                           ;DFMAIN.C: 1336: {
  4693                           
  4694                           ;DFMAIN.C: 1337: unsigned int code = 0;
  4695                           
  4696                           	line	1337
  4697  00B144  00200007           	mov.w	#0,w7
  4698  00B146  002FFFA6           	mov.w	#((0+f33736+0)-0),w6
  4699  00B148  00478306           	add.w	sp,w6,w6
  4700  00B14A  00780B07           	mov.w	w7,[w6]
  4701                           ;DFMAIN.C: 1338: static signed long slTemp2;
  4702                           
  4703                           ;DFMAIN.C: 1342: dfp->looptime = dfp->looptime +
                                  1;
  4704                           
  4705                           	line	1342
  4706  00B14C  00780300           	mov.w	w0,w6
  4707  00B14E  00B00406           	add.w	#64,w6
  4708  00B150  00780396           	mov.w	[w6],w7
  4709  00B152  00B00017           	add.w	#1,w7
  4710  00B154  00200406           	mov	#64, w6
  4711  00B156  00400306           	add	w0, w6, w6
  4712  00B158  00780B07           	mov.w	w7,[w6]
  4713                           ;DFMAIN.C: 1343: dfp->imp_avg = dfp->imp_avg + d
                                 fp->impedance;
  4714                           
  4715                           	line	1343
  4716  00B15A  00780300           	mov.w	w0,w6
  4717  00B15C  00B003A6           	add.w	#58,w6
  4718  00B15E  00780136           	mov.w	[w6++],w2
  4719  00B160  007801A6           	mov.w	[w6--],w3
  4720  00B162  00780300           	mov.w	w0,w6
  4721  00B164  00780216           	mov.w	[w6],w4
  4722  00B166  00EB0280           	clr.w	w5
  4723  00B168  00420402           	add.w	w4,w2,w8
  4724  00B16A  004A8483           	addc.w	w5,w3,w9
  4725  00B16C  00780300           	mov.w	w0,w6
  4726  00B16E  00B003A6           	add.w	#58,w6
  4727  00B170  00BE8B08           	mov.d	w8,[w6]
  4728                           ;DFMAIN.C: 1344: dfp->t1_avg = dfp->t1_avg + dfp
                                 ->temperature1;
  4729                           
  4730                           	line	1344
  4731  00B172  00780300           	mov.w	w0,w6
  4732  00B174  00B00466           	add.w	#70,w6
  4733  00B176  00780236           	mov.w	[w6++],w4
  4734  00B178  007802A6           	mov.w	[w6--],w5
  4735  00B17A  00780300           	mov.w	w0,w6
  4736  00B17C  00B00246           	add.w	#36,w6
  4737  00B17E  00780396           	mov.w	[w6],w7
  4738  00B180  00780307           	mov.w	w7,w6
  4739  00B182  00EB0380           	clr.w	w7
  4740  00B184  00430104           	add.w	w6,w4,w2
  4741  00B186  004B8185           	addc.w	w7,w5,w3
  4742  00B188  00780300           	mov.w	w0,w6
  4743  00B18A  00B00466           	add.w	#70,w6
  4744  00B18C  00BE8B02           	mov.d	w2,[w6]
  4745                           ;DFMAIN.C: 1345: dfp->t2_avg = dfp->t2_avg + dfp
                                 ->temperature2;
  4746                           
  4747                           	line	1345
  4748  00B18E  00780300           	mov.w	w0,w6
  4749  00B190  00B004C6           	add.w	#76,w6
  4750  00B192  00780236           	mov.w	[w6++],w4
  4751  00B194  007802A6           	mov.w	[w6--],w5
  4752  00B196  00780300           	mov.w	w0,w6
  4753  00B198  00B00266           	add.w	#38,w6
  4754  00B19A  00780396           	mov.w	[w6],w7
  4755  00B19C  00780307           	mov.w	w7,w6
  4756  00B19E  00EB0380           	clr.w	w7
  4757  00B1A0  00430104           	add.w	w6,w4,w2
  4758  00B1A2  004B8185           	addc.w	w7,w5,w3
  4759  00B1A4  00780300           	mov.w	w0,w6
  4760  00B1A6  00B004C6           	add.w	#76,w6
  4761  00B1A8  00BE8B02           	mov.d	w2,[w6]
  4762                           ;DFMAIN.C: 1346: ntc_avg = ntc_avg + dfp->ntc_te
                                 mp;
  4763                           
  4764                           	line	1346
  4765  00B1AA  00780300           	mov.w	w0,w6
  4766  00B1AC  00B00226           	add.w	#34,w6
  4767  00B1AE  00780396           	mov.w	[w6],w7
  4768  00B1B0  0020D7C6           	mov	#_ntc_avg,w6
  4769  00B1B2  00780296           	mov.w	[w6],w5
  4770  00B1B4  00428B07           	add.w	w5,w7,[w6]
  4771                           ;DFMAIN.C: 1350: dfp->RFpower_ave = dfp->RFpower
                                 _ave + (dfp->RFpower/32);
  4772                           
  4773                           	line	1350
  4774  00B1B6  00780300           	mov.w	w0,w6
  4775  00B1B8  00B001A6           	add.w	#26,w6
  4776  00B1BA  00780396           	mov.w	[w6],w7
  4777  00B1BC  00200056           	mov.w	#05h,w6
  4778  00B1BE  00780280           	mov.w	w0,w5
  4779  00B1C0  00B00165           	add.w	#22,w5
  4780  00B1C2  00780195           	mov.w	[w5],w3
  4781  00B1C4  00DE1986           	lsr	w3,w6,w3
  4782  00B1C6  00418187           	add.w	w3,w7,w3
  4783  00B1C8  002001A6           	mov	#26, w6
  4784  00B1CA  00400306           	add	w0, w6, w6
  4785  00B1CC  00780B03           	mov.w	w3,[w6]
  4786                           ;DFMAIN.C: 1351: dfp->power_setp_ave = dfp->powe
                                 r_setp_ave+ (dfp->power_setp/32);
  4787                           
  4788                           	line	1351
  4789  00B1CE  00780300           	mov.w	w0,w6
  4790  00B1D0  00B00146           	add.w	#20,w6
  4791  00B1D2  00780396           	mov.w	[w6],w7
  4792  00B1D4  00200056           	mov.w	#05h,w6
  4793  00B1D6  00780280           	mov.w	w0,w5
  4794  00B1D8  00B00105           	add.w	#16,w5
  4795  00B1DA  00780195           	mov.w	[w5],w3
  4796  00B1DC  00DE1986           	lsr	w3,w6,w3
  4797  00B1DE  00418187           	add.w	w3,w7,w3
  4798  00B1E0  00200146           	mov	#20, w6
  4799  00B1E2  00400306           	add	w0, w6, w6
  4800  00B1E4  00780B03           	mov.w	w3,[w6]
  4801                           ;DFMAIN.C: 1355: if (dfp->looptime==50)
  4802                           
  4803                           ;_dfp stored from w0
  4804                           	line	1355
  4805  00B1E6  002FFFC6           	mov.w	#((0+f33736+2)-0),w6
  4806  00B1E8  00478306           	add.w	sp,w6,w6
  4807  00B1EA  00780B00           	mov.w	w0,[w6]
  4808  00B1EC  00200326           	mov.w	#032h,w6
  4809  00B1EE  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  4810  00B1F0  00B00407           	add.w	#64,w7
  4811  00B1F2  00780297           	mov.w	[w7],w5
  4812  00B1F4  00E12806           	cp.w	w5, w6
  4813  00B1F6  003A0002           	bra	nz,u1861
  4814  00B1F8  0004B200           	goto	u1860
              00000000           
  4815  00B1FC                     u1861:
  4816  00B1FC  0004B48E           	goto	l402
              00000000           
  4817  00B200                     u1860:
  4818                           ;DFMAIN.C: 1356: {
  4819                           
  4820                           ;DFMAIN.C: 1363: dfp->imp_comp=dfp->imp_avg/50;
  4821                           
  4822                           	line	1363
  4823  00B200  00200003           	mov.w	#highword(032h), w3
  4824  00B202  00200322           	mov.w	#(032h & 0ffffh), w2
  4825  00B204  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4826  00B206  00B003A6           	add.w	#58,w6
  4827  00B208  00780036           	mov.w	[w6++],w0
  4828  00B20A  007800A6           	mov.w	[w6--],w1
  4829                           	global	lldiv
  4830  00B20C  0002FAEC           	call	lldiv
              00000000           
  4831  00B210  002FFFC6           	mov.w	#((0+f33736+2)-0),w6
  4832  00B212  00478306           	add.w	sp,w6,w6
  4833  00B214  00780396           	mov	[w6],w7
  4834  00B216  00981BF0           	mov.w	w0,[w7+62]
  4835                           ;DFMAIN.C: 1364: dfp->imp_avg=0;
  4836                           
  4837                           	line	1364
  4838  00B218  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4839  00B21A  00B003A6           	add.w	#58,w6
  4840  00B21C  00200007           	mov.w	#(0 & 0ffffh), w7
  4841  00B21E  00781B07           	mov.w	w7,[w6++]
  4842  00B220  00200007           	mov.w	#highword(0), w7
  4843  00B222  00781307           	mov.w	w7,[w6--]
  4844                           ;DFMAIN.C: 1366: dfp->t1_comp=dfp->t1_avg/50;
  4845                           
  4846                           	line	1366
  4847  00B224  00200003           	mov.w	#highword(032h), w3
  4848  00B226  00200322           	mov.w	#(032h & 0ffffh), w2
  4849  00B228  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4850  00B22A  00B00466           	add.w	#70,w6
  4851  00B22C  00780036           	mov.w	[w6++],w0
  4852  00B22E  007800A6           	mov.w	[w6--],w1
  4853                           	global	lldiv
  4854  00B230  0002FAEC           	call	lldiv
              00000000           
  4855  00B234  002FFFC6           	mov.w	#((0+f33736+2)-0),w6
  4856  00B236  00478306           	add.w	sp,w6,w6
  4857  00B238  00780396           	mov	[w6],w7
  4858  00B23A  009823D0           	mov.w	w0,[w7+74]
  4859                           ;DFMAIN.C: 1367: dfp->t1_avg=0;
  4860                           
  4861                           	line	1367
  4862  00B23C  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4863  00B23E  00B00466           	add.w	#70,w6
  4864  00B240  00200007           	mov.w	#(0 & 0ffffh), w7
  4865  00B242  00781B07           	mov.w	w7,[w6++]
  4866  00B244  00200007           	mov.w	#highword(0), w7
  4867  00B246  00781307           	mov.w	w7,[w6--]
  4868                           ;DFMAIN.C: 1369: dfp->t2_comp=dfp->t2_avg/50;
  4869                           
  4870                           	line	1369
  4871  00B248  00200003           	mov.w	#highword(032h), w3
  4872  00B24A  00200322           	mov.w	#(032h & 0ffffh), w2
  4873  00B24C  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4874  00B24E  00B004C6           	add.w	#76,w6
  4875  00B250  00780036           	mov.w	[w6++],w0
  4876  00B252  007800A6           	mov.w	[w6--],w1
  4877                           	global	lldiv
  4878  00B254  0002FAEC           	call	lldiv
              00000000           
  4879  00B258  002FFFC6           	mov.w	#((0+f33736+2)-0),w6
  4880  00B25A  00478306           	add.w	sp,w6,w6
  4881  00B25C  00780396           	mov	[w6],w7
  4882  00B25E  00982B80           	mov.w	w0,[w7+80]
  4883                           ;DFMAIN.C: 1370: dfp->t2_avg=0;
  4884                           
  4885                           	line	1370
  4886  00B260  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4887  00B262  00B004C6           	add.w	#76,w6
  4888  00B264  00200007           	mov.w	#(0 & 0ffffh), w7
  4889  00B266  00781B07           	mov.w	w7,[w6++]
  4890  00B268  00200007           	mov.w	#highword(0), w7
  4891  00B26A  00781307           	mov.w	w7,[w6--]
  4892                           ;DFMAIN.C: 1372: ntc_comp=ntc_avg/50;
  4893                           
  4894                           	line	1372
  4895  00B26C  00200327           	mov.w	#032h,w7
  4896  00B26E  00806BE6           	mov	_ntc_avg,w6
  4897  00B270  00090011           	repeat	#18-1
  4898  00B272  00D80307           	div.sw	w6,w7
  4899  00B274  00886BF0           	mov	w0,_ntc_comp
  4900                           ;DFMAIN.C: 1373: ntc_avg=0;
  4901                           
  4902                           	line	1373
  4903  00B276  00EF2D7C           	clr.w	_ntc_avg
  4904                           ;DFMAIN.C: 1375: dfp->RFpower_comp =(dfp->RFpowe
                                 r_ave/50) *32;
  4905                           
  4906                           	line	1375
  4907  00B278  00200204           	mov.w	#020h,w4
  4908  00B27A  00200327           	mov.w	#032h,w7
  4909  00B27C  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4910  00B27E  00B001A6           	add.w	#26,w6
  4911  00B280  00780296           	mov.w	[w6],w5
  4912  00B282  00090011           	repeat	#18-1
  4913  00B284  00D80287           	div.sw	w5,w7
  4914  00B286  00FD0300           	exch	w0,w6
  4915  00B288  00B9B304           	mul.ss	w6,w4,w6
  4916  00B28A  002FFFC7           	mov.w	#((0+f33736+2)-0),w7
  4917  00B28C  00478387           	add.w	sp,w7,w7
  4918  00B28E  00780297           	mov	[w7],w5
  4919  00B290  00980AC6           	mov.w	w6,[w5+24]
  4920                           ;DFMAIN.C: 1376: dfp->power_setp_comp =(dfp->pow
                                 er_setp_ave/50) *32;
  4921                           
  4922                           	line	1376
  4923  00B292  00200204           	mov.w	#020h,w4
  4924  00B294  00200327           	mov.w	#032h,w7
  4925  00B296  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4926  00B298  00B00146           	add.w	#20,w6
  4927  00B29A  00780296           	mov.w	[w6],w5
  4928  00B29C  00090011           	repeat	#18-1
  4929  00B29E  00D80287           	div.sw	w5,w7
  4930  00B2A0  00FD0300           	exch	w0,w6
  4931  00B2A2  00B9B304           	mul.ss	w6,w4,w6
  4932  00B2A4  002FFFC7           	mov.w	#((0+f33736+2)-0),w7
  4933  00B2A6  00478387           	add.w	sp,w7,w7
  4934  00B2A8  00780297           	mov	[w7],w5
  4935  00B2AA  00980A96           	mov.w	w6,[w5+18]
  4936                           ;DFMAIN.C: 1377: slTemp2 = dfp->RFpower_comp - d
                                 fp->power_setp_comp;
  4937                           
  4938                           	line	1377
  4939  00B2AC  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4940  00B2AE  00B00126           	add.w	#18,w6
  4941  00B2B0  00780296           	mov.w	[w6],w5
  4942  00B2B2  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4943  00B2B4  00B00186           	add.w	#24,w6
  4944  00B2B6  00780396           	mov.w	[w6],w7
  4945  00B2B8  00538385           	sub.w	w7,w5,w7
  4946  00B2BA  00780307           	mov.w	w7,w6
  4947  00B2BC  00EB0380           	clr.w	w7
  4948  00B2BE  00A7F006           	btsc	w6,#15
  4949  00B2C0  00EB8380           	setm	w7
  4950  00B2C2  00886C26           	mov.w	w6, F9729
  4951  00B2C4  00886C37           	mov.w	w7, F9729+2
  4952                           ;DFMAIN.C: 1382: dfp->pwr_track_err = (slTemp2 *
                                  100) / dfp->power_setp_comp;
  4953                           
  4954                           	line	1382
  4955  00B2C6  00200003           	mov.w	#highword(064h), w3
  4956  00B2C8  00200642           	mov.w	#(064h & 0ffffh), w2
  4957  00B2CA  00806C24           	mov.w	F9729,w4
  4958  00B2CC  00806C35           	mov.w	F9729+2,w5
  4959  00B2CE  00BE8004           	mov.d	w4,w0
  4960                           	global	almul
  4961  00B2D0  0002FB96           	call	almul
              00000000           
  4962  00B2D4  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  4963  00B2D6  00B00126           	add.w	#18,w6
  4964  00B2D8  00780116           	mov.w	[w6],w2
  4965  00B2DA  00EB0180           	clr.w	w3
  4966  00B2DC  00A7F002           	btsc	w2,#15
  4967  00B2DE  00EB8180           	setm	w3
  4968                           	global	aldiv
  4969  00B2E0  0002FB62           	call	aldiv
              00000000           
  4970  00B2E4  002FFFC6           	mov.w	#((0+f33736+2)-0),w6
  4971  00B2E6  00478306           	add.w	sp,w6,w6
  4972  00B2E8  00780396           	mov	[w6],w7
  4973  00B2EA  00980BE0           	mov.w	w0,[w7+28]
  4974                           ;DFMAIN.C: 1383: dfp->RFpower_ave=0;
  4975                           
  4976                           	line	1383
  4977  00B2EC  00200006           	mov.w	#0,w6
  4978  00B2EE  002FFFC7           	mov.w	#((0+f33736+2)-0),w7
  4979  00B2F0  00478387           	add.w	sp,w7,w7
  4980  00B2F2  00780297           	mov	[w7],w5
  4981  00B2F4  00980AD6           	mov.w	w6,[w5+26]
  4982                           ;DFMAIN.C: 1384: dfp->power_setp_ave=0;
  4983                           
  4984                           	line	1384
  4985  00B2F6  00200006           	mov.w	#0,w6
  4986  00B2F8  002FFFC7           	mov.w	#((0+f33736+2)-0),w7
  4987  00B2FA  00478387           	add.w	sp,w7,w7
  4988  00B2FC  00780297           	mov	[w7],w5
  4989  00B2FE  00980AA6           	mov.w	w6,[w5+20]
  4990                           ;DFMAIN.C: 1386: dfp->looptime=0;
  4991                           
  4992                           	line	1386
  4993  00B300  00200006           	mov.w	#0,w6
  4994  00B302  002FFFC7           	mov.w	#((0+f33736+2)-0),w7
  4995  00B304  00478387           	add.w	sp,w7,w7
  4996  00B306  00780297           	mov	[w7],w5
  4997  00B308  00982286           	mov.w	w6,[w5+64]
  4998                           ;DFMAIN.C: 1392: if(dfp->rfon)
  4999                           
  5000                           	line	1392
  5001  00B30A  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  5002  00B30C  00B00086           	add.w	#8,w6
  5003  00B30E  00E00016           	cp0.w	[w6]
  5004  00B310  00320002           	bra	z,u1871
  5005  00B312  0004B31A           	goto	u1870
              00000000           
  5006  00B316                     u1871:
  5007  00B316  0004B392           	goto	l403
              00000000           
  5008  00B31A                     u1870:
  5009                           ;DFMAIN.C: 1393: {
  5010                           
  5011                           ;DFMAIN.C: 1394: dfp->loopCount++;
  5012                           
  5013                           	line	1394
  5014  00B31A  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  5015  00B31C  00B00426           	add.w	#66,w6
  5016  00B31E  00E80B16           	inc.w	[w6],[w6]
  5017                           ;DFMAIN.C: 1398: if(dfp->loopCount >= (3))
  5018                           
  5019                           	line	1398
  5020  00B320  00200036           	mov.w	#03h,w6
  5021  00B322  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5022  00B324  00B00427           	add.w	#66,w7
  5023  00B326  00780297           	mov.w	[w7],w5
  5024  00B328  00E12806           	cp.w	w5, w6
  5025  00B32A  00390002           	bra	ltu,u1881
  5026  00B32C  0004B334           	goto	u1880
              00000000           
  5027  00B330                     u1881:
  5028  00B330  0004B392           	goto	l404
              00000000           
  5029  00B334                     u1880:
  5030                           ;DFMAIN.C: 1399: {
  5031                           
  5032                           ;DFMAIN.C: 1409: if(ds.pwr_track_err > (10))
  5033                           
  5034                           	line	1409
  5035  00B334  002000A6           	mov.w	#0Ah,w6
  5036  00B336  00211447           	mov.w	#_ds,w7
  5037  00B338  00780387           	mov.w	w7,w7
  5038  00B33A  00B001C7           	add.w	#28,w7
  5039  00B33C  00780297           	mov.w	[w7],w5
  5040  00B33E  00E12806           	cp.w	w5, w6
  5041  00B340  00340002           	bra	le,u1891
  5042  00B342  0004B34A           	goto	u1890
              00000000           
  5043  00B346                     u1891:
  5044  00B346  0004B388           	goto	l405
              00000000           
  5045  00B34A                     u1890:
  5046                           ;DFMAIN.C: 1410: {
  5047                           
  5048                           ;DFMAIN.C: 1416: if(++(dfp->faultCount) >= (3) &
                                 & dfp->RFpower_comp > 100)
  5049                           
  5050                           	line	1416
  5051  00B34A  00200036           	mov.w	#03h,w6
  5052  00B34C  00200017           	mov.w	#01h,w7
  5053  00B34E  0097BAEF           	mov.w	[sp+((0+f33736+2)-0)],w5
  5054  00B350  00B00445           	add.w	#68,w5
  5055  00B352  00438A95           	add.w	w7,[w5],[w5]
  5056  00B354  00780195           	mov.w	[w5],w3
  5057  00B356  00E11806           	cp.w	w3, w6
  5058  00B358  0039000C           	bra	ltu,u1901
  5059  00B35A  0004B35E           	goto	u1900
              00000000           
  5060  00B35E                     u1900:
  5061  00B35E  00200646           	mov.w	#064h,w6
  5062  00B360  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5063  00B362  00B00187           	add.w	#24,w7
  5064  00B364  00780297           	mov.w	[w7],w5
  5065  00B366  00E12806           	cp.w	w5, w6
  5066  00B368  00340004           	bra	le,u1911
  5067  00B36A  0004B36E           	goto	u1910
              00000000           
  5068  00B36E                     u1910:
  5069  00B36E  0004B37A           	goto	u1920
              00000000           
  5070  00B372                     u1901:
  5071  00B372                     u1911:
  5072  00B372  0004B376           	goto	u1921
              00000000           
  5073  00B376                     u1921:
  5074  00B376  0004B384           	goto	l406
              00000000           
  5075  00B37A                     u1920:
  5076                           ;DFMAIN.C: 1417: {
  5077                           
  5078                           ;DFMAIN.C: 1418: fault_routine(FAULT_SEVERITY, 3
                                 1, "RF Circuitry");
  5079                           
  5080                           	line	1418
  5081  00B37A  00285244           	mov.w	#u229,w4
  5082  00B37C  002001F2           	mov.w	#01Fh,w2
  5083  00B37E  00200010           	mov.w	#01h,w0
  5084  00B380  0002B91E           	call	(_fault_routine)	;0 bytes adjustment
              00000000           
  5085                           	line	1419
  5086  00B384                     l406:
  5087                           ;DFMAIN.C: 1419: }
  5088                           
  5089                           ;DFMAIN.C: 1420: }
  5090                           
  5091                           	line	1420
  5092  00B384  0004B392           	goto	l407
              00000000           
  5093                           	line	1421
  5094  00B388                     l405:
  5095                           ;DFMAIN.C: 1421: else
  5096                           
  5097                           ;DFMAIN.C: 1422: {
  5098                           
  5099                           ;DFMAIN.C: 1423: dfp->faultCount = 0;
  5100                           
  5101                           	line	1423
  5102  00B388  00200006           	mov.w	#0,w6
  5103  00B38A  002FFFC7           	mov.w	#((0+f33736+2)-0),w7
  5104  00B38C  00478387           	add.w	sp,w7,w7
  5105  00B38E  00780297           	mov	[w7],w5
  5106  00B390  009822A6           	mov.w	w6,[w5+68]
  5107                           	line	1424
  5108  00B392                     l407:
  5109                           	line	1425
  5110  00B392                     l404:
  5111                           	line	1426
  5112  00B392                     l403:
  5113                           ;DFMAIN.C: 1424: }
  5114                           
  5115                           ;DFMAIN.C: 1425: }
  5116                           
  5117                           ;DFMAIN.C: 1426: }
  5118                           
  5119                           ;DFMAIN.C: 1432: switch (dfp->setting)
  5120                           
  5121                           	line	1432
  5122  00B392  0004B446           	goto	l409
              00000000           
  5123                           ;DFMAIN.C: 1433: {
  5124                           
  5125                           ;DFMAIN.C: 1434: case ABLATE_POWER_SETTING_LEVEL
                                 1:
  5126                           
  5127                           	line	1434
  5128  00B396                     l410:
  5129                           	line	1435
  5130  00B396                     l411:
  5131                           ;DFMAIN.C: 1435: case ABLATE_POWER_SETTING_LEVEL
                                 2:
  5132                           
  5133                           ;DFMAIN.C: 1442: if ((dfp->t1_comp < 300) || (df
                                 p->t1_comp > 1500))
  5134                           
  5135                           	line	1442
  5136  00B396  002012C6           	mov.w	#012Ch,w6
  5137  00B398  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5138  00B39A  00B004A7           	add.w	#74,w7
  5139  00B39C  00780297           	mov.w	[w7],w5
  5140  00B39E  00E12806           	cp.w	w5, w6
  5141  00B3A0  00310002           	bra	geu,u1931
  5142  00B3A2  0004B3B6           	goto	u1930
              00000000           
  5143  00B3A6                     u1931:
  5144  00B3A6  00205DC6           	mov.w	#05DCh,w6
  5145  00B3A8  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5146  00B3AA  00B004A7           	add.w	#74,w7
  5147  00B3AC  00780297           	mov.w	[w7],w5
  5148  00B3AE  00E12806           	cp.w	w5, w6
  5149  00B3B0  00360004           	bra	leu,u1941
  5150  00B3B2  0004B3B6           	goto	u1940
              00000000           
  5151  00B3B6                     u1930:
  5152  00B3B6                     u1940:
  5153  00B3B6  0004B3C2           	goto	u1950
              00000000           
  5154  00B3BA                     u1941:
  5155  00B3BA  0004B3BE           	goto	u1951
              00000000           
  5156  00B3BE                     u1951:
  5157  00B3BE  0004B3C8           	goto	l412
              00000000           
  5158  00B3C2                     u1950:
  5159                           ;DFMAIN.C: 1444: {
  5160                           
  5161                           ;DFMAIN.C: 1445: code |= 0x01;
  5162                           
  5163                           	line	1445
  5164  00B3C2  0097BB5F           	mov.w	[sp+((0+f33736+0)-0)],w6
  5165  00B3C4  00B30016           	ior.w	#1,w6
  5166  00B3C6  009FBFD6           	mov.w	w6,[sp+((0+f33736+0)-0)]
  5167                           	line	1446
  5168  00B3C8                     l412:
  5169                           ;DFMAIN.C: 1446: }
  5170                           
  5171                           ;DFMAIN.C: 1453: if ((dfp->t2_comp < 300) || (df
                                 p->t2_comp > 1500))
  5172                           
  5173                           	line	1453
  5174  00B3C8  002012C6           	mov.w	#012Ch,w6
  5175  00B3CA  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5176  00B3CC  00B00507           	add.w	#80,w7
  5177  00B3CE  00780297           	mov.w	[w7],w5
  5178  00B3D0  00E12806           	cp.w	w5, w6
  5179  00B3D2  00310002           	bra	geu,u1961
  5180  00B3D4  0004B3E8           	goto	u1960
              00000000           
  5181  00B3D8                     u1961:
  5182  00B3D8  00205DC6           	mov.w	#05DCh,w6
  5183  00B3DA  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5184  00B3DC  00B00507           	add.w	#80,w7
  5185  00B3DE  00780297           	mov.w	[w7],w5
  5186  00B3E0  00E12806           	cp.w	w5, w6
  5187  00B3E2  00360004           	bra	leu,u1971
  5188  00B3E4  0004B3E8           	goto	u1970
              00000000           
  5189  00B3E8                     u1960:
  5190  00B3E8                     u1970:
  5191  00B3E8  0004B3F4           	goto	u1980
              00000000           
  5192  00B3EC                     u1971:
  5193  00B3EC  0004B3F0           	goto	u1981
              00000000           
  5194  00B3F0                     u1981:
  5195  00B3F0  0004B3FA           	goto	l413
              00000000           
  5196  00B3F4                     u1980:
  5197                           ;DFMAIN.C: 1455: {
  5198                           
  5199                           ;DFMAIN.C: 1456: code |= 0x02;
  5200                           
  5201                           	line	1456
  5202  00B3F4  0097BB5F           	mov.w	[sp+((0+f33736+0)-0)],w6
  5203  00B3F6  00B30026           	ior.w	#2,w6
  5204  00B3F8  009FBFD6           	mov.w	w6,[sp+((0+f33736+0)-0)]
  5205                           	line	1457
  5206  00B3FA                     l413:
  5207                           ;DFMAIN.C: 1457: }
  5208                           
  5209                           ;DFMAIN.C: 1458: if (dfp->t2_comp > 500)
  5210                           
  5211                           	line	1458
  5212  00B3FA  00201F46           	mov.w	#01F4h,w6
  5213  00B3FC  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5214  00B3FE  00B00507           	add.w	#80,w7
  5215  00B400  00780297           	mov.w	[w7],w5
  5216  00B402  00E12806           	cp.w	w5, w6
  5217  00B404  00360002           	bra	leu,u1991
  5218  00B406  0004B40E           	goto	u1990
              00000000           
  5219  00B40A                     u1991:
  5220  00B40A  0004B414           	goto	l414
              00000000           
  5221  00B40E                     u1990:
  5222                           ;DFMAIN.C: 1459: {
  5223                           
  5224                           ;DFMAIN.C: 1460: code |= 0x02;
  5225                           
  5226                           	line	1460
  5227  00B40E  0097BB5F           	mov.w	[sp+((0+f33736+0)-0)],w6
  5228  00B410  00B30026           	ior.w	#2,w6
  5229  00B412  009FBFD6           	mov.w	w6,[sp+((0+f33736+0)-0)]
  5230                           	line	1461
  5231  00B414                     l414:
  5232                           ;DFMAIN.C: 1461: }
  5233                           
  5234                           ;DFMAIN.C: 1462: if ((ntc_comp < 120) || (ntc_co
                                 mp > 500))
  5235                           
  5236                           	line	1462
  5237  00B414  00200780           	mov.w	#078h,w0
  5238  00B416  00E30D7E           	cp.w	_ntc_comp
  5239  00B418  003D0002           	bra	ge,u2001
  5240  00B41A  0004B428           	goto	u2000
              00000000           
  5241  00B41E                     u2001:
  5242  00B41E  00201F40           	mov.w	#01F4h,w0
  5243  00B420  00E30D7E           	cp.w	_ntc_comp
  5244  00B422  00340004           	bra	le,u2011
  5245  00B424  0004B428           	goto	u2010
              00000000           
  5246  00B428                     u2000:
  5247  00B428                     u2010:
  5248  00B428  0004B434           	goto	u2020
              00000000           
  5249  00B42C                     u2011:
  5250  00B42C  0004B430           	goto	u2021
              00000000           
  5251  00B430                     u2021:
  5252  00B430  0004B43A           	goto	l415
              00000000           
  5253  00B434                     u2020:
  5254                           ;DFMAIN.C: 1463: {
  5255                           
  5256                           ;DFMAIN.C: 1464: code |= 0x08;
  5257                           
  5258                           	line	1464
  5259  00B434  0097BB5F           	mov.w	[sp+((0+f33736+0)-0)],w6
  5260  00B436  00B30086           	ior.w	#8,w6
  5261  00B438  009FBFD6           	mov.w	w6,[sp+((0+f33736+0)-0)]
  5262                           	line	1465
  5263  00B43A                     l415:
  5264                           ;DFMAIN.C: 1465: }
  5265                           
  5266                           ;DFMAIN.C: 1467: break;
  5267                           
  5268                           	line	1467
  5269  00B43A  0004B45A           	goto	l408
              00000000           
  5270                           ;DFMAIN.C: 1469: default:
  5271                           
  5272                           	line	1469
  5273  00B43E                     l416:
  5274                           ;DFMAIN.C: 1470: break;
  5275                           
  5276                           	line	1470
  5277  00B43E  0004B45A           	goto	l408
              00000000           
  5278                           ;DFMAIN.C: 1471: }
  5279                           
  5280                           	line	1471
  5281  00B442  0004B45A           	goto	l408
              00000000           
  5282                           	line	1432
  5283  00B446                     l409:
  5284  00B446  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  5285  00B448  00B00546           	add.w	#84,w6
  5286  00B44A  00780396           	mov.w	[w6],w7
  5287  00B44C  00780207           	mov.w	w7,w4
  5288  00B44E  00520261           	sub.w	w4,#1,w4
  5289  00B450  0032FFA2           	bra	z,l410
  5290  00B452  00520261           	sub.w	w4,#1,w4
  5291  00B454  0032FFA0           	bra	z,l411
  5292  00B456  0004B43E           	goto	l416
              00000000           
  5293                           
  5294                           	line	1471
  5295  00B45A                     l408:
  5296                           ;DFMAIN.C: 1473: if ((isImpedanceTooLow(dfp->imp
                                 _comp)) || (dfp->imp_comp >= 9999))
  5297                           
  5298                           	signat	_isImpedanceTooLow,4154
  5299                           	line	1473
  5300  00B45A  0097BB6F           	mov.w	[sp+((0+f33736+2)-0)],w6
  5301  00B45C  00B003E6           	add.w	#62,w6
  5302  00B45E  00780016           	mov.w	[w6],w0
  5303  00B460  0002BD04           	call	(_isImpedanceTooLow)	;0 bytes adjustment
              00000000           
  5304  00B464  00E00000           	cp0.w	w0
  5305  00B466  00320002           	bra	z,u2031
  5306  00B468  0004B47C           	goto	u2030
              00000000           
  5307  00B46C                     u2031:
  5308  00B46C  002270F6           	mov.w	#0270Fh,w6
  5309  00B46E  0097BBEF           	mov.w	[sp+((0+f33736+2)-0)],w7
  5310  00B470  00B003E7           	add.w	#62,w7
  5311  00B472  00780297           	mov.w	[w7],w5
  5312  00B474  00E12806           	cp.w	w5, w6
  5313  00B476  00390004           	bra	ltu,u2041
  5314  00B478  0004B47C           	goto	u2040
              00000000           
  5315  00B47C                     u2030:
  5316  00B47C                     u2040:
  5317  00B47C  0004B488           	goto	u2050
              00000000           
  5318  00B480                     u2041:
  5319  00B480  0004B484           	goto	u2051
              00000000           
  5320  00B484                     u2051:
  5321  00B484  0004B48E           	goto	l417
              00000000           
  5322  00B488                     u2050:
  5323                           ;DFMAIN.C: 1474: {
  5324                           
  5325                           ;DFMAIN.C: 1475: code |= 0x04;
  5326                           
  5327                           	line	1475
  5328  00B488  0097BB5F           	mov.w	[sp+((0+f33736+0)-0)],w6
  5329  00B48A  00B30046           	ior.w	#4,w6
  5330  00B48C  009FBFD6           	mov.w	w6,[sp+((0+f33736+0)-0)]
  5331                           	line	1476
  5332  00B48E                     l417:
  5333                           	line	1477
  5334  00B48E                     l402:
  5335                           ;DFMAIN.C: 1476: }
  5336                           
  5337                           ;DFMAIN.C: 1477: }
  5338                           
  5339                           ;DFMAIN.C: 1479: return code;
  5340                           
  5341                           	line	1479
  5342  00B48E  0097B85F           	mov.w	[sp+((0+f33736+0)-0)], w0
  5343  00B490  00780000           	mov.w	w0,w0
  5344  00B492  0004B496           	goto	l401
              00000000           
  5345                           ;DFMAIN.C: 1480: }
  5346                           
  5347                           	line	1480
  5348  00B496                     l401:
  5349                           	local	_ablate_bad
  5350                           
  5351  00B496  00B1006F           	sub.w	#6,sp
  5352  00B498  007804CF           	pop	w9
  5353  00B49A  0078044F           	pop	w8
  5354  00B49C  00060000           	return
  5355                           	line	1336
  5356                           
  5357  00B49E                     f33731:
  5358  00B49E  00781F88           	push	w8
  5359  00B4A0  00781F89           	push	w9
  5360                           
  5361  00B4A2  00B0006F           	add.w	#6,sp
  5362  00B4A4  0004B144           	goto	f33730
              00000000           
  5363  000000                     f33736	equ	-6		;stack offset for auto's
  5364  000000                     f33733	equ	-14		;stack offset for parameters
  5365                           	line	0
  5366                           	line	1499
  5367  00B4A8                     _display_time:
  5368  00B4A8  0004B580           	goto	f33751
              00000000           
  5369  00B4AC                     f33750:
  5370                           
  5371                           ;DFMAIN.C: 1498: static void display_time(unsign
                                 ed long total_rf_counts, unsigned int rf_cycle_c
                                 ounts)
  5372                           
  5373                           ;DFMAIN.C: 1499: {
  5374                           
  5375                           ;DFMAIN.C: 1500: if ((total_rf_counts/50) > (99 
                                 * 60))
  5376                           
  5377                           ;_rf_cycle_counts stored from w2
  5378                           	line	1500
  5379  00B4AC  002FFF86           	mov.w	#((0+f33756+0)-0),w6
  5380  00B4AE  00478306           	add.w	sp,w6,w6
  5381  00B4B0  00780B02           	mov.w	w2,[w6]
  5382                           ;_total_rf_counts stored from w01
  5383  00B4B2  009FBFD0           	mov.w	w0,[sp+((0+f33756+2)-0)]
  5384  00B4B4  009FBFE1           	mov.w	w1,[sp+((0+f33756+2)-0+2)]
  5385  00B4B6  00200005           	mov.w	#highword(01734h), w5
  5386  00B4B8  00217344           	mov.w	#(01734h & 0ffffh), w4
  5387  00B4BA  00200003           	mov.w	#highword(032h), w3
  5388  00B4BC  00200322           	mov.w	#(032h & 0ffffh), w2
  5389  00B4BE  002FFFA6           	mov.w	#((0+f33756+2)-0),w6
  5390  00B4C0  00478306           	add.w	sp,w6,w6
  5391  00B4C2  00BE0016           	mov.d	[w6],w0
  5392                           	global	lldiv
  5393  00B4C4  0002FAEC           	call	lldiv
              00000000           
  5394  00B4C8  00E10805           	cp.w	w1, w5
  5395  00B4CA  003A0001           	bra	nz,u2065
  5396  00B4CC  00E10004           	cp.w	w0, w4
  5397  00B4CE                     u2065:
  5398  00B4CE  00360002           	bra	leu,u2061
  5399  00B4D0  0004B4D8           	goto	u2060
              00000000           
  5400  00B4D4                     u2061:
  5401  00B4D4  0004B4E0           	goto	l419
              00000000           
  5402  00B4D8                     u2060:
  5403                           ;DFMAIN.C: 1501: {
  5404                           
  5405                           ;DFMAIN.C: 1504: total_rf_counts = ((unsigned lo
                                 ng) 50) * 99 * 60;
  5406                           
  5407                           	line	1504
  5408  00B4D8  00200045           	mov.w	#highword(048828h), w5
  5409  00B4DA  00288284           	mov.w	#(048828h & 0ffffh), w4
  5410  00B4DC  009FBFD4           	mov.w	w4,[sp+((0+f33756+2)-0)]
  5411  00B4DE  009FBFE5           	mov.w	w5,[sp+((0+f33756+2)-0+2)]
  5412                           	line	1505
  5413  00B4E0                     l419:
  5414                           ;DFMAIN.C: 1505: }
  5415                           
  5416                           ;DFMAIN.C: 1539: gDFDisplyPrintRFToTalValueTextI
                                 ((total_rf_counts+(50/2))/50);
  5417                           
  5418                           	line	1539
  5419  00B4E0  00200003           	mov.w	#highword(032h), w3
  5420  00B4E2  00200322           	mov.w	#(032h & 0ffffh), w2
  5421  00B4E4  002FFFA6           	mov.w	#((0+f33756+2)-0),w6
  5422  00B4E6  00478306           	add.w	sp,w6,w6
  5423  00B4E8  00BE0216           	mov.d	[w6],w4
  5424  00B4EA  00200007           	mov.w	#highword(019h), w7
  5425  00B4EC  00200196           	mov.w	#(019h & 0ffffh), w6
  5426  00B4EE  00420006           	add.w	w4,w6,w0
  5427  00B4F0  004A8087           	addc.w	w5,w7,w1
  5428                           	global	lldiv
  5429  00B4F2  0002FAEC           	call	lldiv
              00000000           
  5430  00B4F6  00780300           	mov.w	w0,w6
  5431  00B4F8  00780006           	mov	w6, w0
  5432  00B4FA  00029294           	call	(_gDFDisplyPrintRFToTalValueTextI)	;0 byte
              00000000           s adjustment
  5433                           ;DFMAIN.C: 1541: if ((((total_rf_counts % 50)+(5
                                 0/2))/50)+
  5434                           
  5435                           ;DFMAIN.C: 1542: (((rf_cycle_counts % 50)+(50/2)
                                 )/50) > 1)
  5436                           
  5437                           	line	1542
  5438  00B4FE  00200005           	mov.w	#highword(01h), w5
  5439  00B500  00200014           	mov.w	#(01h & 0ffffh), w4
  5440  00B502  00200326           	mov.w	#032h,w6
  5441  00B504  00200323           	mov.w	#032h,w3
  5442  00B506  002FFF87           	mov.w	#((0+f33756+0)-0),w7
  5443  00B508  00478387           	add.w	sp,w7,w7
  5444  00B50A  00780397           	mov.w	[w7],w7
  5445  00B50C  00090011           	repeat	#18-1
  5446  00B50E  00D88383           	div.uw	w7,w3
  5447  00B510  00B00191           	add.w	#25,w1
  5448  00B512  00090011           	repeat	#18-1
  5449  00B514  00D88086           	div.uw	w1,w6
  5450  00B516  00780300           	mov.w	w0,w6
  5451  00B518  00EB0380           	clr.w	w7
  5452  00B51A  00200009           	mov.w	#highword(019h), w9
  5453  00B51C  00200198           	mov.w	#(019h & 0ffffh), w8
  5454  00B51E  002FFFA3           	mov.w	#((0+f33756+2)-0),w3
  5455  00B520  00478183           	add.w	sp,w3,w3
  5456  00B522  00BE0013           	mov.d	[w3],w0
  5457  00B524  00200003           	mov.w	#highword(032h), w3
  5458  00B526  00200322           	mov.w	#(032h & 0ffffh), w2
  5459                           	global	llmod
  5460  00B528  0002FB40           	call	llmod
              00000000           
  5461  00B52C  00BE8100           	mov.d	w0,w2
  5462  00B52E  00410008           	add.w	w2,w8,w0
  5463  00B530  00498089           	addc.w	w3,w9,w1
  5464  00B532  00200003           	mov.w	#highword(032h), w3
  5465  00B534  00200322           	mov.w	#(032h & 0ffffh), w2
  5466                           	global	lldiv
  5467  00B536  0002FAEC           	call	lldiv
              00000000           
  5468  00B53A  00400106           	add.w	w0,w6,w2
  5469  00B53C  00488187           	addc.w	w1,w7,w3
  5470  00B53E  00E11805           	cp.w	w3, w5
  5471  00B540  003A0001           	bra	nz,u2075
  5472  00B542  00E11004           	cp.w	w2, w4
  5473  00B544                     u2075:
  5474  00B544  00360002           	bra	leu,u2071
  5475  00B546  0004B54E           	goto	u2070
              00000000           
  5476  00B54A                     u2071:
  5477  00B54A  0004B566           	goto	l420
              00000000           
  5478  00B54E                     u2070:
  5479                           ;DFMAIN.C: 1543: {
  5480                           
  5481                           ;DFMAIN.C: 1544: gDFDisplyPrintRFCycleValueTextI
                                 (rf_cycle_counts/50, 0, 0);
  5482                           
  5483                           	line	1544
  5484  00B54E  00200004           	mov.w	#0,w4
  5485  00B550  00200002           	mov.w	#0,w2
  5486  00B552  00200327           	mov.w	#032h,w7
  5487  00B554  002FFF86           	mov.w	#((0+f33756+0)-0),w6
  5488  00B556  00478306           	add.w	sp,w6,w6
  5489  00B558  00780316           	mov.w	[w6],w6
  5490  00B55A  00090011           	repeat	#18-1
  5491  00B55C  00D88307           	div.uw	w6,w7
  5492  00B55E  0002911C           	call	(_gDFDisplyPrintRFCycleValueTextI)	;0 byte
              00000000           s adjustment
  5493                           ;DFMAIN.C: 1545: }
  5494                           
  5495                           	line	1545
  5496  00B562  0004B578           	goto	l421
              00000000           
  5497                           	line	1546
  5498  00B566                     l420:
  5499                           ;DFMAIN.C: 1546: else
  5500                           
  5501                           ;DFMAIN.C: 1547: {
  5502                           
  5503                           ;DFMAIN.C: 1548: gDFDisplyPrintRFCycleValueTextI
                                 ((rf_cycle_counts+(50/2))/50, 0, 0);
  5504                           
  5505                           	line	1548
  5506  00B566  00200004           	mov.w	#0,w4
  5507  00B568  00200002           	mov.w	#0,w2
  5508  00B56A  00200326           	mov.w	#032h,w6
  5509  00B56C  0097BBCF           	mov.w	[sp+((0+f33756+0)-0)],w7
  5510  00B56E  00B00197           	add.w	#25,w7
  5511  00B570  00090011           	repeat	#18-1
  5512  00B572  00D88386           	div.uw	w7,w6
  5513  00B574  0002911C           	call	(_gDFDisplyPrintRFCycleValueTextI)	;0 byte
              00000000           s adjustment
  5514                           	line	1549
  5515  00B578                     l421:
  5516                           ;DFMAIN.C: 1549: }
  5517                           
  5518                           ;DFMAIN.C: 1550: }
  5519                           
  5520                           	line	1550
  5521  00B578                     l418:
  5522                           	local	_display_time
  5523                           
  5524  00B578  00B1008F           	sub.w	#8,sp
  5525  00B57A  007804CF           	pop	w9
  5526  00B57C  0078044F           	pop	w8
  5527  00B57E  00060000           	return
  5528                           	line	1499
  5529                           
  5530  00B580                     f33751:
  5531  00B580  00781F88           	push	w8
  5532  00B582  00781F89           	push	w9
  5533                           
  5534  00B584  00B0008F           	add.w	#8,sp
  5535  00B586  0004B4AC           	goto	f33750
              00000000           
  5536  000000                     f33756	equ	-8		;stack offset for auto's
  5537  000000                     f33753	equ	-16		;stack offset for parameters
  5538                           	line	0
  5539                           	global	_TempControl
  5540                           	signat	_TempControl,12346
  5541                           	line	1573
  5542  00B58A                     _TempControl:
  5543  00B58A  0004B652           	goto	f33761
              00000000           
  5544  00B58E                     f33760:
  5545                           
  5546                           ;DFMAIN.C: 1572: unsigned int TempControl(unsign
                                 ed int OldPower, signed int TempSet, signed int 
                                 Temperature)
  5547                           
  5548                           ;DFMAIN.C: 1573: {
  5549                           
  5550                           ;DFMAIN.C: 1574: static signed int OldTemp;
  5551                           
  5552                           ;DFMAIN.C: 1575: signed long NewPower;
  5553                           
  5554                           ;DFMAIN.C: 1576: unsigned int MAXPower;
  5555                           
  5556                           ;DFMAIN.C: 1578: NewPower = (signed long)OldPowe
                                 r
  5557                           
  5558                           ;DFMAIN.C: 1579: + (signed long)(TempSet - Tempe
                                 rature) * 20L
  5559                           
  5560                           ;DFMAIN.C: 1580: + (signed long)(OldTemp - Tempe
                                 rature) * 160L;
  5561                           
  5562                           ;_Temperature stored from w4
  5563                           	line	1580
  5564  00B58E  002FFF86           	mov.w	#((0+f33766+6)-0),w6
  5565  00B590  00478306           	add.w	sp,w6,w6
  5566  00B592  00780B04           	mov.w	w4,[w6]
  5567                           ;_OldPower stored from w0
  5568  00B594  002FFFA6           	mov.w	#((0+f33766+8)-0),w6
  5569  00B596  00478306           	add.w	sp,w6,w6
  5570  00B598  00780B00           	mov.w	w0,[w6]
  5571                           ;_TempSet stored from w2
  5572  00B59A  002FFFC6           	mov.w	#((0+f33766+10)-0),w6
  5573  00B59C  00478306           	add.w	sp,w6,w6
  5574+ 00B59E  00780B02           	mov.w	w2,[w6]
  5575+ 00B5A0  00200003           	mov.w	#highword(014h), w3
  5576+ 00B5A2  00200142           	mov.w	#(014h & 0ffffh), w2
  5577+ 00B5A4  002FFF86           	mov.w	#((0+f33766+6)-0),w6
  5578+ 00B5A6  00478306           	add.w	sp,w6,w6
  5579+ 00B5A8  00780396           	mov.w	[w6],w7
  5580+ 00B5AA  0020D586           	mov.w	#F9737,w6
  5581+ 00B5AC  00780316           	mov.w	[w6],w6
  5582+ 00B5AE  00530307           	sub.w	w6,w7,w6
  5583+ 00B5B0  00780306           	mov.w	w6,w6
  5584+ 00B5B2  00EB0380           	clr.w	w7
  5585+ 00B5B4  00A7F006           	btsc	w6,#15
  5586+ 00B5B6  00EB8380           	setm	w7
  5587+ 00B5B8  00DE324D           	lsr	w6,#(16-3),w4
  5588+ 00B5BA  00DD3AC3           	sl	w7,#3,w5
  5589+ 00B5BC  00728284           	ior.w	w5,w4,w5
  5590+ 00B5BE  00DD3243           	sl	w6,#3,w4
  5591+ 00B5C0  002FFF86           	mov.w	#((0+f33766+6)-0),w6
  5592+ 00B5C2  00478306           	add.w	sp,w6,w6
  5593+ 00B5C4  00780396           	mov.w	[w6],w7
  5594+ 00B5C6  0097BB6F           	mov.w	[sp+((0+f33766+10)-0)],w6
  5595+ 00B5C8  00530307           	sub.w	w6,w7,w6
  5596+ 00B5CA  00780306           	mov.w	w6,w6
  5597+ 00B5CC  00EB0380           	clr.w	w7
  5598+ 00B5CE  00A7F006           	btsc	w6,#15
  5599+ 00B5D0  00EB8380           	setm	w7
  5600+ 00B5D2  00430404           	add.w	w6,w4,w8
  5601+ 00B5D4  004B8485           	addc.w	w7,w5,w9
  5602+ 00B5D6  00BE8008           	mov.d	w8,w0
  5603+                          	global	almul
  5604+ 00B5D8  0002FB96           	call	almul
      +       00000000           
  5605+ 00B5DC  0097BA5F           	mov.w	[sp+((0+f33766+8)-0)],w4
  5606+ 00B5DE  00EB0280           	clr.w	w5
  5607+ 00B5E0  00420300           	add.w	w4,w0,w6
  5608+ 00B5E2  004A8381           	addc.w	w5,w1,w7
  5609+ 00B5E4  009FBF96           	mov.w	w6,[sp+((0+f33766+0)-0)]
  5610+ 00B5E6  009FBFA7           	mov.w	w7,[sp+((0+f33766+0)-0+2)]
  5611+                          ;DFMAIN.C: 1581: OldTemp = Temperature;
  5612+                          
  5613+                          	line	1581
  5614+ 00B5E8  002FFF86           	mov.w	#((0+f33766+6)-0),w6
  5615+ 00B5EA  00478306           	add.w	sp,w6,w6
  5616+ 00B5EC  00780316           	mov.w	[w6],w6
  5617+ 00B5EE  00886AC6           	mov	w6,F9737
  5618+                          ;DFMAIN.C: 1582: if (NewPower < 0L)
  5619+                          
  5620+                          	line	1582
  5621+ 00B5F0  002FFF26           	mov.w	#((0+f33766+0)-0),w6
  5622+ 00B5F2  00478306           	add.w	sp,w6,w6
  5623+ 00B5F4  00BE0216           	mov.d	[w6],w4
  5624+ 00B5F6  00200007           	mov.w	#highword(0), w7
  5625+ 00B5F8  00200006           	mov.w	#(0 & 0ffffh), w6
  5626+ 00B5FA  00280003           	mov.w	#8000h,w3
  5627+ 00B5FC  006A8103           	xor	w5,w3,w2
  5628+ 00B5FE  006B8183           	xor	w7,w3,w3
  5629+ 00B600  00E11003           	cp.w	w2, w3
  5630+ 00B602  003A0001           	bra	nz,u2085
  5631+ 00B604  00E12006           	cp.w	w4, w6
  5632+ 00B606                     u2085:
  5633+ 00B606  00310002           	bra	geu,u2081
  5634+ 00B608  0004B610           	goto	u2080
      +       00000000           
  5635+ 00B60C                     u2081:
  5636+ 00B60C  0004B616           	goto	l423
      +       00000000           
  5637+ 00B610                     u2080:
  5638+                          ;DFMAIN.C: 1583: return 0;
  5639+                          
  5640+                          	line	1583
  5641+ 00B610  00200000           	mov.w	#0,w0	;return #0 in w0
  5642+ 00B612  0004B64A           	goto	l422
      +       00000000           
  5643+ 00B616                     l423:
  5644+                          ;DFMAIN.C: 1584: if (NewPower > 25000L)
  5645+                          
  5646+                          	line	1584
  5647+ 00B616  002FFF26           	mov.w	#((0+f33766+0)-0),w6
  5648+ 00B618  00478306           	add.w	sp,w6,w6
  5649+ 00B61A  00BE0216           	mov.d	[w6],w4
  5650+ 00B61C  00200007           	mov.w	#highword(061A8h), w7
  5651+ 00B61E  00261A86           	mov.w	#(061A8h & 0ffffh), w6
  5652+ 00B620  00280003           	mov.w	#8000h,w3
  5653+ 00B622  006A8103           	xor	w5,w3,w2
  5654+ 00B624  006B8183           	xor	w7,w3,w3
  5655+ 00B626  00E11003           	cp.w	w2, w3
  5656+ 00B628  003A0001           	bra	nz,u2095
  5657+ 00B62A  00E12006           	cp.w	w4, w6
  5658+ 00B62C                     u2095:
  5659+ 00B62C  00360002           	bra	leu,u2091
  5660+ 00B62E  0004B636           	goto	u2090
      +       00000000           
  5661+ 00B632                     u2091:
  5662+ 00B632  0004B63E           	goto	l424
      +       00000000           
  5663+ 00B636                     u2090:
  5664+                          ;DFMAIN.C: 1585: return 25000;
  5665+                          
  5666+                          	line	1585
  5667+ 00B636  00261A80           	mov.w	#061A8h,w0
  5668+ 00B638  00780000           	mov.w	w0,w0
  5669+ 00B63A  0004B64A           	goto	l422
      +       00000000           
  5670+ 00B63E                     l424:
  5671+                          ;DFMAIN.C: 1586: return(unsigned int)NewPower;
  5672+                          
  5673+                          	line	1586
  5674+ 00B63E  002FFF26           	mov.w	#((0+f33766+0)-0),w6
  5675+ 00B640  00478306           	add.w	sp,w6,w6
  5676+ 00B642  00BE0016           	mov.d	[w6],w0
  5677+ 00B644  00780000           	mov.w	w0,w0
  5678+ 00B646  0004B64A           	goto	l422
      +       00000000           
  5679+                          ;DFMAIN.C: 1587: }
  5680+                          
  5681+                          	line	1587
  5682+ 00B64A                     l422:
  5683+                          	global	_TempControl
  5684+                          
  5685+ 00B64A  00B100EF           	sub.w	#14,sp
  5686+ 00B64C  007804CF           	pop	w9
  5687+ 00B64E  0078044F           	pop	w8
  5688+ 00B650  00060000           	return
  5689+                          	line	1573
  5690+                          
  5691+ 00B652                     f33761:
  5692+ 00B652  00781F88           	push	w8
  5693+ 00B654  00781F89           	push	w9
  5694+                          
  5695+ 00B656  00B000EF           	add.w	#14,sp
  5696+ 00B658  0004B58E           	goto	f33760
      +       00000000           
  5697+ 000000                     f33766	equ	-14		;stack offset for auto's
  5698+ 000000                     f33763	equ	-22		;stack offset for parameters
  5699+                          	line	0
  5700+                          	psect	mconst
  5701+ 008504                     align 2
  5702+ 008504                     _ablate_powers:
  5703+                          	
  5704+ 008504                     	ds	2
  5705+                          	psect	const
  5706+ 000A08                     align 4
  5707+                          
  5708+ 000A08  00001388           	dw	(5000)
  5709+                          	psect	mconst
  5710+                          	
  5711+ 008506                     	ds	2
  5712+                          	psect	const
  5713+                          
  5714+ 000A0C  00002710           	dw	(10000)
  5715+                          	psect	mconst
  5716+ 008508                     	ds	2
  5717+                          	psect	const
  5718+ 000A10  00000000           	dw	0
  5719+                          	psect	mconst
  5720+ 00850A                     align 2
  5721+ 00850A                     _ablate_temps:
  5722+                          	
  5723+ 00850A                     	ds	2
  5724+                          	psect	const
  5725+ 000A14                     align 4
  5726+                          
  5727+ 000A14  00000640           	dw	(1600)
  5728+                          	psect	mconst
  5729+                          	
  5730+ 00850C                     	ds	2
  5731+                          	psect	const
  5732+                          
  5733+ 000A18  00000640           	dw	(1600)
  5734+                          	psect	mconst
  5735+ 00850E                     	ds	2
  5736+                          	psect	const
  5737+ 000A1C  00000000           	dw	0
  5738+                          	psect	mconst
  5739+ 008510                     align 2
  5740+ 008510                     _ablate_ramps:
  5741+                          	
  5742+ 008510                     	ds	2
  5743+                          	psect	const
  5744+ 000A20                     align 4
  5745+                          
  5746+ 000A20  00000014           	dw	(20)
  5747+                          	psect	mconst
  5748+                          	
  5749+ 008512                     	ds	2
  5750+                          	psect	const
  5751+                          
  5752+ 000A24  0000001E           	dw	(30)
  5753+                          	psect	mconst
  5754+ 008514                     	ds	2
  5755+                          	psect	const
  5756+ 000A28  00000000           	dw	0
  5757+                          	psect	text
  5758+                          	line	1625
  5759+ 00B65C                     _ablate_power:
  5760+ 00B65C  0004B918           	goto	f33811
      +       00000000           
  5761+ 00B660                     f33810:
  5762+                          
  5763+                          ;DFMAIN.C: 1624: static void ablate_power(struct
      +                           DFinestruct *dfp, unsigned int setting)
  5764+                          
  5765+                          ;DFMAIN.C: 1625: {
  5766+                          
  5767+                          ;DFMAIN.C: 1626: static unsigned int zmin, zinit
      +                          , DACvalue = 0;
  5768+                          
  5769+                          ;DFMAIN.C: 1627: unsigned int max_power,power_ra
      +                          mp;
  5770+                          
  5771+                          ;DFMAIN.C: 1628: unsigned long impedance_scale;
  5772+                          
  5773+                          ;DFMAIN.C: 1629: signed int data[4];
  5774+                          
  5775+                          ;DFMAIN.C: 1631: read_RF_ADC(data);
  5776+                          
  5777+                          	global	_read_RF_ADC
  5778+                          	signat	_read_RF_ADC,4154
  5779+                          ;_setting stored from w2
  5780+                          	line	1631
  5781+ 00B660  002FFFA6           	mov.w	#((0+f33816+16)-0),w6
  5782+ 00B662  00478306           	add.w	sp,w6,w6
  5783+ 00B664  00780B02           	mov.w	w2,[w6]
  5784+                          ;_dfp stored from w0
  5785+ 00B666  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  5786+ 00B668  00478306           	add.w	sp,w6,w6
  5787+ 00B66A  00780B00           	mov.w	w0,[w6]
  5788+ 00B66C  002FFF20           	mov.w	#(0+f33816+8)-0,w0
  5789+ 00B66E  00478000           	add.w	sp,w0,w0
  5790+ 00B670  0002C9F6           	call	(_read_RF_ADC)	;0 bytes adjustment
      +       00000000           
  5791+                          ;DFMAIN.C: 1632: if ((data[2] = (signed int)(((s
      +                          igned long)data[2] * es.RFpowerscale) / 8191L)) 
      +                          < 0)
  5792+                          
  5793+                          	line	1632
  5794+ 00B674  00200006           	mov.w	#0,w6
  5795+ 00B676  002119C7           	mov.w	#_es,w7
  5796+ 00B678  00780387           	mov.w	w7,w7
  5797+ 00B67A  00B00187           	add.w	#24,w7
  5798+ 00B67C  00780297           	mov.w	[w7],w5
  5799+ 00B67E  00780105           	mov.w	w5,w2
  5800+ 00B680  00EB0180           	clr.w	w3
  5801+ 00B682  0097BBBF           	mov.w	[sp+((0+f33816+8)-0+04h)], w7
  5802+ 00B684  00780207           	mov.w	w7,w4
  5803+ 00B686  00EB0280           	clr.w	w5
  5804+ 00B688  00A7F004           	btsc	w4,#15
  5805+ 00B68A  00EB8280           	setm	w5
  5806+ 00B68C  00BE8004           	mov.d	w4,w0
  5807+                          	global	almul
  5808+ 00B68E  0002FB96           	call	almul
      +       00000000           
  5809+ 00B692  00200003           	mov.w	#highword(01FFFh), w3
  5810+ 00B694  0021FFF2           	mov.w	#(01FFFh & 0ffffh), w2
  5811+                          	global	aldiv
  5812+ 00B696  0002FB62           	call	aldiv
      +       00000000           
  5813+ 00B69A  00780380           	mov.w	w0,w7
  5814+ 00B69C  009FBFB7           	mov.w	w7,[sp+((0+f33816+8)-0+04h)]
  5815+ 00B69E  00E13806           	cp.w	w7, w6
  5816+ 00B6A0  003D0002           	bra	ge,u2101
  5817+ 00B6A2  0004B6AA           	goto	u2100
      +       00000000           
  5818+ 00B6A6                     u2101:
  5819+ 00B6A6  0004B6B2           	goto	l426
      +       00000000           
  5820+ 00B6AA                     u2100:
  5821+                          ;DFMAIN.C: 1633: data[2] = 0;
  5822+                          
  5823+                          	line	1633
  5824+ 00B6AA  00200006           	mov.w	#0,w6
  5825+ 00B6AC  002FFF67           	mov.w	#((0+f33816+8)-0+04h),w7
  5826+ 00B6AE  00478387           	add.w	sp,w7,w7
  5827+ 00B6B0  00780B86           	mov.w	w6,[w7]
  5828+ 00B6B2                     l426:
  5829+                          ;DFMAIN.C: 1634: dfp->RFpower = data[2];
  5830+                          
  5831+                          	line	1634
  5832+ 00B6B2  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  5833+ 00B6B4  00478306           	add.w	sp,w6,w6
  5834+ 00B6B6  00780396           	mov	[w6],w7
  5835+ 00B6B8  002FFF66           	mov.w	#((0+f33816+8)-0+04h),w6
  5836+ 00B6BA  00478306           	add.w	sp,w6,w6
  5837+ 00B6BC  00780316           	mov.w	[w6],w6
  5838+ 00B6BE  00980BB6           	mov.w	w6,[w7+22]
  5839+                          ;DFMAIN.C: 1635: dfp->RFvoltage = (signed int)((
      +                          (signed long)data[0] * es.RFvoltagescale) / 8191
      +                          L);
  5840+                          
  5841+                          	line	1635
  5842+ 00B6C0  002119C6           	mov.w	#_es,w6
  5843+ 00B6C2  00780306           	mov.w	w6,w6
  5844+ 00B6C4  00B001A6           	add.w	#26,w6
  5845+ 00B6C6  00780396           	mov.w	[w6],w7
  5846+ 00B6C8  00780107           	mov.w	w7,w2
  5847+ 00B6CA  00EB0180           	clr.w	w3
  5848+ 00B6CC  0097BB1F           	mov.w	[sp+((0+f33816+8)-0)], w6
  5849+ 00B6CE  00780306           	mov.w	w6,w6
  5850+ 00B6D0  00EB0380           	clr.w	w7
  5851+ 00B6D2  00A7F006           	btsc	w6,#15
  5852+ 00B6D4  00EB8380           	setm	w7
  5853+ 00B6D6  00BE8006           	mov.d	w6,w0
  5854+                          	global	almul
  5855+ 00B6D8  0002FB96           	call	almul
      +       00000000           
  5856+ 00B6DC  00200003           	mov.w	#highword(01FFFh), w3
  5857+ 00B6DE  0021FFF2           	mov.w	#(01FFFh & 0ffffh), w2
  5858+                          	global	aldiv
  5859+ 00B6E0  0002FB62           	call	aldiv
      +       00000000           
  5860+ 00B6E4  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  5861+ 00B6E6  00478306           	add.w	sp,w6,w6
  5862+ 00B6E8  00780396           	mov	[w6],w7
  5863+ 00B6EA  00980BF0           	mov.w	w0,[w7+30]
  5864+                          ;DFMAIN.C: 1636: dfp->RFcurrent = (signed int)((
      +                          (signed long)data[1] * es.RFcurrentscale) / 8191
      +                          L);
  5865+                          
  5866+                          	line	1636
  5867+ 00B6EC  002119C6           	mov.w	#_es,w6
  5868+ 00B6EE  00780306           	mov.w	w6,w6
  5869+ 00B6F0  00B001C6           	add.w	#28,w6
  5870+ 00B6F2  00780396           	mov.w	[w6],w7
  5871+ 00B6F4  00780107           	mov.w	w7,w2
  5872+ 00B6F6  00EB0180           	clr.w	w3
  5873+ 00B6F8  0097BB2F           	mov.w	[sp+((0+f33816+8)-0+02h)], w6
  5874+ 00B6FA  00780306           	mov.w	w6,w6
  5875+ 00B6FC  00EB0380           	clr.w	w7
  5876+ 00B6FE  00A7F006           	btsc	w6,#15
  5877+ 00B700  00EB8380           	setm	w7
  5878+ 00B702  00BE8006           	mov.d	w6,w0
  5879+                          	global	almul
  5880+ 00B704  0002FB96           	call	almul
      +       00000000           
  5881+ 00B708  00200003           	mov.w	#highword(01FFFh), w3
  5882+ 00B70A  0021FFF2           	mov.w	#(01FFFh & 0ffffh), w2
  5883+                          	global	aldiv
  5884+ 00B70C  0002FB62           	call	aldiv
      +       00000000           
  5885+ 00B710  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  5886+ 00B712  00478306           	add.w	sp,w6,w6
  5887+ 00B714  00780396           	mov	[w6],w7
  5888+ 00B716  00981380           	mov.w	w0,[w7+32]
  5889+                          ;DFMAIN.C: 1638: if (dfp->rfontime == 0)
  5890+                          
  5891+                          	line	1638
  5892+ 00B718  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  5893+ 00B71A  00B00026           	add.w	#2,w6
  5894+ 00B71C  00E00016           	cp0.w	[w6]
  5895+ 00B71E  003A0002           	bra	nz,u2111
  5896+ 00B720  0004B728           	goto	u2110
      +       00000000           
  5897+ 00B724                     u2111:
  5898+ 00B724  0004B75E           	goto	l427
      +       00000000           
  5899+ 00B728                     u2110:
  5900+                          ;DFMAIN.C: 1639: {
  5901+                          
  5902+                          ;DFMAIN.C: 1640: DACvalue = 0;
  5903+                          
  5904+                          	line	1640
  5905+ 00B728  00EF2D5A           	clr.w	F9751
  5906+                          ;DFMAIN.C: 1641: dfp->power_setp = 100;
  5907+                          
  5908+                          	line	1641
  5909+ 00B72A  00200646           	mov.w	#064h,w6
  5910+ 00B72C  002FFFC7           	mov.w	#((0+f33816+18)-0),w7
  5911+ 00B72E  00478387           	add.w	sp,w7,w7
  5912+ 00B730  00780297           	mov	[w7],w5
  5913+ 00B732  00980A86           	mov.w	w6,[w5+16]
  5914+                          ;DFMAIN.C: 1642: dfp->pramp = 100;
  5915+                          
  5916+                          	line	1642
  5917+ 00B734  00200646           	mov.w	#064h,w6
  5918+ 00B736  002FFFC7           	mov.w	#((0+f33816+18)-0),w7
  5919+ 00B738  00478387           	add.w	sp,w7,w7
  5920+ 00B73A  00780297           	mov	[w7],w5
  5921+ 00B73C  00981AB6           	mov.w	w6,[w5+54]
  5922+                          ;DFMAIN.C: 1643: powercontrol(0, 0, dfp->RFpower
      +                          );
  5923+                          
  5924+                          	global	_powercontrol
  5925+                          	signat	_powercontrol,12346
  5926+                          	line	1643
  5927+ 00B73E  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  5928+ 00B740  00B00166           	add.w	#22,w6
  5929+ 00B742  00780216           	mov.w	[w6],w4
  5930+ 00B744  00200002           	mov.w	#0,w2
  5931+ 00B746  00200000           	mov.w	#0,w0
  5932+ 00B748  0002BF2E           	call	(_powercontrol)	;0 bytes adjustment
      +       00000000           
  5933+                          ;DFMAIN.C: 1644: TempControl(0, 0, dfp->temperat
      +                          ure1);
  5934+                          
  5935+                          	line	1644
  5936+ 00B74C  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  5937+ 00B74E  00B00246           	add.w	#36,w6
  5938+ 00B750  00780216           	mov.w	[w6],w4
  5939+ 00B752  00200002           	mov.w	#0,w2
  5940+ 00B754  00200000           	mov.w	#0,w0
  5941+ 00B756  0002B58A           	call	(_TempControl)	;0 bytes adjustment
      +       00000000           
  5942+                          ;DFMAIN.C: 1645: }
  5943+                          
  5944+                          	line	1645
  5945+ 00B75A  0004B902           	goto	l428
      +       00000000           
  5946+                          	line	1646
  5947+ 00B75E                     l427:
  5948+                          ;DFMAIN.C: 1646: else
  5949+                          
  5950+                          ;DFMAIN.C: 1647: {
  5951+                          
  5952+                          ;DFMAIN.C: 1648: max_power = ablate_powers[setti
      +                          ng - ABLATE_POWER_SETTING_MINNDX];
  5953+                          
  5954+                          	line	1648
  5955+ 00B75E  002FFFE7           	mov.w	#-2,w7
  5956+ 00B760  00285046           	mov.w	#_ablate_powers,w6
  5957+ 00B762  00780306           	mov.w	w6,w6
  5958+ 00B764  00430307           	add.w	w6,w7,w6
  5959+ 00B766  0097BBDF           	mov.w	[sp+((0+f33816+16)-0)],w7
  5960+ 00B768  00DD3BC1           	sl	w7,#1,w7
  5961+ 00B76A  00438386           	add.w	w7,w6,w7
  5962+ 00B76C  002FFEA6           	mov.w	#((0+f33816+0)-0),w6
  5963+ 00B76E  00478306           	add.w	sp,w6,w6
  5964+ 00B770  00780B17           	mov.w	[w7],[w6]
  5965+                          ;DFMAIN.C: 1650: dfp->pramp=dfp->pramp+ablate_ra
      +                          mps[setting - ABLATE_POWER_SETTING_MINNDX];
  5966+                          
  5967+                          	line	1650
  5968+ 00B772  00285106           	mov.w	#_ablate_ramps,w6
  5969+ 00B774  00780386           	mov.w	w6,w7
  5970+ 00B776  002FFFE6           	mov.w	#-2,w6
  5971+ 00B778  00438386           	add.w	w7,w6,w7
  5972+ 00B77A  0097BB5F           	mov.w	[sp+((0+f33816+16)-0)],w6
  5973+ 00B77C  00DD3341           	sl	w6,#1,w6
  5974+ 00B77E  00430307           	add.w	w6,w7,w6
  5975+ 00B780  00780396           	mov.w	[w6],w7
  5976+ 00B782  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  5977+ 00B784  00B00366           	add.w	#54,w6
  5978+ 00B786  00780296           	mov.w	[w6],w5
  5979+ 00B788  00428287           	add.w	w5,w7,w5
  5980+ 00B78A  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  5981+ 00B78C  00478306           	add.w	sp,w6,w6
  5982+ 00B78E  00780396           	mov	[w6],w7
  5983+ 00B790  00981BB5           	mov.w	w5,[w7+54]
  5984+                          ;DFMAIN.C: 1651: if (dfp->pramp>=max_power) dfp-
      +                          >pramp = max_power;
  5985+                          
  5986+                          	line	1651
  5987+ 00B792  002FFEA6           	mov.w	#((0+f33816+0)-0),w6
  5988+ 00B794  00478306           	add.w	sp,w6,w6
  5989+ 00B796  00780316           	mov.w	[w6],w6
  5990+ 00B798  0097BBEF           	mov.w	[sp+((0+f33816+18)-0)],w7
  5991+ 00B79A  00B00367           	add.w	#54,w7
  5992+ 00B79C  00780297           	mov.w	[w7],w5
  5993+ 00B79E  00E12806           	cp.w	w5, w6
  5994+ 00B7A0  00390002           	bra	ltu,u2121
  5995+ 00B7A2  0004B7AA           	goto	u2120
      +       00000000           
  5996+ 00B7A6                     u2121:
  5997+ 00B7A6  0004B7B8           	goto	l429
      +       00000000           
  5998+ 00B7AA                     u2120:
  5999+ 00B7AA  002FFEA6           	mov.w	#((0+f33816+0)-0),w6
  6000+ 00B7AC  00478306           	add.w	sp,w6,w6
  6001+ 00B7AE  00780316           	mov.w	[w6],w6
  6002+ 00B7B0  002FFFC7           	mov.w	#((0+f33816+18)-0),w7
  6003+ 00B7B2  00478387           	add.w	sp,w7,w7
  6004+ 00B7B4  00780297           	mov	[w7],w5
  6005+ 00B7B6  00981AB6           	mov.w	w6,[w5+54]
  6006+ 00B7B8                     l429:
  6007+                          ;DFMAIN.C: 1652: max_power = dfp->pramp;
  6008+                          
  6009+                          	line	1652
  6010+ 00B7B8  0097BBEF           	mov.w	[sp+((0+f33816+18)-0)],w7
  6011+ 00B7BA  00B00367           	add.w	#54,w7
  6012+ 00B7BC  002FFEA6           	mov.w	#((0+f33816+0)-0),w6
  6013+ 00B7BE  00478306           	add.w	sp,w6,w6
  6014+ 00B7C0  00780B17           	mov.w	[w7],[w6]
  6015+                          ;DFMAIN.C: 1655: if (dfp->rfontime > 15)
  6016+                          
  6017+                          	line	1655
  6018+ 00B7C2  002000F6           	mov.w	#0Fh,w6
  6019+ 00B7C4  0097BBEF           	mov.w	[sp+((0+f33816+18)-0)],w7
  6020+ 00B7C6  00B00027           	add.w	#2,w7
  6021+ 00B7C8  00780297           	mov.w	[w7],w5
  6022+ 00B7CA  00E12806           	cp.w	w5, w6
  6023+ 00B7CC  00360002           	bra	leu,u2131
  6024+ 00B7CE  0004B7D6           	goto	u2130
      +       00000000           
  6025+ 00B7D2                     u2131:
  6026+ 00B7D2  0004B87C           	goto	l430
      +       00000000           
  6027+ 00B7D6                     u2130:
  6028+                          ;DFMAIN.C: 1656: {
  6029+                          
  6030+                          ;DFMAIN.C: 1659: impedance_scale = ((unsigned lo
      +                          ng)(es.RFvoltagescale) * 10000L);
  6031+                          
  6032+                          	line	1659
  6033+ 00B7D6  00200003           	mov.w	#highword(02710h), w3
  6034+ 00B7D8  00227102           	mov.w	#(02710h & 0ffffh), w2
  6035+ 00B7DA  002119C6           	mov.w	#_es,w6
  6036+ 00B7DC  00780306           	mov.w	w6,w6
  6037+ 00B7DE  00B001A6           	add.w	#26,w6
  6038+ 00B7E0  00780216           	mov.w	[w6],w4
  6039+ 00B7E2  00EB0280           	clr.w	w5
  6040+ 00B7E4  00BE8004           	mov.d	w4,w0
  6041+                          	global	llmul
  6042+ 00B7E6  0002FB96           	call	llmul
      +       00000000           
  6043+ 00B7EA  009FB7F0           	mov.w	w0,[sp+((0+f33816+4)-0)]
  6044+ 00B7EC  009FBF81           	mov.w	w1,[sp+((0+f33816+4)-0+2)]
  6045+                          ;DFMAIN.C: 1660: impedance_scale /= (unsigned lo
      +                          ng)(es.RFcurrentscale);
  6046+                          
  6047+                          	line	1660
  6048+ 00B7EE  002119C6           	mov.w	#_es,w6
  6049+ 00B7F0  00780306           	mov.w	w6,w6
  6050+ 00B7F2  00B001C6           	add.w	#28,w6
  6051+ 00B7F4  00780396           	mov.w	[w6],w7
  6052+ 00B7F6  00780107           	mov.w	w7,w2
  6053+ 00B7F8  00EB0180           	clr.w	w3
  6054+ 00B7FA  002FFEE6           	mov.w	#((0+f33816+4)-0),w6
  6055+ 00B7FC  00478306           	add.w	sp,w6,w6
  6056+ 00B7FE  00BE0016           	mov.d	[w6],w0
  6057+                          	global	lldiv
  6058+ 00B800  0002FAEC           	call	lldiv
      +       00000000           
  6059+ 00B804  00BE8B00           	mov.d	w0,[w6]
  6060+                          ;DFMAIN.C: 1661: if (data[0] <= 0)
  6061+                          
  6062+                          	line	1661
  6063+ 00B806  00200007           	mov.w	#0,w7
  6064+ 00B808  002FFF26           	mov.w	#((0+f33816+8)-0),w6
  6065+ 00B80A  00478306           	add.w	sp,w6,w6
  6066+ 00B80C  00780316           	mov.w	[w6],w6
  6067+ 00B80E  00E13007           	cp.w	w6, w7
  6068+ 00B810  003C0002           	bra	gt,u2141
  6069+ 00B812  0004B81A           	goto	u2140
      +       00000000           
  6070+ 00B816                     u2141:
  6071+ 00B816  0004B828           	goto	l431
      +       00000000           
  6072+ 00B81A                     u2140:
  6073+                          ;DFMAIN.C: 1662: dfp->impedance = 0;
  6074+                          
  6075+                          	line	1662
  6076+ 00B81A  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  6077+ 00B81C  00478306           	add.w	sp,w6,w6
  6078+ 00B81E  00780316           	mov.w	[w6],w6
  6079+ 00B820  00200007           	mov.w	#0,w7
  6080+ 00B822  00780B07           	mov.w	w7,[w6]
  6081+ 00B824  0004B87C           	goto	l432
      +       00000000           
  6082+                          	line	1663
  6083+ 00B828                     l431:
  6084+                          ;DFMAIN.C: 1663: else
  6085+                          
  6086+                          ;DFMAIN.C: 1664: dfp->impedance = data[1] > 0 ? 
      +                          (((unsigned long)data[0] * impedance_scale) / (u
      +                          nsigned long)data[1]) / 100L : 9999;
  6087+                          
  6088+                          	line	1664
  6089+ 00B828  00200006           	mov.w	#0,w6
  6090+ 00B82A  002FFF47           	mov.w	#((0+f33816+8)-0+02h),w7
  6091+ 00B82C  00478387           	add.w	sp,w7,w7
  6092+ 00B82E  00780397           	mov.w	[w7],w7
  6093+ 00B830  00E13806           	cp.w	w7, w6
  6094+ 00B832  003C001E           	bra	gt,u2151
  6095+ 00B834  0004B838           	goto	u2150
      +       00000000           
  6096+ 00B838                     u2150:
  6097+ 00B838  00200001           	mov.w	#highword(0270Fh), w1
  6098+ 00B83A  002270F0           	mov.w	#(0270Fh & 0ffffh), w0
  6099+ 00B83C  0004B874           	goto	u2164
      +       00000000           
  6100+ 00B840                     u2163:
  6101+ 00B840  002FFEE6           	mov.w	#((0+f33816+4)-0),w6
  6102+ 00B842  00478306           	add.w	sp,w6,w6
  6103+ 00B844  00BE0116           	mov.d	[w6],w2
  6104+ 00B846  0097BB1F           	mov.w	[sp+((0+f33816+8)-0)], w6
  6105+ 00B848  00780306           	mov.w	w6,w6
  6106+ 00B84A  00EB0380           	clr.w	w7
  6107+ 00B84C  00A7F006           	btsc	w6,#15
  6108+ 00B84E  00EB8380           	setm	w7
  6109+ 00B850  00BE8006           	mov.d	w6,w0
  6110+                          	global	llmul
  6111+ 00B852  0002FB96           	call	llmul
      +       00000000           
  6112+ 00B856  0097BB2F           	mov.w	[sp+((0+f33816+8)-0+02h)], w6
  6113+ 00B858  00780106           	mov.w	w6,w2
  6114+ 00B85A  00EB0180           	clr.w	w3
  6115+ 00B85C  00A7F002           	btsc	w2,#15
  6116+ 00B85E  00EB8180           	setm	w3
  6117+                          	global	lldiv
  6118+ 00B860  0002FAEC           	call	lldiv
      +       00000000           
  6119+ 00B864  00200003           	mov.w	#highword(064h), w3
  6120+ 00B866  00200642           	mov.w	#(064h & 0ffffh), w2
  6121+                          	global	lldiv
  6122+ 00B868  0002FAEC           	call	lldiv
      +       00000000           
  6123+ 00B86C  0004B874           	goto	u2164
      +       00000000           
  6124+ 00B870                     u2151:
  6125+ 00B870  0004B840           	goto	u2163
      +       00000000           
  6126+ 00B874                     u2164:
  6127+ 00B874  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  6128+ 00B876  00478306           	add.w	sp,w6,w6
  6129+ 00B878  00780316           	mov.w	[w6],w6
  6130+ 00B87A  00780B00           	mov.w	w0,[w6]
  6131+ 00B87C                     l432:
  6132+                          	line	1665
  6133+ 00B87C                     l430:
  6134+                          ;DFMAIN.C: 1665: }
  6135+                          
  6136+                          ;DFMAIN.C: 1666: dfp->power_setp = TempControl(d
      +                          fp->power_setp, ablate_temps[setting - ABLATE_PO
      +                          WER_SETTING_MINNDX], dfp->temperature1);
  6137+                          
  6138+                          	line	1666
  6139+ 00B87C  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  6140+ 00B87E  00B00246           	add.w	#36,w6
  6141+ 00B880  00780216           	mov.w	[w6],w4
  6142+ 00B882  002850A6           	mov.w	#_ablate_temps,w6
  6143+ 00B884  00780386           	mov.w	w6,w7
  6144+ 00B886  002FFFE6           	mov.w	#-2,w6
  6145+ 00B888  00438386           	add.w	w7,w6,w7
  6146+ 00B88A  0097BB5F           	mov.w	[sp+((0+f33816+16)-0)],w6
  6147+ 00B88C  00DD3341           	sl	w6,#1,w6
  6148+ 00B88E  00430307           	add.w	w6,w7,w6
  6149+ 00B890  00780116           	mov.w	[w6],w2
  6150+ 00B892  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  6151+ 00B894  00B00106           	add.w	#16,w6
  6152+ 00B896  00780016           	mov.w	[w6],w0
  6153+ 00B898  0002B58A           	call	(_TempControl)	;0 bytes adjustment
      +       00000000           
  6154+ 00B89C  002FFFC6           	mov.w	#((0+f33816+18)-0),w6
  6155+ 00B89E  00478306           	add.w	sp,w6,w6
  6156+ 00B8A0  00780396           	mov	[w6],w7
  6157+ 00B8A2  00980B80           	mov.w	w0,[w7+16]
  6158+                          ;DFMAIN.C: 1667: if (dfp->power_setp < 100)
  6159+                          
  6160+                          	line	1667
  6161+ 00B8A4  00200646           	mov.w	#064h,w6
  6162+ 00B8A6  0097BBEF           	mov.w	[sp+((0+f33816+18)-0)],w7
  6163+ 00B8A8  00B00107           	add.w	#16,w7
  6164+ 00B8AA  00780297           	mov.w	[w7],w5
  6165+ 00B8AC  00E12806           	cp.w	w5, w6
  6166+ 00B8AE  00310002           	bra	geu,u2171
  6167+ 00B8B0  0004B8B8           	goto	u2170
      +       00000000           
  6168+ 00B8B4                     u2171:
  6169+ 00B8B4  0004B8C6           	goto	l433
      +       00000000           
  6170+ 00B8B8                     u2170:
  6171+                          ;DFMAIN.C: 1668: dfp->power_setp = 100;
  6172+                          
  6173+                          	line	1668
  6174+ 00B8B8  00200646           	mov.w	#064h,w6
  6175+ 00B8BA  002FFFC7           	mov.w	#((0+f33816+18)-0),w7
  6176+ 00B8BC  00478387           	add.w	sp,w7,w7
  6177+ 00B8BE  00780297           	mov	[w7],w5
  6178+ 00B8C0  00980A86           	mov.w	w6,[w5+16]
  6179+ 00B8C2  0004B8EC           	goto	l434
      +       00000000           
  6180+                          	line	1669
  6181+ 00B8C6                     l433:
  6182+                          ;DFMAIN.C: 1669: else if (dfp->power_setp > max_
      +                          power)
  6183+                          
  6184+ 00B8C6  002FFEA6           	mov.w	#((0+f33816+0)-0),w6
  6185+ 00B8C8  00478306           	add.w	sp,w6,w6
  6186+ 00B8CA  00780316           	mov.w	[w6],w6
  6187+ 00B8CC  0097BBEF           	mov.w	[sp+((0+f33816+18)-0)],w7
  6188+ 00B8CE  00B00107           	add.w	#16,w7
  6189+ 00B8D0  00780297           	mov.w	[w7],w5
  6190+ 00B8D2  00E12806           	cp.w	w5, w6
  6191+ 00B8D4  00360002           	bra	leu,u2181
  6192+ 00B8D6  0004B8DE           	goto	u2180
      +       00000000           
  6193+ 00B8DA                     u2181:
  6194+ 00B8DA  0004B8EC           	goto	l435
      +       00000000           
  6195+ 00B8DE                     u2180:
  6196+                          ;DFMAIN.C: 1670: dfp->power_setp = max_power;
  6197+                          
  6198+                          	line	1670
  6199+ 00B8DE  002FFEA6           	mov.w	#((0+f33816+0)-0),w6
  6200+ 00B8E0  00478306           	add.w	sp,w6,w6
  6201+ 00B8E2  00780316           	mov.w	[w6],w6
  6202+ 00B8E4  002FFFC7           	mov.w	#((0+f33816+18)-0),w7
  6203+ 00B8E6  00478387           	add.w	sp,w7,w7
  6204+ 00B8E8  00780297           	mov	[w7],w5
  6205+ 00B8EA  00980A86           	mov.w	w6,[w5+16]
  6206+ 00B8EC                     l435:
  6207+                          	line	1674
  6208+ 00B8EC                     l434:
  6209+                          ;DFMAIN.C: 1674: DACvalue = powercontrol(DACvalu
      +                          e, dfp->power_setp, dfp->RFpower);
  6210+                          
  6211+ 00B8EC  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  6212+ 00B8EE  00B00166           	add.w	#22,w6
  6213+ 00B8F0  00780216           	mov.w	[w6],w4
  6214+ 00B8F2  0097BB6F           	mov.w	[sp+((0+f33816+18)-0)],w6
  6215+ 00B8F4  00B00106           	add.w	#16,w6
  6216+ 00B8F6  00780116           	mov.w	[w6],w2
  6217+ 00B8F8  0020D5A6           	mov.w	#F9751,w6
  6218+ 00B8FA  00780016           	mov.w	[w6],w0
  6219+ 00B8FC  0002BF2E           	call	(_powercontrol)	;0 bytes adjustment
      +       00000000           
  6220+ 00B900  00886AD0           	mov	w0,F9751
  6221+                          	line	1675
  6222+ 00B902                     l428:
  6223+                          ;DFMAIN.C: 1675: }
  6224+                          
  6225+                          ;DFMAIN.C: 1678: write_DAC(DACvalue >> 4, RFDAC_
      +                          CTRL_RF_ON_AND_ABLATING);
  6226+                          
  6227+                          	line	1678
  6228+ 00B902  002000F2           	mov.w	#0Fh,w2
  6229+ 00B904  0020D5A6           	mov.w	#F9751,w6
  6230+ 00B906  00780016           	mov.w	[w6],w0
  6231+ 00B908  00200046           	mov.w	#04h,w6
  6232+ 00B90A  00DE0006           	lsr	w0,w6,w0
  6233+ 00B90C  0002CB1E           	call	(_write_DAC)	;0 bytes adjustment
      +       00000000           
  6234+                          ;DFMAIN.C: 1680: return;
  6235+                          
  6236+                          	line	1680
  6237+ 00B910  0004B914           	goto	l425
      +       00000000           
  6238+                          ;DFMAIN.C: 1681: }
  6239+                          
  6240+                          	line	1681
  6241+ 00B914                     l425:
  6242+                          	local	_ablate_power
  6243+                          
  6244+ 00B914  00B1016F           	sub.w	#22,sp
  6245+ 00B916  00060000           	return
  6246+                          	line	1625
  6247+                          
  6248+ 00B918                     f33811:
  6249+                          
  6250+ 00B918  00B0016F           	add.w	#22,sp
  6251+ 00B91A  0004B660           	goto	f33810
      +       00000000           
  6252+ 000000                     f33816	equ	-22		;stack offset for auto's
  6253+ 000000                     f33813	equ	-26		;stack offset for parameters
  6254+                          	line	0
  6255+                          	line	1705
  6256+ 00B91E                     _fault_routine:
  6257+ 00B91E  0004BA36           	goto	f33871
      +       00000000           
  6258+ 00B922                     f33870:
  6259+                          
  6260+                          ;DFMAIN.C: 1704: void fault_routine(ERROR_SEVERI
      +                          TY severity, unsigned int number, const char *me
      +                          ssage)
  6261+                          
  6262+                          ;DFMAIN.C: 1705: {
  6263+                          
  6264+                          ;DFMAIN.C: 1706: unsigned char led;
  6265+                          
  6266+                          ;DFMAIN.C: 1707: unsigned int timecount = 0;
  6267+                          
  6268+                          	line	1707
  6269+ 00B922  00200007           	mov.w	#0,w7
  6270+ 00B924  002FFF66           	mov.w	#((0+f33876+2)-0),w6
  6271+ 00B926  00478306           	add.w	sp,w6,w6
  6272+ 00B928  00780B07           	mov.w	w7,[w6]
  6273+                          ;DFMAIN.C: 1711: if (severity == WARNING_SEVERIT
      +                          Y)
  6274+                          
  6275+                          ;_message stored from w4
  6276+                          	line	1711
  6277+ 00B92A  002FFF86           	mov.w	#((0+f33876+4)-0),w6
  6278+ 00B92C  00478306           	add.w	sp,w6,w6
  6279+ 00B92E  00780B04           	mov.w	w4,[w6]
  6280+                          ;_number stored from w2
  6281+ 00B930  002FFFA6           	mov.w	#((0+f33876+6)-0),w6
  6282+ 00B932  00478306           	add.w	sp,w6,w6
  6283+ 00B934  00780B02           	mov.w	w2,[w6]
  6284+                          ;_severity stored from w0
  6285+ 00B936  002FFFC6           	mov.w	#((0+f33876+8)-0),w6
  6286+ 00B938  00478306           	add.w	sp,w6,w6
  6287+ 00B93A  00784B00           	mov.b	w0,[w6]
  6288+ 00B93C  002FFFC6           	mov.w	#((0+f33876+8)-0),w6
  6289+ 00B93E  00478306           	add.w	sp,w6,w6
  6290+ 00B940  00E00416           	cp0.b	[w6]
  6291+ 00B942  003A0002           	bra	nz,u2191
  6292+ 00B944  0004B94C           	goto	u2190
      +       00000000           
  6293+ 00B948                     u2191:
  6294+ 00B948  0004B958           	goto	l437
      +       00000000           
  6295+ 00B94C                     u2190:
  6296+                          ;DFMAIN.C: 1712: {
  6297+                          
  6298+                          ;DFMAIN.C: 1713: led = 0x04;
  6299+                          
  6300+                          	line	1713
  6301+ 00B94C  00200047           	mov.w	#04h,w7
  6302+ 00B94E  002FFF46           	mov.w	#((0+f33876+0)-0),w6
  6303+ 00B950  00478306           	add.w	sp,w6,w6
  6304+ 00B952  00784B07           	mov.b	w7,[w6]
  6305+                          ;DFMAIN.C: 1714: }
  6306+                          
  6307+                          	line	1714
  6308+ 00B954  0004B960           	goto	l438
      +       00000000           
  6309+                          	line	1715
  6310+ 00B958                     l437:
  6311+                          ;DFMAIN.C: 1715: else
  6312+                          
  6313+                          ;DFMAIN.C: 1716: {
  6314+                          
  6315+                          ;DFMAIN.C: 1717: led = 0x08;
  6316+                          
  6317+                          	line	1717
  6318+ 00B958  00200087           	mov.w	#08h,w7
  6319+ 00B95A  002FFF46           	mov.w	#((0+f33876+0)-0),w6
  6320+ 00B95C  00478306           	add.w	sp,w6,w6
  6321+ 00B95E  00784B07           	mov.b	w7,[w6]
  6322+                          	line	1718
  6323+ 00B960                     l438:
  6324+                          ;DFMAIN.C: 1718: }
  6325+                          
  6326+                          ;DFMAIN.C: 1719: write_LEDs(0x01 | led);
  6327+                          
  6328+                          	line	1719
  6329+ 00B960  0097F04F           	mov.b	[sp+((0+f33876+0)-0)],w0
  6330+ 00B962  00FB8000           	ze	w0,w0
  6331+ 00B964  00B34010           	ior.b	#1,w0
  6332+ 00B966  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
      +       00000000           
  6333+                          ;DFMAIN.C: 1723: tone(0x02);
  6334+                          
  6335+                          	line	1723
  6336+ 00B96A  00200020           	mov.w	#02h,w0
  6337+ 00B96C  0002CBDE           	call	(_tone)	;0 bytes adjustment
      +       00000000           
  6338+                          ;DFMAIN.C: 1727: imp_pulse_measure((0));
  6339+                          
  6340+                          	line	1727
  6341+ 00B970  00200000           	mov.w	#0,w0
  6342+ 00B972  0002BB6C           	call	(_imp_pulse_measure)	;0 bytes adjustment
      +       00000000           
  6343+                          ;DFMAIN.C: 1728: write_DAC(0, RFDAC_CTRL_RF_MOTO
      +                          R_AND_RELAY_A);
  6344+                          
  6345+                          	line	1728
  6346+ 00B976  00200002           	mov.w	#0,w2
  6347+ 00B978  00200000           	mov.w	#0,w0
  6348+ 00B97A  0002CB1E           	call	(_write_DAC)	;0 bytes adjustment
      +       00000000           
  6349+                          ;DFMAIN.C: 1732: write_LEDs(0x01 | led);
  6350+                          
  6351+                          	line	1732
  6352+ 00B97E  0097F04F           	mov.b	[sp+((0+f33876+0)-0)],w0
  6353+ 00B980  00FB8000           	ze	w0,w0
  6354+ 00B982  00B34010           	ior.b	#1,w0
  6355+ 00B984  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
      +       00000000           
  6356+                          ;DFMAIN.C: 1736: gDFDisplyPrintErrorItem(severit
      +                          y, number, message, Screen);
  6357+                          
  6358+                          	global	_gDFDisplyPrintErrorItem
  6359+                          	signat	_gDFDisplyPrintErrorItem,16442
  6360+                          	line	1736
  6361+ 00B988  00211426           	mov.w	#_Screen,w6
  6362+ 00B98A  00784316           	mov.b	[w6],w6
  6363+ 00B98C  0097BA4F           	mov.w	[sp+((0+f33876+4)-0)],w4
  6364+ 00B98E  0097B95F           	mov.w	[sp+((0+f33876+6)-0)],w2
  6365+ 00B990  0097F84F           	mov.b	[sp+((0+f33876+8)-0)],w0
  6366+ 00B992  00FB8000           	ze	w0,w0
  6367+ 00B994  00028896           	call	(_gDFDisplyPrintErrorItem)	;0 bytes adjust
      +       00000000           ment
  6368+                          ;DFMAIN.C: 1744: if (Screen == THERAPY_DISPLAY_S
      +                          CREEN)
  6369+                          
  6370+                          	line	1744
  6371+ 00B998  00808A16           	mov	_Screen,w6
  6372+ 00B99A  00E13461           	cp.b	w6, #1
  6373+ 00B99C  003A0002           	bra	nz,u2201
  6374+ 00B99E  0004B9A6           	goto	u2200
      +       00000000           
  6375+ 00B9A2                     u2201:
  6376+ 00B9A2  0004B9AA           	goto	l439
      +       00000000           
  6377+ 00B9A6                     u2200:
  6378+                          ;DFMAIN.C: 1745: {
  6379+                          
  6380+                          ;DFMAIN.C: 1746: gDFDisplyDisableRFGraphicItem()
      +                          ;
  6381+                          
  6382+                          	global	_gDFDisplyDisableRFGraphicItem
  6383+                          	signat	_gDFDisplyDisableRFGraphicItem,26
  6384+                          	line	1746
  6385+ 00B9A6  000287A6           	call	(_gDFDisplyDisableRFGraphicItem)
      +       00000000           
  6386+                          	line	1747
  6387+ 00B9AA                     l439:
  6388+                          ;DFMAIN.C: 1747: }
  6389+                          
  6390+                          ;DFMAIN.C: 1751: while (gDFDisplyDoesGraphicDisp
      +                          layHave() == 1)
  6391+                          
  6392+                          	line	1751
  6393+ 00B9AA  0004B9D6           	goto	l440
      +       00000000           
  6394+ 00B9AE                     l441:
  6395+                          ;DFMAIN.C: 1752: {
  6396+                          
  6397+                          ;DFMAIN.C: 1753: wait_for_20ms();
  6398+                          
  6399+                          	line	1753
  6400+ 00B9AE  0002D368           	call	(_wait_for_20ms)
      +       00000000           
  6401+                          ;DFMAIN.C: 1754: if (gDFDisplyProcessDisplayRequ
      +                          ests() == 0)
  6402+                          
  6403+                          	line	1754
  6404+ 00B9B2  00029B6C           	call	(_gDFDisplyProcessDisplayRequests)
      +       00000000           
  6405+ 00B9B6  00E00000           	cp0.w	w0
  6406+ 00B9B8  003A0002           	bra	nz,u2211
  6407+ 00B9BA  0004B9C2           	goto	u2210
      +       00000000           
  6408+ 00B9BE                     u2211:
  6409+ 00B9BE  0004B9C6           	goto	l443
      +       00000000           
  6410+ 00B9C2                     u2210:
  6411+                          ;DFMAIN.C: 1755: {
  6412+                          
  6413+                          ;DFMAIN.C: 1756: break;
  6414+                          
  6415+                          	line	1756
  6416+ 00B9C2  0004B9E6           	goto	l442
      +       00000000           
  6417+                          	line	1757
  6418+ 00B9C6                     l443:
  6419+                          ;DFMAIN.C: 1757: }
  6420+                          
  6421+                          ;DFMAIN.C: 1758: (LATG15 = !(LATG15 = 0));
  6422+                          
  6423+                          	line	1758
  6424+ 00B9C6  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  6425+ 00B9C8  00ABE2E9           	btst.b	(0174Fh/8), #(0174Fh&7)
  6426+ 00B9CA  00320002           	bra	z,u2221
  6427+ 00B9CC  0004B9D4           	goto	u2220
      +       00000000           
  6428+ 00B9D0                     u2221:
  6429+ 00B9D0  00A8E2E9           	bset.b	(0174Fh/8), #(0174Fh&7)
  6430+ 00B9D2  00370001           	bra	u2232
  6431+ 00B9D4                     u2220:
  6432+ 00B9D4  00A9E2E9           	bclr.b	(0174Fh/8), #(0174Fh&7)
  6433+ 00B9D6                     u2232:
  6434+                          	line	1759
  6435+ 00B9D6                     l440:
  6436+                          	line	1751
  6437+ 00B9D6  000287C6           	call	(_gDFDisplyDoesGraphicDisplayHave)
      +       00000000           
  6438+ 00B9DA  00E10061           	cp.w	w0, #1
  6439+ 00B9DC  00320002           	bra	z,u2241
  6440+ 00B9DE  0004B9E6           	goto	u2240
      +       00000000           
  6441+ 00B9E2                     u2241:
  6442+ 00B9E2  0004B9AE           	goto	l441
      +       00000000           
  6443+ 00B9E6                     u2240:
  6444+ 00B9E6                     l442:
  6445+                          ;DFMAIN.C: 1759: }
  6446+                          
  6447+                          ;DFMAIN.C: 1763: while (1)
  6448+                          
  6449+                          	line	1763
  6450+ 00B9E6                     l445:
  6451+                          ;DFMAIN.C: 1764: {
  6452+                          
  6453+                          ;DFMAIN.C: 1765: wait_for_20ms();
  6454+                          
  6455+                          	line	1765
  6456+ 00B9E6  0002D368           	call	(_wait_for_20ms)
      +       00000000           
  6457+                          ;DFMAIN.C: 1766: if (++timecount == 50)
  6458+                          
  6459+                          	line	1766
  6460+ 00B9EA  00200326           	mov.w	#032h,w6
  6461+ 00B9EC  0097BBBF           	mov.w	[sp+((0+f33876+2)-0)],w7
  6462+ 00B9EE  00B00017           	add.w	#1,w7
  6463+ 00B9F0  009FBFB7           	mov.w	w7,[sp+((0+f33876+2)-0)]
  6464+ 00B9F2  00E13806           	cp.w	w7, w6
  6465+ 00B9F4  003A0002           	bra	nz,u2251
  6466+ 00B9F6  0004B9FE           	goto	u2250
      +       00000000           
  6467+ 00B9FA                     u2251:
  6468+ 00B9FA  0004BA14           	goto	l447
      +       00000000           
  6469+ 00B9FE                     u2250:
  6470+                          ;DFMAIN.C: 1767: {
  6471+                          
  6472+                          ;DFMAIN.C: 1768: timecount = 0;
  6473+                          
  6474+                          	line	1768
  6475+ 00B9FE  00200007           	mov.w	#0,w7
  6476+ 00BA00  002FFF66           	mov.w	#((0+f33876+2)-0),w6
  6477+ 00BA02  00478306           	add.w	sp,w6,w6
  6478+ 00BA04  00780B07           	mov.w	w7,[w6]
  6479+                          ;DFMAIN.C: 1769: write_LEDs(0x01 | led);
  6480+                          
  6481+                          	line	1769
  6482+ 00BA06  0097F04F           	mov.b	[sp+((0+f33876+0)-0)],w0
  6483+ 00BA08  00FB8000           	ze	w0,w0
  6484+ 00BA0A  00B34010           	ior.b	#1,w0
  6485+ 00BA0C  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
      +       00000000           
  6486+                          ;DFMAIN.C: 1770: }
  6487+                          
  6488+                          	line	1770
  6489+ 00BA10  0004BA28           	goto	l448
      +       00000000           
  6490+                          	line	1771
  6491+ 00BA14                     l447:
  6492+                          ;DFMAIN.C: 1771: else if (timecount == 50 / 2)
  6493+                          
  6494+ 00BA14  0097BB3F           	mov.w	[sp+((0+f33876+2)-0)],w6
  6495+ 00BA16  00E13079           	cp.w	w6, #25
  6496+ 00BA18  003A0002           	bra	nz,u2261
  6497+ 00BA1A  0004BA22           	goto	u2260
      +       00000000           
  6498+ 00BA1E                     u2261:
  6499+ 00BA1E  0004BA28           	goto	l449
      +       00000000           
  6500+ 00BA22                     u2260:
  6501+                          ;DFMAIN.C: 1772: write_LEDs(0x01);
  6502+                          
  6503+                          	line	1772
  6504+ 00BA22  00200010           	mov.w	#01h,w0
  6505+ 00BA24  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
      +       00000000           
  6506+ 00BA28                     l449:
  6507+                          	line	1774
  6508+ 00BA28                     l448:
  6509+                          ;DFMAIN.C: 1774: tone(0x11);
  6510+                          
  6511+ 00BA28  00200110           	mov.w	#011h,w0
  6512+ 00BA2A  0002CBDE           	call	(_tone)	;0 bytes adjustment
      +       00000000           
  6513+                          	line	1775
  6514+ 00BA2E                     l444:
  6515+                          	line	1763
  6516+ 00BA2E  0004B9E6           	goto	l445
      +       00000000           
  6517+ 00BA32                     l446:
  6518+                          ;DFMAIN.C: 1775: }
  6519+                          
  6520+                          ;DFMAIN.C: 1776: }
  6521+                          
  6522+                          	line	1776
  6523+ 00BA32                     l436:
  6524+                          	global	_fault_routine
  6525+                          
  6526+ 00BA32  00B100CF           	sub.w	#12,sp
  6527+ 00BA34  00060000           	return
  6528+                          	line	1705
  6529+                          
  6530+ 00BA36                     f33871:
  6531+                          
  6532+ 00BA36  00B000CF           	add.w	#12,sp
  6533+ 00BA38  0004B922           	goto	f33870
      +       00000000           
  6534+ 000000                     f33876	equ	-12		;stack offset for auto's
  6535+ 000000                     f33873	equ	-16		;stack offset for parameters
  6536+                          	line	0
  6537+                          	line	1799
  6538+ 00BA3C                     _get_temperature:
  6539+ 00BA3C  0004BB66           	goto	f33901
      +       00000000           
  6540+ 00BA40                     f33900:
  6541+                          
  6542+                          ;DFMAIN.C: 1798: static void get_temperature(str
      +                          uct DFinestruct *dfp)
  6543+                          
  6544+                          ;DFMAIN.C: 1799: {
  6545+                          
  6546+                          	psect	neardata
  6547+ 0011BC                     align 2
  6548+ 0011BC                     F9774:
  6549+                          	
  6550+ 0011BC                     	ds	2
  6551+                          	psect	nearidata
  6552+ 01FFD8                     align 4
  6553+                          
  6554+ 01FFD8  00000000           	dw	(0)
  6555+                          	psect	neardata
  6556+                          	
  6557+ 0011BE                     	ds	2
  6558+                          	psect	nearidata
  6559+                          
  6560+ 01FFDC  00000000           	dw	(0)
  6561+                          	psect	neardata
  6562+                          	
  6563+ 0011C0                     	ds	2
  6564+                          	psect	nearidata
  6565+                          
  6566+ 01FFE0  00000000           	dw	(0)
  6567+                          	psect	neardata
  6568+ 0011C2                     align 2
  6569+ 0011C2                     F9775:
  6570+                          	
  6571+ 0011C2                     	ds	2
  6572+                          	psect	nearidata
  6573+ 01FFE4                     align 4
  6574+                          
  6575+ 01FFE4  00000000           	dw	(0)
  6576+                          	psect	neardata
  6577+                          	
  6578+ 0011C4                     	ds	2
  6579+                          	psect	nearidata
  6580+                          
  6581+ 01FFE8  00000000           	dw	(0)
  6582+                          	psect	neardata
  6583+                          	
  6584+ 0011C6                     	ds	2
  6585+                          	psect	nearidata
  6586+                          
  6587+ 01FFEC  00000000           	dw	(0)
  6588+                          	psect	neardata
  6589+ 0011C8                     align 2
  6590+ 0011C8                     F9776:
  6591+                          	
  6592+ 0011C8                     	ds	2
  6593+                          	psect	nearidata
  6594+ 01FFF0                     align 4
  6595+                          
  6596+ 01FFF0  00000000           	dw	(0)
  6597+                          	psect	neardata
  6598+                          	
  6599+ 0011CA                     	ds	2
  6600+                          	psect	nearidata
  6601+                          
  6602+ 01FFF4  00000000           	dw	(0)
  6603+                          	psect	neardata
  6604+                          	
  6605+ 0011CC                     	ds	2
  6606+                          	psect	nearidata
  6607+                          
  6608+ 01FFF8  00000000           	dw	(0)
  6609+                          ;DFMAIN.C: 1807: static unsigned char next_index
      +                           = 0;
  6610+                          
  6611+                          ;DFMAIN.C: 1808: static unsigned int tccnt = 0;
  6612+                          
  6613+                          ;DFMAIN.C: 1812: static unsigned int tc1_median_
      +                          input[(3)] = {0,0,0};
  6614+                          
  6615+                          ;DFMAIN.C: 1813: static unsigned int tc2_median_
      +                          input[(3)] = {0,0,0};
  6616+                          
  6617+                          ;DFMAIN.C: 1814: static unsigned int ntc_median_
      +                          input[(3)] = {0,0,0};
  6618+                          
  6619+                          ;DFMAIN.C: 1816: static unsigned char tc1_median
      +                          _index = 0;
  6620+                          
  6621+                          ;DFMAIN.C: 1817: static unsigned char tc2_median
      +                          _index = 0;
  6622+                          
  6623+                          ;DFMAIN.C: 1818: static unsigned char ntc_median
      +                          _index = 0;
  6624+                          
  6625+                          ;DFMAIN.C: 1820: unsigned char index;
  6626+                          
  6627+                          ;DFMAIN.C: 1821: unsigned int data;
  6628+                          
  6629+                          ;DFMAIN.C: 1823: index = next_index;
  6630+                          
  6631+                          	psect	text
  6632+                          	line	1823
  6633+ 00BA40  00806C47           	mov	F9772,w7
  6634+ 00BA42  002FFF86           	mov.w	#((0+f33906+0)-0),w6
  6635+ 00BA44  00478306           	add.w	sp,w6,w6
  6636+ 00BA46  00784B07           	mov.b	w7,[w6]
  6637+                          ;DFMAIN.C: 1825: if(++next_index > 2)
  6638+                          
  6639+                          ;_dfp stored from w0
  6640+                          	line	1825
  6641+ 00BA48  002FFFC6           	mov.w	#((0+f33906+4)-0),w6
  6642+ 00BA4A  00478306           	add.w	sp,w6,w6
  6643+ 00BA4C  00780B00           	mov.w	w0,[w6]
  6644+ 00BA4E  00200026           	mov.w	#02h,w6
  6645+ 00BA50  00200015           	mov.w	#01h,w5
  6646+ 00BA52  0020D887           	mov	#F9772,w7
  6647+ 00BA54  0042CB97           	add.b	w5,[w7],[w7]
  6648+ 00BA56  00784197           	mov.b	[w7],w3
  6649+ 00BA58  00E11C06           	cp.b	w3, w6
  6650+ 00BA5A  00360002           	bra	leu,u2271
  6651+ 00BA5C  0004BA64           	goto	u2270
      +       00000000           
  6652+ 00BA60                     u2271:
  6653+ 00BA60  0004BA66           	goto	l451
      +       00000000           
  6654+ 00BA64                     u2270:
  6655+                          ;DFMAIN.C: 1826: {
  6656+                          
  6657+                          ;DFMAIN.C: 1827: next_index = 0;
  6658+                          
  6659+                          	line	1827
  6660+ 00BA64  00EF6D88           	clr.b	F9772
  6661+                          	line	1828
  6662+ 00BA66                     l451:
  6663+                          ;DFMAIN.C: 1828: }
  6664+                          
  6665+                          ;DFMAIN.C: 1830: data = read_SPI_ADC(next_index)
      +                          ;
  6666+                          
  6667+                          	global	_read_SPI_ADC
  6668+                          	signat	_read_SPI_ADC,4154
  6669+                          	line	1830
  6670+ 00BA66  0020D886           	mov.w	#F9772,w6
  6671+ 00BA68  00784016           	mov.b	[w6],w0
  6672+ 00BA6A  0002C994           	call	(_read_SPI_ADC)	;0 bytes adjustment
      +       00000000           
  6673+ 00BA6E  002FFFA6           	mov.w	#((0+f33906+2)-0),w6
  6674+ 00BA70  00478306           	add.w	sp,w6,w6
  6675+ 00BA72  00780B00           	mov.w	w0,[w6]
  6676+                          ;DFMAIN.C: 1832: if (index == 0)
  6677+                          
  6678+                          	line	1832
  6679+ 00BA74  002FFF86           	mov.w	#((0+f33906+0)-0),w6
  6680+ 00BA76  00478306           	add.w	sp,w6,w6
  6681+ 00BA78  00E00416           	cp0.b	[w6]
  6682+ 00BA7A  003A0002           	bra	nz,u2281
  6683+ 00BA7C  0004BA84           	goto	u2280
      +       00000000           
  6684+ 00BA80                     u2281:
  6685+ 00BA80  0004BAC8           	goto	l452
      +       00000000           
  6686+ 00BA84                     u2280:
  6687+                          ;DFMAIN.C: 1833: {
  6688+                          
  6689+                          ;DFMAIN.C: 1836: if (++tc1_median_index >= (3))
  6690+                          
  6691+                          	line	1836
  6692+ 00BA84  00200036           	mov.w	#03h,w6
  6693+ 00BA86  00200015           	mov.w	#01h,w5
  6694+ 00BA88  0020D8A7           	mov	#F9777,w7
  6695+ 00BA8A  0042CB97           	add.b	w5,[w7],[w7]
  6696+ 00BA8C  00784197           	mov.b	[w7],w3
  6697+ 00BA8E  00E11C06           	cp.b	w3, w6
  6698+ 00BA90  00390002           	bra	ltu,u2291
  6699+ 00BA92  0004BA9A           	goto	u2290
      +       00000000           
  6700+ 00BA96                     u2291:
  6701+ 00BA96  0004BA9C           	goto	l453
      +       00000000           
  6702+ 00BA9A                     u2290:
  6703+                          ;DFMAIN.C: 1837: {
  6704+                          
  6705+                          ;DFMAIN.C: 1838: tc1_median_index = 0;
  6706+                          
  6707+                          	line	1838
  6708+ 00BA9A  00EF6D8A           	clr.b	F9777
  6709+                          	line	1839
  6710+ 00BA9C                     l453:
  6711+                          ;DFMAIN.C: 1839: }
  6712+                          
  6713+                          ;DFMAIN.C: 1840: tc1_median_input[tc1_median_ind
      +                          ex] = data;
  6714+                          
  6715+                          	line	1840
  6716+ 00BA9C  002FFFA6           	mov.w	#((0+f33906+2)-0),w6
  6717+ 00BA9E  00478306           	add.w	sp,w6,w6
  6718+ 00BAA0  00780316           	mov.w	[w6],w6
  6719+ 00BAA2  00211BC7           	mov	#F9774,w7
  6720+ 00BAA4  00806C55           	mov	F9777,w5
  6721+ 00BAA6  00FB8185           	ze	w5,w3
  6722+ 00BAA8  00DD19C1           	sl	w3,#1,w3
  6723+ 00BAAA  007BB186           	mov.w	w6,[w3+w7]
  6724+                          ;DFMAIN.C: 1842: dfp->temperature1 =
  6725+                          
  6726+                          ;DFMAIN.C: 1843: convert_to_degrees(calc_median(
      +                          tc1_median_input) + tccnt);
  6727+                          
  6728+                          	global	_convert_to_degrees
  6729+                          	signat	_convert_to_degrees,4154
  6730+                          	signat	_calc_median,4154
  6731+                          	line	1843
  6732+ 00BAAC  00211BC6           	mov.w	#F9774,w6
  6733+ 00BAAE  00780006           	mov.w	w6,w0
  6734+ 00BAB0  0002BE54           	call	(_calc_median)	;0 bytes adjustment
      +       00000000           
  6735+ 00BAB4  00806AE6           	mov	F9773,w6
  6736+ 00BAB6  00400006           	add.w	w0,w6,w0
  6737+ 00BAB8  0002D384           	call	(_convert_to_degrees)	;0 bytes adjustment
      +       00000000           
  6738+ 00BABC  002FFFC6           	mov.w	#((0+f33906+4)-0),w6
  6739+ 00BABE  00478306           	add.w	sp,w6,w6
  6740+ 00BAC0  00780396           	mov	[w6],w7
  6741+ 00BAC2  009813A0           	mov.w	w0,[w7+36]
  6742+                          ;DFMAIN.C: 1844: }
  6743+                          
  6744+                          	line	1844
  6745+ 00BAC4  0004BB62           	goto	l454
      +       00000000           
  6746+                          	line	1845
  6747+ 00BAC8                     l452:
  6748+                          ;DFMAIN.C: 1845: else if (index == 1)
  6749+                          
  6750+ 00BAC8  0097FB0F           	mov.b	[sp+((0+f33906+0)-0)],w6
  6751+ 00BACA  00E13461           	cp.b	w6, #1
  6752+ 00BACC  003A0002           	bra	nz,u2301
  6753+ 00BACE  0004BAD6           	goto	u2300
      +       00000000           
  6754+ 00BAD2                     u2301:
  6755+ 00BAD2  0004BB1A           	goto	l455
      +       00000000           
  6756+ 00BAD6                     u2300:
  6757+                          ;DFMAIN.C: 1846: {
  6758+                          
  6759+                          ;DFMAIN.C: 1847: if (++tc2_median_index >= (3))
  6760+                          
  6761+                          	line	1847
  6762+ 00BAD6  00200036           	mov.w	#03h,w6
  6763+ 00BAD8  00200015           	mov.w	#01h,w5
  6764+ 00BADA  0020D8C7           	mov	#F9778,w7
  6765+ 00BADC  0042CB97           	add.b	w5,[w7],[w7]
  6766+ 00BADE  00784197           	mov.b	[w7],w3
  6767+ 00BAE0  00E11C06           	cp.b	w3, w6
  6768+ 00BAE2  00390002           	bra	ltu,u2311
  6769+ 00BAE4  0004BAEC           	goto	u2310
      +       00000000           
  6770+ 00BAE8                     u2311:
  6771+ 00BAE8  0004BAEE           	goto	l456
      +       00000000           
  6772+ 00BAEC                     u2310:
  6773+                          ;DFMAIN.C: 1848: {
  6774+                          
  6775+                          ;DFMAIN.C: 1849: tc2_median_index = 0;
  6776+                          
  6777+                          	line	1849
  6778+ 00BAEC  00EF6D8C           	clr.b	F9778
  6779+                          	line	1850
  6780+ 00BAEE                     l456:
  6781+                          ;DFMAIN.C: 1850: }
  6782+                          
  6783+                          ;DFMAIN.C: 1851: tc2_median_input[tc2_median_ind
      +                          ex] = data;
  6784+                          
  6785+                          	line	1851
  6786+ 00BAEE  002FFFA6           	mov.w	#((0+f33906+2)-0),w6
  6787+ 00BAF0  00478306           	add.w	sp,w6,w6
  6788+ 00BAF2  00780316           	mov.w	[w6],w6
  6789+ 00BAF4  00211C27           	mov	#F9775,w7
  6790+ 00BAF6  00806C65           	mov	F9778,w5
  6791+ 00BAF8  00FB8185           	ze	w5,w3
  6792+ 00BAFA  00DD19C1           	sl	w3,#1,w3
  6793+ 00BAFC  007BB186           	mov.w	w6,[w3+w7]
  6794+                          ;DFMAIN.C: 1853: dfp->temperature2 =
  6795+                          
  6796+                          ;DFMAIN.C: 1854: convert_to_degrees(calc_median(
      +                          tc2_median_input) + tccnt);
  6797+                          
  6798+                          	line	1854
  6799+ 00BAFE  00211C26           	mov.w	#F9775,w6
  6800+ 00BB00  00780006           	mov.w	w6,w0
  6801+ 00BB02  0002BE54           	call	(_calc_median)	;0 bytes adjustment
      +       00000000           
  6802+ 00BB06  00806AE6           	mov	F9773,w6
  6803+ 00BB08  00400006           	add.w	w0,w6,w0
  6804+ 00BB0A  0002D384           	call	(_convert_to_degrees)	;0 bytes adjustment
      +       00000000           
  6805+ 00BB0E  002FFFC6           	mov.w	#((0+f33906+4)-0),w6
  6806+ 00BB10  00478306           	add.w	sp,w6,w6
  6807+ 00BB12  00780396           	mov	[w6],w7
  6808+ 00BB14  009813B0           	mov.w	w0,[w7+38]
  6809+                          ;DFMAIN.C: 1855: }
  6810+                          
  6811+                          	line	1855
  6812+ 00BB16  0004BB62           	goto	l457
      +       00000000           
  6813+                          	line	1856
  6814+ 00BB1A                     l455:
  6815+                          ;DFMAIN.C: 1856: else if (index == 2)
  6816+                          
  6817+ 00BB1A  0097FB0F           	mov.b	[sp+((0+f33906+0)-0)],w6
  6818+ 00BB1C  00E13462           	cp.b	w6, #2
  6819+ 00BB1E  003A0002           	bra	nz,u2321
  6820+ 00BB20  0004BB28           	goto	u2320
      +       00000000           
  6821+ 00BB24                     u2321:
  6822+ 00BB24  0004BB62           	goto	l458
      +       00000000           
  6823+ 00BB28                     u2320:
  6824+                          ;DFMAIN.C: 1857: {
  6825+                          
  6826+                          ;DFMAIN.C: 1858: if (++ntc_median_index >= (3))
  6827+                          
  6828+                          	line	1858
  6829+ 00BB28  00200036           	mov.w	#03h,w6
  6830+ 00BB2A  00200015           	mov.w	#01h,w5
  6831+ 00BB2C  0020D8E7           	mov	#F9779,w7
  6832+ 00BB2E  0042CB97           	add.b	w5,[w7],[w7]
  6833+ 00BB30  00784197           	mov.b	[w7],w3
  6834+ 00BB32  00E11C06           	cp.b	w3, w6
  6835+ 00BB34  00390002           	bra	ltu,u2331
  6836+ 00BB36  0004BB3E           	goto	u2330
      +       00000000           
  6837+ 00BB3A                     u2331:
  6838+ 00BB3A  0004BB40           	goto	l459
      +       00000000           
  6839+ 00BB3E                     u2330:
  6840+                          ;DFMAIN.C: 1859: {
  6841+                          
  6842+                          ;DFMAIN.C: 1860: ntc_median_index = 0;
  6843+                          
  6844+                          	line	1860
  6845+ 00BB3E  00EF6D8E           	clr.b	F9779
  6846+                          	line	1861
  6847+ 00BB40                     l459:
  6848+                          ;DFMAIN.C: 1861: }
  6849+                          
  6850+                          ;DFMAIN.C: 1862: ntc_median_input[ntc_median_ind
      +                          ex] = data;
  6851+                          
  6852+                          	line	1862
  6853+ 00BB40  002FFFA6           	mov.w	#((0+f33906+2)-0),w6
  6854+ 00BB42  00478306           	add.w	sp,w6,w6
  6855+ 00BB44  00780316           	mov.w	[w6],w6
  6856+ 00BB46  00211C87           	mov	#F9776,w7
  6857+ 00BB48  00806C75           	mov	F9779,w5
  6858+ 00BB4A  00FB8185           	ze	w5,w3
  6859+ 00BB4C  00DD19C1           	sl	w3,#1,w3
  6860+ 00BB4E  007BB186           	mov.w	w6,[w3+w7]
  6861+                          ;DFMAIN.C: 1864: tccnt = convert_ntc(calc_median
      +                          (ntc_median_input), &(dfp->ntc_temp));
  6862+                          
  6863+                          	global	_convert_ntc
  6864+                          	signat	_convert_ntc,8250
  6865+                          	line	1864
  6866+ 00BB50  00211C86           	mov.w	#F9776,w6
  6867+ 00BB52  00780006           	mov.w	w6,w0
  6868+ 00BB54  0002BE54           	call	(_calc_median)	;0 bytes adjustment
      +       00000000           
  6869+ 00BB58  0097B96F           	mov.w	[sp+((0+f33906+4)-0)],w2
  6870+ 00BB5A  00B00222           	add.w	#34,w2
  6871+ 00BB5C  0002D40A           	call	(_convert_ntc)	;0 bytes adjustment
      +       00000000           
  6872+ 00BB60  00886AE0           	mov	w0,F9773
  6873+                          	line	1865
  6874+ 00BB62                     l458:
  6875+                          	line	1866
  6876+ 00BB62                     l457:
  6877+ 00BB62                     l454:
  6878+                          ;DFMAIN.C: 1865: }
  6879+                          
  6880+                          ;DFMAIN.C: 1866: }
  6881+                          
  6882+ 00BB62                     l450:
  6883+                          	local	_get_temperature
  6884+                          
  6885+ 00BB62  00B1008F           	sub.w	#8,sp
  6886+ 00BB64  00060000           	return
  6887+                          	line	1799
  6888+                          
  6889+ 00BB66                     f33901:
  6890+                          
  6891+ 00BB66  00B0008F           	add.w	#8,sp
  6892+ 00BB68  0004BA40           	goto	f33900
      +       00000000           
  6893+ 000000                     f33906	equ	-8		;stack offset for auto's
  6894+ 000000                     f33903	equ	-12		;stack offset for parameters
  6895+                          	line	0
  6896+                          	line	1887
  6897+ 00BB6C                     _imp_pulse_measure:
  6898+ 00BB6C  0004BCA4           	goto	f34021
      +       00000000           
  6899+ 00BB70                     f34020:
  6900                           
  6901                           ;DFMAIN.C: 1886: static void imp_pulse_measure(s
                                 truct DFinestruct *dfp)
  6902                           
  6903                           ;DFMAIN.C: 1887: {
  6904                           
  6905                           ;DFMAIN.C: 1888: static unsigned int pulseintcnt
                                  = 0;
  6906                           
  6907                           ;DFMAIN.C: 1889: unsigned long impedance_scale;
  6908                           
  6909                           ;DFMAIN.C: 1890: signed int data[4];
  6910                           
  6911                           ;DFMAIN.C: 1894: if (dfp == (0))
  6912                           
  6913                           ;_dfp stored from w0
  6914                           	line	1894
  6915  00BB70  002FFFC6           	mov.w	#((0+f34026+12)-0),w6
  6916  00BB72  00478306           	add.w	sp,w6,w6
  6917  00BB74  00780B00           	mov.w	w0,[w6]
  6918  00BB76  002FFFC6           	mov.w	#((0+f34026+12)-0),w6
  6919  00BB78  00478306           	add.w	sp,w6,w6
  6920  00BB7A  00E00016           	cp0.w	[w6]
  6921  00BB7C  003A0002           	bra	nz,u2341
  6922  00BB7E  0004BB86           	goto	u2340
              00000000           
  6923  00BB82                     u2341:
  6924  00BB82  0004BB9A           	goto	l461
              00000000           
  6925  00BB86                     u2340:
  6926                           ;DFMAIN.C: 1895: {
  6927                           
  6928                           ;DFMAIN.C: 1896: write_DAC(0, RFDAC_CTRL_RF_OFF_
                                 MTRRLY_OFF_RF);
  6929                           
  6930                           	line	1896
  6931  00BB86  002000C2           	mov.w	#0Ch,w2
  6932  00BB88  00200000           	mov.w	#0,w0
  6933  00BB8A  0002CB1E           	call	(_write_DAC)	;0 bytes adjustment
              00000000           
  6934                           ;DFMAIN.C: 1897: write_LEDs(0x01);
  6935                           
  6936                           	line	1897
  6937  00BB8E  00200010           	mov.w	#01h,w0
  6938  00BB90  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
              00000000           
  6939                           ;DFMAIN.C: 1898: pulseintcnt = 0;
  6940                           
  6941                           	line	1898
  6942  00BB94  00EF2D5E           	clr.w	F9783
  6943                           ;DFMAIN.C: 1899: return;
  6944                           
  6945                           	line	1899
  6946  00BB96  0004BCA0           	goto	l460
              00000000           
  6947                           	line	1900
  6948  00BB9A                     l461:
  6949                           ;DFMAIN.C: 1900: }
  6950                           
  6951                           ;DFMAIN.C: 1902: if (++pulseintcnt >= 50 * 2)
  6952                           
  6953                           	line	1902
  6954  00BB9A  00200646           	mov.w	#064h,w6
  6955  00BB9C  00200015           	mov.w	#01h,w5
  6956  00BB9E  0020D5E7           	mov	#F9783,w7
  6957  00BBA0  00428B97           	add.w	w5,[w7],[w7]
  6958  00BBA2  00780197           	mov.w	[w7],w3
  6959  00BBA4  00E11806           	cp.w	w3, w6
  6960  00BBA6  00390002           	bra	ltu,u2351
  6961  00BBA8  0004BBB0           	goto	u2350
              00000000           
  6962  00BBAC                     u2351:
  6963  00BBAC  0004BBBC           	goto	l462
              00000000           
  6964  00BBB0                     u2350:
  6965                           ;DFMAIN.C: 1903: {
  6966                           
  6967                           ;DFMAIN.C: 1904: pulseintcnt = 0;
  6968                           
  6969                           	line	1904
  6970  00BBB0  00EF2D5E           	clr.w	F9783
  6971                           ;DFMAIN.C: 1905: write_LEDs(0x01);
  6972                           
  6973                           	line	1905
  6974  00BBB2  00200010           	mov.w	#01h,w0
  6975  00BBB4  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
              00000000           
  6976                           ;DFMAIN.C: 1906: }
  6977                           
  6978                           	line	1906
  6979  00BBB8  0004BCA0           	goto	l463
              00000000           
  6980                           	line	1907
  6981  00BBBC                     l462:
  6982                           ;DFMAIN.C: 1907: else if (pulseintcnt == 50 * 2 
                                 - 10)
  6983                           
  6984  00BBBC  002005A0           	mov.w	#05Ah,w0
  6985  00BBBE  00E30D5E           	cp.w	F9783
  6986  00BBC0  003A0002           	bra	nz,u2361
  6987  00BBC2  0004BBCA           	goto	u2360
              00000000           
  6988  00BBC6                     u2361:
  6989  00BBC6  0004BBDC           	goto	l464
              00000000           
  6990  00BBCA                     u2360:
  6991                           ;DFMAIN.C: 1908: {
  6992                           
  6993                           ;DFMAIN.C: 1909: write_LEDs(0x01 | 0x02);
  6994                           
  6995                           	line	1909
  6996  00BBCA  00200030           	mov.w	#03h,w0
  6997  00BBCC  0002CF94           	call	(_write_LEDs)	;0 bytes adjustment
              00000000           
  6998                           ;DFMAIN.C: 1910: write_DAC(246, RFDAC_CTRL_RF_ON
                                 _AND_ABLATING);
  6999                           
  7000                           	line	1910
  7001  00BBD0  002000F2           	mov.w	#0Fh,w2
  7002  00BBD2  00200F60           	mov.w	#0F6h,w0
  7003  00BBD4  0002CB1E           	call	(_write_DAC)	;0 bytes adjustment
              00000000           
  7004                           ;DFMAIN.C: 1911: }
  7005                           
  7006                           	line	1911
  7007  00BBD8  0004BCA0           	goto	l465
              00000000           
  7008                           	line	1912
  7009  00BBDC                     l464:
  7010                           ;DFMAIN.C: 1912: else if (pulseintcnt == 50 * 2 
                                 - 8)
  7011                           
  7012  00BBDC  002005C0           	mov.w	#05Ch,w0
  7013  00BBDE  00E30D5E           	cp.w	F9783
  7014  00BBE0  003A0002           	bra	nz,u2371
  7015  00BBE2  0004BBEA           	goto	u2370
              00000000           
  7016  00BBE6                     u2371:
  7017  00BBE6  0004BCA0           	goto	l466
              00000000           
  7018  00BBEA                     u2370:
  7019                           ;DFMAIN.C: 1913: {
  7020                           
  7021                           ;DFMAIN.C: 1914: read_RF_ADC(data);
  7022                           
  7023                           	line	1914
  7024  00BBEA  002FFF40           	mov.w	#(0+f34026+4)-0,w0
  7025  00BBEC  00478000           	add.w	sp,w0,w0
  7026  00BBEE  0002C9F6           	call	(_read_RF_ADC)	;0 bytes adjustment
              00000000           
  7027                           ;DFMAIN.C: 1917: impedance_scale = ((unsigned lo
                                 ng)(es.RFvoltagescale) * 10000L);
  7028                           
  7029                           	line	1917
  7030  00BBF2  00200003           	mov.w	#highword(02710h), w3
  7031  00BBF4  00227102           	mov.w	#(02710h & 0ffffh), w2
  7032  00BBF6  002119C6           	mov.w	#_es,w6
  7033  00BBF8  00780306           	mov.w	w6,w6
  7034  00BBFA  00B001A6           	add.w	#26,w6
  7035  00BBFC  00780216           	mov.w	[w6],w4
  7036  00BBFE  00EB0280           	clr.w	w5
  7037  00BC00  00BE8004           	mov.d	w4,w0
  7038                           	global	llmul
  7039  00BC02  0002FB96           	call	llmul
              00000000           
  7040  00BC06  009FBF80           	mov.w	w0,[sp+((0+f34026+0)-0)]
  7041  00BC08  009FBF91           	mov.w	w1,[sp+((0+f34026+0)-0+2)]
  7042                           ;DFMAIN.C: 1918: impedance_scale /= (unsigned lo
                                 ng)(es.RFcurrentscale);
  7043                           
  7044                           	line	1918
  7045  00BC0A  002119C6           	mov.w	#_es,w6
  7046  00BC0C  00780306           	mov.w	w6,w6
  7047  00BC0E  00B001C6           	add.w	#28,w6
  7048  00BC10  00780396           	mov.w	[w6],w7
  7049  00BC12  00780107           	mov.w	w7,w2
  7050  00BC14  00EB0180           	clr.w	w3
  7051  00BC16  002FFF06           	mov.w	#((0+f34026+0)-0),w6
  7052  00BC18  00478306           	add.w	sp,w6,w6
  7053  00BC1A  00BE0016           	mov.d	[w6],w0
  7054                           	global	lldiv
  7055  00BC1C  0002FAEC           	call	lldiv
              00000000           
  7056  00BC20  00BE8B00           	mov.d	w0,[w6]
  7057                           ;DFMAIN.C: 1919: if (data[0] <= 0)
  7058                           
  7059                           	line	1919
  7060  00BC22  00200007           	mov.w	#0,w7
  7061  00BC24  002FFF46           	mov.w	#((0+f34026+4)-0),w6
  7062  00BC26  00478306           	add.w	sp,w6,w6
  7063  00BC28  00780316           	mov.w	[w6],w6
  7064  00BC2A  00E13007           	cp.w	w6, w7
  7065  00BC2C  003C0002           	bra	gt,u2381
  7066  00BC2E  0004BC36           	goto	u2380
              00000000           
  7067  00BC32                     u2381:
  7068  00BC32  0004BC44           	goto	l467
              00000000           
  7069  00BC36                     u2380:
  7070                           ;DFMAIN.C: 1920: dfp->impedance = 0;
  7071                           
  7072                           	line	1920
  7073  00BC36  002FFFC6           	mov.w	#((0+f34026+12)-0),w6
  7074  00BC38  00478306           	add.w	sp,w6,w6
  7075  00BC3A  00780316           	mov.w	[w6],w6
  7076  00BC3C  00200007           	mov.w	#0,w7
  7077  00BC3E  00780B07           	mov.w	w7,[w6]
  7078  00BC40  0004BC98           	goto	l468
              00000000           
  7079                           	line	1921
  7080  00BC44                     l467:
  7081                           ;DFMAIN.C: 1921: else
  7082                           
  7083                           ;DFMAIN.C: 1922: dfp->impedance = data[1] > 0 ? 
                                 (((unsigned long)data[0] * impedance_scale) / (u
                                 nsigned long)data[1]) / 100L : 9999;
  7084                           
  7085                           	line	1922
  7086  00BC44  00200006           	mov.w	#0,w6
  7087  00BC46  002FFF67           	mov.w	#((0+f34026+4)-0+02h),w7
  7088  00BC48  00478387           	add.w	sp,w7,w7
  7089  00BC4A  00780397           	mov.w	[w7],w7
  7090  00BC4C  00E13806           	cp.w	w7, w6
  7091  00BC4E  003C001E           	bra	gt,u2391
  7092  00BC50  0004BC54           	goto	u2390
              00000000           
  7093  00BC54                     u2390:
  7094  00BC54  00200001           	mov.w	#highword(0270Fh), w1
  7095  00BC56  002270F0           	mov.w	#(0270Fh & 0ffffh), w0
  7096  00BC58  0004BC90           	goto	u2404
              00000000           
  7097  00BC5C                     u2403:
  7098  00BC5C  002FFF06           	mov.w	#((0+f34026+0)-0),w6
  7099  00BC5E  00478306           	add.w	sp,w6,w6
  7100  00BC60  00BE0116           	mov.d	[w6],w2
  7101  00BC62  0097BB2F           	mov.w	[sp+((0+f34026+4)-0)], w6
  7102  00BC64  00780306           	mov.w	w6,w6
  7103  00BC66  00EB0380           	clr.w	w7
  7104  00BC68  00A7F006           	btsc	w6,#15
  7105  00BC6A  00EB8380           	setm	w7
  7106  00BC6C  00BE8006           	mov.d	w6,w0
  7107                           	global	llmul
  7108  00BC6E  0002FB96           	call	llmul
              00000000           
  7109  00BC72  0097BB3F           	mov.w	[sp+((0+f34026+4)-0+02h)], w6
  7110  00BC74  00780106           	mov.w	w6,w2
  7111  00BC76  00EB0180           	clr.w	w3
  7112  00BC78  00A7F002           	btsc	w2,#15
  7113  00BC7A  00EB8180           	setm	w3
  7114                           	global	lldiv
  7115  00BC7C  0002FAEC           	call	lldiv
              00000000           
  7116  00BC80  00200003           	mov.w	#highword(064h), w3
  7117  00BC82  00200642           	mov.w	#(064h & 0ffffh), w2
  7118                           	global	lldiv
  7119  00BC84  0002FAEC           	call	lldiv
              00000000           
  7120  00BC88  0004BC90           	goto	u2404
              00000000           
  7121  00BC8C                     u2391:
  7122  00BC8C  0004BC5C           	goto	u2403
              00000000           
  7123  00BC90                     u2404:
  7124  00BC90  002FFFC6           	mov.w	#((0+f34026+12)-0),w6
  7125  00BC92  00478306           	add.w	sp,w6,w6
  7126  00BC94  00780316           	mov.w	[w6],w6
  7127  00BC96  00780B00           	mov.w	w0,[w6]
  7128  00BC98                     l468:
  7129                           ;DFMAIN.C: 1923: write_DAC(0, RFDAC_CTRL_RF_OFF_
                                 MTRRLY_OFF_RF);
  7130                           
  7131                           	line	1923
  7132  00BC98  002000C2           	mov.w	#0Ch,w2
  7133  00BC9A  00200000           	mov.w	#0,w0
  7134  00BC9C  0002CB1E           	call	(_write_DAC)	;0 bytes adjustment
              00000000           
  7135                           	line	1924
  7136  00BCA0                     l466:
  7137                           	line	1925
  7138  00BCA0                     l465:
  7139  00BCA0                     l463:
  7140                           ;DFMAIN.C: 1924: }
  7141                           
  7142                           ;DFMAIN.C: 1925: }
  7143                           
  7144  00BCA0                     l460:
  7145                           	local	_imp_pulse_measure
  7146                           
  7147  00BCA0  00B1010F           	sub.w	#16,sp
  7148  00BCA2  00060000           	return
  7149                           	line	1887
  7150                           
  7151  00BCA4                     f34021:
  7152                           
  7153  00BCA4  00B0010F           	add.w	#16,sp
  7154  00BCA6  0004BB70           	goto	f34020
              00000000           
  7155  000000                     f34026	equ	-16		;stack offset for auto's
  7156  000000                     f34023	equ	-20		;stack offset for parameters
  7157                           	line	0
  7158                           	line	1944
  7159  00BCAA                     _isDeviceConnected:
  7160  00BCAA  0004BCFE           	goto	f34041
              00000000           
  7161  00BCAE                     f34040:
  7162                           
  7163                           ;DFMAIN.C: 1943: static unsigned int isDeviceCon
                                 nected()
  7164                           
  7165                           ;DFMAIN.C: 1944: {
  7166                           
  7167                           ;DFMAIN.C: 1945: unsigned int is_device_connecte
                                 d;
  7168                           
  7169                           ;DFMAIN.C: 1947: if (ds.temperature1 <= 1500 && 
                                 ds.temperature2 <= 1500)
  7170                           
  7171                           	line	1947
  7172  00BCAE  00205DC6           	mov.w	#05DCh,w6
  7173  00BCB0  00211447           	mov.w	#_ds,w7
  7174  00BCB2  00780387           	mov.w	w7,w7
  7175  00BCB4  00B00247           	add.w	#36,w7
  7176  00BCB6  00780297           	mov.w	[w7],w5
  7177  00BCB8  00E12806           	cp.w	w5, w6
  7178  00BCBA  003E000D           	bra	gtu,u2411
  7179  00BCBC  0004BCC0           	goto	u2410
              00000000           
  7180  00BCC0                     u2410:
  7181  00BCC0  00205DC6           	mov.w	#05DCh,w6
  7182  00BCC2  00211447           	mov.w	#_ds,w7
  7183  00BCC4  00780387           	mov.w	w7,w7
  7184  00BCC6  00B00267           	add.w	#38,w7
  7185  00BCC8  00780297           	mov.w	[w7],w5
  7186  00BCCA  00E12806           	cp.w	w5, w6
  7187  00BCCC  003E0004           	bra	gtu,u2421
  7188  00BCCE  0004BCD2           	goto	u2420
              00000000           
  7189  00BCD2                     u2420:
  7190  00BCD2  0004BCDE           	goto	u2430
              00000000           
  7191  00BCD6                     u2411:
  7192  00BCD6                     u2421:
  7193  00BCD6  0004BCDA           	goto	u2431
              00000000           
  7194  00BCDA                     u2431:
  7195  00BCDA  0004BCEA           	goto	l470
              00000000           
  7196  00BCDE                     u2430:
  7197                           ;DFMAIN.C: 1948: {
  7198                           
  7199                           ;DFMAIN.C: 1949: is_device_connected = 1;
  7200                           
  7201                           	line	1949
  7202  00BCDE  00200017           	mov.w	#01h,w7
  7203  00BCE0  002FFFC6           	mov.w	#((0+f34046+0)-0),w6
  7204  00BCE2  00478306           	add.w	sp,w6,w6
  7205  00BCE4  00780B07           	mov.w	w7,[w6]
  7206                           ;DFMAIN.C: 1950: }
  7207                           
  7208                           	line	1950
  7209  00BCE6  0004BCF2           	goto	l471
              00000000           
  7210                           	line	1951
  7211  00BCEA                     l470:
  7212                           ;DFMAIN.C: 1951: else
  7213                           
  7214                           ;DFMAIN.C: 1952: {
  7215                           
  7216                           ;DFMAIN.C: 1953: is_device_connected = 0;
  7217                           
  7218                           	line	1953
  7219  00BCEA  00200007           	mov.w	#0,w7
  7220  00BCEC  002FFFC6           	mov.w	#((0+f34046+0)-0),w6
  7221  00BCEE  00478306           	add.w	sp,w6,w6
  7222  00BCF0  00780B07           	mov.w	w7,[w6]
  7223                           	line	1954
  7224  00BCF2                     l471:
  7225                           ;DFMAIN.C: 1954: }
  7226                           
  7227                           ;DFMAIN.C: 1956: return(is_device_connected);
  7228                           
  7229                           	line	1956
  7230  00BCF2  0097B86F           	mov.w	[sp+((0+f34046+0)-0)], w0
  7231  00BCF4  00780000           	mov.w	w0,w0
  7232  00BCF6  0004BCFA           	goto	l469
              00000000           
  7233                           ;DFMAIN.C: 1957: }
  7234                           
  7235                           	line	1957
  7236  00BCFA                     l469:
  7237                           	local	_isDeviceConnected
  7238                           
  7239  00BCFA  00B1004F           	sub.w	#4,sp
  7240  00BCFC  00060000           	return
  7241                           	line	1944
  7242                           
  7243  00BCFE                     f34041:
  7244                           
  7245  00BCFE  00B0004F           	add.w	#4,sp
  7246  00BD00  0004BCAE           	goto	f34040
              00000000           
  7247  000000                     f34046	equ	-4		;stack offset for auto's
  7248  000000                     f34043	equ	-8		;stack offset for parameters
  7249                           	line	0
  7250                           	line	1978
  7251  00BD04                     _isImpedanceTooLow:
  7252  00BD04  0004BD42           	goto	f34051
              00000000           
  7253  00BD08                     f34050:
  7254                           
  7255                           ;DFMAIN.C: 1977: static unsigned int isImpedance
                                 TooLow(unsigned int impedance)
  7256                           
  7257                           ;DFMAIN.C: 1978: {
  7258                           
  7259                           ;DFMAIN.C: 1979: unsigned int is_impedance_too_l
                                 ow;
  7260                           
  7261                           ;DFMAIN.C: 1981: if (impedance < (201))
  7262                           
  7263                           ;_impedance stored from w0
  7264                           	line	1981
  7265  00BD08  002FFFC6           	mov.w	#((0+f34056+2)-0),w6
  7266  00BD0A  00478306           	add.w	sp,w6,w6
  7267  00BD0C  00780B00           	mov.w	w0,[w6]
  7268  00BD0E  00200C97           	mov.w	#0C9h,w7
  7269  00BD10  002FFFC6           	mov.w	#((0+f34056+2)-0),w6
  7270  00BD12  00478306           	add.w	sp,w6,w6
  7271  00BD14  00780316           	mov.w	[w6],w6
  7272  00BD16  00E13007           	cp.w	w6, w7
  7273  00BD18  00310002           	bra	geu,u2441
  7274  00BD1A  0004BD22           	goto	u2440
              00000000           
  7275  00BD1E                     u2441:
  7276  00BD1E  0004BD2E           	goto	l473
              00000000           
  7277  00BD22                     u2440:
  7278                           ;DFMAIN.C: 1983: {
  7279                           
  7280                           ;DFMAIN.C: 1984: is_impedance_too_low = 1;
  7281                           
  7282                           	line	1984
  7283  00BD22  00200017           	mov.w	#01h,w7
  7284  00BD24  002FFFA6           	mov.w	#((0+f34056+0)-0),w6
  7285  00BD26  00478306           	add.w	sp,w6,w6
  7286  00BD28  00780B07           	mov.w	w7,[w6]
  7287                           ;DFMAIN.C: 1985: }
  7288                           
  7289                           	line	1985
  7290  00BD2A  0004BD36           	goto	l474
              00000000           
  7291                           	line	1986
  7292  00BD2E                     l473:
  7293                           ;DFMAIN.C: 1986: else
  7294                           
  7295                           ;DFMAIN.C: 1987: {
  7296                           
  7297                           ;DFMAIN.C: 1988: is_impedance_too_low = 0;
  7298                           
  7299                           	line	1988
  7300  00BD2E  00200007           	mov.w	#0,w7
  7301  00BD30  002FFFA6           	mov.w	#((0+f34056+0)-0),w6
  7302  00BD32  00478306           	add.w	sp,w6,w6
  7303  00BD34  00780B07           	mov.w	w7,[w6]
  7304                           	line	1989
  7305  00BD36                     l474:
  7306                           ;DFMAIN.C: 1989: }
  7307                           
  7308                           ;DFMAIN.C: 1991: return(is_impedance_too_low);
  7309                           
  7310                           	line	1991
  7311  00BD36  0097B85F           	mov.w	[sp+((0+f34056+0)-0)], w0
  7312  00BD38  00780000           	mov.w	w0,w0
  7313  00BD3A  0004BD3E           	goto	l472
              00000000           
  7314                           ;DFMAIN.C: 1992: }
  7315                           
  7316                           	line	1992
  7317  00BD3E                     l472:
  7318                           	local	_isImpedanceTooLow
  7319                           
  7320  00BD3E  00B1006F           	sub.w	#6,sp
  7321  00BD40  00060000           	return
  7322                           	line	1978
  7323                           
  7324  00BD42                     f34051:
  7325                           
  7326  00BD42  00B0006F           	add.w	#6,sp
  7327  00BD44  0004BD08           	goto	f34050
              00000000           
  7328  000000                     f34056	equ	-6		;stack offset for auto's
  7329  000000                     f34053	equ	-10		;stack offset for parameters
  7330                           	line	0
  7331                           	line	2009
  7332  00BD48                     _SetPowerSetting:
  7333  00BD48  0004BD52           	goto	f34061
              00000000           
  7334  00BD4C                     f34060:
  7335                           
  7336                           ;DFMAIN.C: 2008: static void SetPowerSetting(uns
                                 igned int new_pwr_setting)
  7337                           
  7338                           ;DFMAIN.C: 2009: {
  7339                           
  7340                           ;DFMAIN.C: 2010: ds.setting = new_pwr_setting;
  7341                           
  7342                           	line	2010
  7343  00BD4C  00211986           	mov	#_ds+84,w6
  7344  00BD4E  00780B00           	mov.w	w0,[w6]
  7345                           ;DFMAIN.C: 2011: }
  7346                           
  7347                           	line	2011
  7348  00BD50                     l475:
  7349                           	local	_SetPowerSetting
  7350  00BD50  00060000           	return
  7351                           	line	2009
  7352                           
  7353  00BD52                     f34061:
  7354  00BD52  0004BD4C           	goto	f34060
              00000000           
  7355  000000                     f34066	equ	0		;stack offset for auto's
  7356  000000                     f34063	equ	-4		;stack offset for parameters
  7357                           	line	0
  7358                           	line	2029
  7359  00BD56                     _EnterSettingsMode:
  7360  00BD56  0004BDAE           	goto	f34071
              00000000           
  7361  00BD5A                     f34070:
  7362                           
  7363                           ;DFMAIN.C: 2028: static void EnterSettingsMode()
  7364                           
  7365                           ;DFMAIN.C: 2029: {
  7366                           
  7367                           ;DFMAIN.C: 2032: SettingsMode = 1;
  7368                           
  7369                           	line	2032
  7370  00BD5A  00EF3140           	clr.w	_SettingsMode
  7371  00BD5C  00EC3140           	inc.w	_SettingsMode
  7372                           ;DFMAIN.C: 2036: RFCycleSPS = RFCycleSPSPreset;
  7373                           
  7374                           	line	2036
  7375  00BD5E  008089D6           	mov	_RFCycleSPSPreset,w6
  7376  00BD60  008889C6           	mov	w6,_RFCycleSPS
  7377                           ;DFMAIN.C: 2040: FlashRFCycleCount = 0;
  7378                           
  7379                           	line	2040
  7380  00BD62  00EF2D6E           	clr.w	_FlashRFCycleCount
  7381                           ;DFMAIN.C: 2044: PostStartupRFCycleAdjusted = 0;
  7382                           
  7383                           	line	2044
  7384  00BD64  00EF313C           	clr.w	_PostStartupRFCycleAdjusted
  7385                           ;DFMAIN.C: 2048: gDFDisplySetProgrammableButtons
                                 (TIMER_BTN_LABEL_DISPLAY_ITEM_ID);
  7386                           
  7387                           	global	_gDFDisplySetProgrammableButtons
  7388                           	signat	_gDFDisplySetProgrammableButtons,4154
  7389                           	line	2048
  7390  00BD66  00200090           	mov.w	#09h,w0
  7391  00BD68  00029C52           	call	(_gDFDisplySetProgrammableButtons)	;0 byte
              00000000           s adjustment
  7392                           ;DFMAIN.C: 2052: gDFDisplyPrintTextItem(CONNECT_
                                 DEVICE_DISPLAY_ITEM_ID, "null", 0);
  7393                           
  7394                           	line	2052
  7395  00BD6C  00200004           	mov.w	#0,w4
  7396  00BD6E  00285A62           	mov.w	#u239,w2
  7397  00BD70  002000B0           	mov.w	#0Bh,w0
  7398  00BD72  000298D6           	call	(_gDFDisplyPrintTextItem)	;0 bytes adjustm
              00000000           ent
  7399                           ;DFMAIN.C: 2056: gDFDisplyPrintTemperatureValues
                                 (ds.setting, ds.temperature2/10,
  7400                           
  7401                           ;DFMAIN.C: 2057: ds.temperature1/10, 0, 1, 1);
  7402                           
  7403                           	line	2057
  7404  00BD76  00200016           	mov.w	#01h,w6
  7405  00BD78  00781F86           	push	w6
  7406  00BD7A  00200016           	mov.w	#01h,w6
  7407  00BD7C  00781F86           	push	w6
  7408  00BD7E  00200006           	mov.w	#0,w6
  7409  00BD80  002000A7           	mov.w	#0Ah,w7
  7410  00BD82  00211445           	mov.w	#_ds,w5
  7411  00BD84  00780285           	mov.w	w5,w5
  7412  00BD86  00B00245           	add.w	#36,w5
  7413  00BD88  00780195           	mov.w	[w5],w3
  7414  00BD8A  00090011           	repeat	#18-1
  7415  00BD8C  00D88187           	div.uw	w3,w7
  7416  00BD8E  00FD0200           	exch	w0,w4
  7417  00BD90  002000A7           	mov.w	#0Ah,w7
  7418  00BD92  00211445           	mov.w	#_ds,w5
  7419  00BD94  00780285           	mov.w	w5,w5
  7420  00BD96  00B00265           	add.w	#38,w5
  7421  00BD98  00780195           	mov.w	[w5],w3
  7422  00BD9A  00090011           	repeat	#18-1
  7423  00BD9C  00D88187           	div.uw	w3,w7
  7424  00BD9E  00FD0100           	exch	w0,w2
  7425  00BDA0  00211447           	mov.w	#_ds,w7
  7426  00BDA2  00780387           	mov.w	w7,w7
  7427  00BDA4  00B00547           	add.w	#84,w7
  7428  00BDA6  00784017           	mov.b	[w7],w0
  7429  00BDA8  00029356           	call	(_gDFDisplyPrintTemperatureValues)	;4 byte
              00000000           s adjustment
  7430                           ;DFMAIN.C: 2058: }
  7431                           
  7432                           	line	2058
  7433  00BDAC                     l476:
  7434                           	local	_EnterSettingsMode
  7435  00BDAC  00060000           	return
  7436                           	line	2029
  7437                           
  7438  00BDAE                     f34071:
  7439  00BDAE  0004BD5A           	goto	f34070
              00000000           
  7440  000000                     f34076	equ	0		;stack offset for auto's
  7441  000000                     f34073	equ	-4		;stack offset for parameters
  7442                           	line	0
  7443                           	line	2074
  7444  00BDB2                     _ExitSettingsMode:
  7445  00BDB2  0004BE4C           	goto	f34091
              00000000           
  7446  00BDB6                     f34090:
  7447                           
  7448                           ;DFMAIN.C: 2073: static void ExitSettingsMode()
  7449                           
  7450                           ;DFMAIN.C: 2074: {
  7451                           
  7452                           ;DFMAIN.C: 2077: SettingsMode = 0;
  7453                           
  7454                           	line	2077
  7455  00BDB6  00EF3140           	clr.w	_SettingsMode
  7456                           ;DFMAIN.C: 2086: if ((((ds.totalrfontime % 50)+(
                                 50/2))/50)+
  7457                           
  7458                           ;DFMAIN.C: 2087: (((RFCycleSPSPreset % 50)+(50/2
                                 ))/50) > 1)
  7459                           
  7460                           	line	2087
  7461  00BDB8  00200005           	mov.w	#highword(01h), w5
  7462  00BDBA  00200014           	mov.w	#(01h & 0ffffh), w4
  7463  00BDBC  00200326           	mov.w	#032h,w6
  7464  00BDBE  00200323           	mov.w	#032h,w3
  7465  00BDC0  008089D7           	mov	_RFCycleSPSPreset,w7
  7466  00BDC2  00090011           	repeat	#18-1
  7467  00BDC4  00D88383           	div.uw	w7,w3
  7468  00BDC6  00B00191           	add.w	#25,w1
  7469  00BDC8  00090011           	repeat	#18-1
  7470  00BDCA  00D88086           	div.uw	w1,w6
  7471  00BDCC  00780300           	mov.w	w0,w6
  7472  00BDCE  00EB0380           	clr.w	w7
  7473  00BDD0  00200009           	mov.w	#highword(019h), w9
  7474  00BDD2  00200198           	mov.w	#(019h & 0ffffh), w8
  7475  00BDD4  00200003           	mov.w	#highword(032h), w3
  7476  00BDD6  00200322           	mov.w	#(032h & 0ffffh), w2
  7477  00BDD8  00211441           	mov.w	#_ds,w1
  7478  00BDDA  00780701           	mov.w	w1,w14
  7479  00BDDC  00B0004E           	add.w	#4,w14
  7480  00BDDE  0078003E           	mov.w	[w14++],w0
  7481  00BDE0  007800AE           	mov.w	[w14--],w1
  7482                           	global	llmod
  7483  00BDE2  0002FB40           	call	llmod
              00000000           
  7484  00BDE6  00BE8100           	mov.d	w0,w2
  7485  00BDE8  00410008           	add.w	w2,w8,w0
  7486  00BDEA  00498089           	addc.w	w3,w9,w1
  7487  00BDEC  00200003           	mov.w	#highword(032h), w3
  7488  00BDEE  00200322           	mov.w	#(032h & 0ffffh), w2
  7489                           	global	lldiv
  7490  00BDF0  0002FAEC           	call	lldiv
              00000000           
  7491  00BDF4  00400106           	add.w	w0,w6,w2
  7492  00BDF6  00488187           	addc.w	w1,w7,w3
  7493  00BDF8  00E11805           	cp.w	w3, w5
  7494  00BDFA  003A0001           	bra	nz,u2455
  7495  00BDFC  00E11004           	cp.w	w2, w4
  7496  00BDFE                     u2455:
  7497  00BDFE  00360002           	bra	leu,u2451
  7498  00BE00  0004BE08           	goto	u2450
              00000000           
  7499  00BE04                     u2451:
  7500  00BE04  0004BE1C           	goto	l478
              00000000           
  7501  00BE08                     u2450:
  7502                           ;DFMAIN.C: 2088: {
  7503                           
  7504                           ;DFMAIN.C: 2089: RFCycleSPSPreset = RFCycleSPSPr
                                 eset / 50 * 50;
  7505                           
  7506                           	line	2089
  7507  00BE08  00200324           	mov.w	#032h,w4
  7508  00BE0A  00200325           	mov.w	#032h,w5
  7509  00BE0C  008089D7           	mov	_RFCycleSPSPreset,w7
  7510  00BE0E  00090011           	repeat	#18-1
  7511  00BE10  00D88385           	div.uw	w7,w5
  7512  00BE12  00FD0300           	exch	w0,w6
  7513  00BE14  00B83304           	mul.uu	w6,w4,w6
  7514  00BE16  008889D6           	mov	w6,_RFCycleSPSPreset
  7515                           ;DFMAIN.C: 2090: }
  7516                           
  7517                           	line	2090
  7518  00BE18  0004BE30           	goto	l479
              00000000           
  7519                           	line	2091
  7520  00BE1C                     l478:
  7521                           ;DFMAIN.C: 2091: else
  7522                           
  7523                           ;DFMAIN.C: 2092: {
  7524                           
  7525                           ;DFMAIN.C: 2093: RFCycleSPSPreset = ((RFCycleSPS
                                 Preset + (50/2)) / 50) * 50;
  7526                           
  7527                           	line	2093
  7528  00BE1C  00200324           	mov.w	#032h,w4
  7529  00BE1E  00200327           	mov.w	#032h,w7
  7530  00BE20  002113A6           	mov.w	#_RFCycleSPSPreset,w6
  7531  00BE22  00780296           	mov.w	[w6],w5
  7532  00BE24  00B00195           	add.w	#25,w5
  7533  00BE26  00090011           	repeat	#18-1
  7534  00BE28  00D88287           	div.uw	w5,w7
  7535  00BE2A  00FD0300           	exch	w0,w6
  7536  00BE2C  00B83304           	mul.uu	w6,w4,w6
  7537  00BE2E  008889D6           	mov	w6,_RFCycleSPSPreset
  7538                           	line	2094
  7539  00BE30                     l479:
  7540                           ;DFMAIN.C: 2094: }
  7541                           
  7542                           ;DFMAIN.C: 2098: RFCycleSPS = RFCycleSPSPreset;
  7543                           
  7544                           	line	2098
  7545  00BE30  008089D6           	mov	_RFCycleSPSPreset,w6
  7546  00BE32  008889C6           	mov	w6,_RFCycleSPS
  7547                           ;DFMAIN.C: 2111: RFCycleSet = 1;
  7548                           
  7549                           	line	2111
  7550  00BE34  00EF2D76           	clr.w	_RFCycleSet
  7551  00BE36  00EC2D76           	inc.w	_RFCycleSet
  7552                           ;DFMAIN.C: 2116: PostStartupRFCycleAdjusted = 1;
  7553                           
  7554                           	line	2116
  7555  00BE38  00EF313C           	clr.w	_PostStartupRFCycleAdjusted
  7556  00BE3A  00EC313C           	inc.w	_PostStartupRFCycleAdjusted
  7557                           ;DFMAIN.C: 2120: gDFDisplySetProgrammableButtons
                                 (POWER_BTN_LABEL_DISPLAY_ITEM_ID);
  7558                           
  7559                           	line	2120
  7560  00BE3C  002000A0           	mov.w	#0Ah,w0
  7561  00BE3E  00029C52           	call	(_gDFDisplySetProgrammableButtons)	;0 byte
              00000000           s adjustment
  7562                           ;DFMAIN.C: 2128: DeviceConnectReported = 0;
  7563                           
  7564                           	line	2128
  7565  00BE42  00EF2D68           	clr.w	_DeviceConnectReported
  7566                           ;DFMAIN.C: 2129: DeviceDisconnectReported = 0;
  7567                           
  7568                           	line	2129
  7569  00BE44  00EF2D6A           	clr.w	_DeviceDisconnectReported
  7570                           ;DFMAIN.C: 2130: }
  7571                           
  7572                           	line	2130
  7573  00BE46                     l477:
  7574                           	local	_ExitSettingsMode
  7575  00BE46  007804CF           	pop	w9
  7576  00BE48  0078044F           	pop	w8
  7577  00BE4A  00060000           	return
  7578                           	line	2074
  7579                           
  7580  00BE4C                     f34091:
  7581  00BE4C  00781F88           	push	w8
  7582  00BE4E  00781F89           	push	w9
  7583  00BE50  0004BDB6           	goto	f34090
              00000000           
  7584  000000                     f34096	equ	0		;stack offset for auto's
  7585  000000                     f34093	equ	-8		;stack offset for parameters
  7586                           	line	0
  7587                           	line	2146
  7588  00BE54                     _calc_median:
  7589  00BE54  0004BF28           	goto	f34101
              00000000           
  7590  00BE58                     f34100:
  7591                           
  7592                           ;DFMAIN.C: 2145: static unsigned int calc_median
                                 (unsigned int *in_array)
  7593                           
  7594                           ;DFMAIN.C: 2146: {
  7595                           
  7596                           ;DFMAIN.C: 2147: unsigned int tmp_a = in_array[0
                                 ];
  7597                           
  7598                           	line	2147
  7599  00BE58  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7600  00BE5A  00478306           	add.w	sp,w6,w6
  7601  00BE5C  00780B10           	mov.w	[w0],[w6]
  7602                           ;DFMAIN.C: 2148: unsigned int tmp_b = in_array[1
                                 ];
  7603                           
  7604                           	line	2148
  7605  00BE5E  00780380           	mov.w	w0,w7
  7606  00BE60  00B00027           	add.w	#2,w7
  7607  00BE62  002FFF86           	mov.w	#((0+f34106+2)-0),w6
  7608  00BE64  00478306           	add.w	sp,w6,w6
  7609  00BE66  00780B17           	mov.w	[w7],[w6]
  7610                           ;DFMAIN.C: 2149: unsigned int tmp_c = in_array[2
                                 ];
  7611                           
  7612                           	line	2149
  7613  00BE68  00780380           	mov.w	w0,w7
  7614  00BE6A  00B00047           	add.w	#4,w7
  7615  00BE6C  002FFFA6           	mov.w	#((0+f34106+4)-0),w6
  7616  00BE6E  00478306           	add.w	sp,w6,w6
  7617  00BE70  00780B17           	mov.w	[w7],[w6]
  7618                           ;DFMAIN.C: 2151: if (tmp_a > tmp_b)
  7619                           
  7620                           ;_in_array stored from w0
  7621                           	line	2151
  7622  00BE72  002FFFC6           	mov.w	#((0+f34106+6)-0),w6
  7623  00BE74  00478306           	add.w	sp,w6,w6
  7624  00BE76  00780B00           	mov.w	w0,[w6]
  7625  00BE78  002FFF86           	mov.w	#((0+f34106+2)-0),w6
  7626  00BE7A  00478306           	add.w	sp,w6,w6
  7627  00BE7C  00780396           	mov.w	[w6],w7
  7628  00BE7E  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7629  00BE80  00478306           	add.w	sp,w6,w6
  7630  00BE82  00780316           	mov.w	[w6],w6
  7631  00BE84  00E13007           	cp.w	w6, w7
  7632  00BE86  00360002           	bra	leu,u2461
  7633  00BE88  0004BE90           	goto	u2460
              00000000           
  7634  00BE8C                     u2461:
  7635  00BE8C  0004BED8           	goto	l481
              00000000           
  7636  00BE90                     u2460:
  7637                           ;DFMAIN.C: 2152: {
  7638                           
  7639                           ;DFMAIN.C: 2153: if (tmp_a > tmp_c)
  7640                           
  7641                           	line	2153
  7642  00BE90  002FFFA6           	mov.w	#((0+f34106+4)-0),w6
  7643  00BE92  00478306           	add.w	sp,w6,w6
  7644  00BE94  00780396           	mov.w	[w6],w7
  7645  00BE96  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7646  00BE98  00478306           	add.w	sp,w6,w6
  7647  00BE9A  00780316           	mov.w	[w6],w6
  7648  00BE9C  00E13007           	cp.w	w6, w7
  7649  00BE9E  00360002           	bra	leu,u2471
  7650  00BEA0  0004BEA8           	goto	u2470
              00000000           
  7651  00BEA4                     u2471:
  7652  00BEA4  0004BED4           	goto	l482
              00000000           
  7653  00BEA8                     u2470:
  7654                           ;DFMAIN.C: 2154: {
  7655                           
  7656                           ;DFMAIN.C: 2155: if (tmp_b > tmp_c)
  7657                           
  7658                           	line	2155
  7659  00BEA8  002FFFA6           	mov.w	#((0+f34106+4)-0),w6
  7660  00BEAA  00478306           	add.w	sp,w6,w6
  7661  00BEAC  00780396           	mov.w	[w6],w7
  7662  00BEAE  002FFF86           	mov.w	#((0+f34106+2)-0),w6
  7663  00BEB0  00478306           	add.w	sp,w6,w6
  7664  00BEB2  00780316           	mov.w	[w6],w6
  7665  00BEB4  00E13007           	cp.w	w6, w7
  7666  00BEB6  00360002           	bra	leu,u2481
  7667  00BEB8  0004BEC0           	goto	u2480
              00000000           
  7668  00BEBC                     u2481:
  7669  00BEBC  0004BECC           	goto	l483
              00000000           
  7670  00BEC0                     u2480:
  7671                           ;DFMAIN.C: 2156: {
  7672                           
  7673                           ;DFMAIN.C: 2157: tmp_a = tmp_b;
  7674                           
  7675                           	line	2157
  7676  00BEC0  0097BBCF           	mov.w	[sp+((0+f34106+2)-0)], w7
  7677  00BEC2  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7678  00BEC4  00478306           	add.w	sp,w6,w6
  7679  00BEC6  00780B07           	mov.w	w7,[w6]
  7680                           ;DFMAIN.C: 2158: }
  7681                           
  7682                           	line	2158
  7683  00BEC8  0004BED4           	goto	l484
              00000000           
  7684                           	line	2159
  7685  00BECC                     l483:
  7686                           ;DFMAIN.C: 2159: else
  7687                           
  7688                           ;DFMAIN.C: 2160: {
  7689                           
  7690                           ;DFMAIN.C: 2161: tmp_a = tmp_c;
  7691                           
  7692                           	line	2161
  7693  00BECC  0097BBDF           	mov.w	[sp+((0+f34106+4)-0)], w7
  7694  00BECE  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7695  00BED0  00478306           	add.w	sp,w6,w6
  7696  00BED2  00780B07           	mov.w	w7,[w6]
  7697                           	line	2162
  7698  00BED4                     l484:
  7699                           	line	2163
  7700  00BED4                     l482:
  7701                           ;DFMAIN.C: 2162: }
  7702                           
  7703                           ;DFMAIN.C: 2163: }
  7704                           
  7705                           ;DFMAIN.C: 2164: }
  7706                           
  7707                           	line	2164
  7708  00BED4  0004BF1C           	goto	l485
              00000000           
  7709                           	line	2165
  7710  00BED8                     l481:
  7711                           ;DFMAIN.C: 2165: else
  7712                           
  7713                           ;DFMAIN.C: 2166: {
  7714                           
  7715                           ;DFMAIN.C: 2167: if (tmp_a < tmp_c)
  7716                           
  7717                           	line	2167
  7718  00BED8  002FFFA6           	mov.w	#((0+f34106+4)-0),w6
  7719  00BEDA  00478306           	add.w	sp,w6,w6
  7720  00BEDC  00780396           	mov.w	[w6],w7
  7721  00BEDE  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7722  00BEE0  00478306           	add.w	sp,w6,w6
  7723  00BEE2  00780316           	mov.w	[w6],w6
  7724  00BEE4  00E13007           	cp.w	w6, w7
  7725  00BEE6  00310002           	bra	geu,u2491
  7726  00BEE8  0004BEF0           	goto	u2490
              00000000           
  7727  00BEEC                     u2491:
  7728  00BEEC  0004BF1C           	goto	l486
              00000000           
  7729  00BEF0                     u2490:
  7730                           ;DFMAIN.C: 2168: {
  7731                           
  7732                           ;DFMAIN.C: 2169: if (tmp_b > tmp_c)
  7733                           
  7734                           	line	2169
  7735  00BEF0  002FFFA6           	mov.w	#((0+f34106+4)-0),w6
  7736  00BEF2  00478306           	add.w	sp,w6,w6
  7737  00BEF4  00780396           	mov.w	[w6],w7
  7738  00BEF6  002FFF86           	mov.w	#((0+f34106+2)-0),w6
  7739  00BEF8  00478306           	add.w	sp,w6,w6
  7740  00BEFA  00780316           	mov.w	[w6],w6
  7741  00BEFC  00E13007           	cp.w	w6, w7
  7742  00BEFE  00360002           	bra	leu,u2501
  7743  00BF00  0004BF08           	goto	u2500
              00000000           
  7744  00BF04                     u2501:
  7745  00BF04  0004BF14           	goto	l487
              00000000           
  7746  00BF08                     u2500:
  7747                           ;DFMAIN.C: 2170: {
  7748                           
  7749                           ;DFMAIN.C: 2171: tmp_a = tmp_c;
  7750                           
  7751                           	line	2171
  7752  00BF08  0097BBDF           	mov.w	[sp+((0+f34106+4)-0)], w7
  7753  00BF0A  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7754  00BF0C  00478306           	add.w	sp,w6,w6
  7755  00BF0E  00780B07           	mov.w	w7,[w6]
  7756                           ;DFMAIN.C: 2172: }
  7757                           
  7758                           	line	2172
  7759  00BF10  0004BF1C           	goto	l488
              00000000           
  7760                           	line	2173
  7761  00BF14                     l487:
  7762                           ;DFMAIN.C: 2173: else
  7763                           
  7764                           ;DFMAIN.C: 2174: {
  7765                           
  7766                           ;DFMAIN.C: 2175: tmp_a = tmp_b;
  7767                           
  7768                           	line	2175
  7769  00BF14  0097BBCF           	mov.w	[sp+((0+f34106+2)-0)], w7
  7770  00BF16  002FFF66           	mov.w	#((0+f34106+0)-0),w6
  7771  00BF18  00478306           	add.w	sp,w6,w6
  7772  00BF1A  00780B07           	mov.w	w7,[w6]
  7773                           	line	2176
  7774  00BF1C                     l488:
  7775                           	line	2177
  7776  00BF1C                     l486:
  7777                           	line	2178
  7778  00BF1C                     l485:
  7779                           ;DFMAIN.C: 2176: }
  7780                           
  7781                           ;DFMAIN.C: 2177: }
  7782                           
  7783                           ;DFMAIN.C: 2178: }
  7784                           
  7785                           ;DFMAIN.C: 2180: return (tmp_a);
  7786                           
  7787                           	line	2180
  7788  00BF1C  0097B83F           	mov.w	[sp+((0+f34106+0)-0)], w0
  7789  00BF1E  00780000           	mov.w	w0,w0
  7790  00BF20  0004BF24           	goto	l480
              00000000           
  7791                           ;DFMAIN.C: 2181: }
  7792                           
  7793                           	line	2181
  7794  00BF24                     l480:
  7795                           	local	_calc_median
  7796                           
  7797  00BF24  00B100AF           	sub.w	#10,sp
  7798  00BF26  00060000           	return
  7799                           	line	2146
  7800                           
  7801  00BF28                     f34101:
  7802                           
  7803  00BF28  00B000AF           	add.w	#10,sp
  7804  00BF2A  0004BE58           	goto	f34100
              00000000           
  7805  000000                     f34106	equ	-10		;stack offset for auto's
  7806  000000                     f34103	equ	-14		;stack offset for parameters
  7807                           	line	0
  7808                           	psect	mconst
  7809  008516                     u109:
  7810                           ; strings
  7811  008516                     	ds	14
  7812                           	psect	const
  7813                           ; strings
  7814  000A2C  53                 	db	83	;'S'
  7815  000A2D  50 00 00           	db	80	;'P'
  7816  000A30  49                 	db	73	;'I'
  7817  000A31  20 00 00           	db	32
  7818  000A34  43                 	db	67	;'C'
  7819  000A35  69 00 00           	db	105	;'i'
  7820  000A38  72                 	db	114	;'r'
  7821  000A39  63 00 00           	db	99	;'c'
  7822  000A3C  75                 	db	117	;'u'
  7823  000A3D  69 00 00           	db	105	;'i'
  7824  000A40  74                 	db	116	;'t'
  7825  000A41  72 00 00           	db	114	;'r'
  7826  000A44  79                 	db	121	;'y'
  7827  000A45  00 00 00           	db	0
  7828                           	psect	mconst
  7829  008524                     u89:
  7830  008524                     u229:
  7831  008524                     u99:
  7832                           ; strings
  7833  008524                     	ds	13
  7834                           	psect	const
  7835                           ; strings
  7836  000A48  52                 	db	82	;'R'
  7837  000A49  46 00 00           	db	70	;'F'
  7838  000A4C  20                 	db	32
  7839  000A4D  43 00 00           	db	67	;'C'
  7840  000A50  69                 	db	105	;'i'
  7841  000A51  72 00 00           	db	114	;'r'
  7842  000A54  63                 	db	99	;'c'
  7843  000A55  75 00 00           	db	117	;'u'
  7844  000A58  69                 	db	105	;'i'
  7845  000A59  74 00 00           	db	116	;'t'
  7846  000A5C  72                 	db	114	;'r'
  7847  000A5D  79 00 00           	db	121	;'y'
  7848  000A60  00                 	db	0
  7849                           	psect	mconst
  7850  008531                     u19:
  7851                           ; strings
  7852  008531                     	ds	13
  7853                           	psect	const
  7854                           ; strings
  7855  000A61  44 00 00           	db	68	;'D'
  7856  000A64  69                 	db	105	;'i'
  7857  000A65  73 00 00           	db	115	;'s'
  7858  000A68  70                 	db	112	;'p'
  7859  000A69  6C 00 00           	db	108	;'l'
  7860  000A6C  61                 	db	97	;'a'
  7861  000A6D  79 00 00           	db	121	;'y'
  7862  000A70  20                 	db	32
  7863  000A71  49 00 00           	db	73	;'I'
  7864  000A74  6E                 	db	110	;'n'
  7865  000A75  69 00 00           	db	105	;'i'
  7866  000A78  74                 	db	116	;'t'
  7867  000A79  00 00 00           	db	0
  7868                           	psect	mconst
  7869  00853E                     u209:
  7870                           ; strings
  7871  00853E                     	ds	15
  7872                           	psect	const
  7873                           ; strings
  7874  000A7C  49                 	db	73	;'I'
  7875  000A7D  6E 00 00           	db	110	;'n'
  7876  000A80  69                 	db	105	;'i'
  7877  000A81  74 00 00           	db	116	;'t'
  7878  000A84  69                 	db	105	;'i'
  7879  000A85  61 00 00           	db	97	;'a'
  7880  000A88  6C                 	db	108	;'l'
  7881  000A89  20 00 00           	db	32
  7882  000A8C  4C                 	db	76	;'L'
  7883  000A8D  61 00 00           	db	97	;'a'
  7884  000A90  62                 	db	98	;'b'
  7885  000A91  65 00 00           	db	101	;'e'
  7886  000A94  6C                 	db	108	;'l'
  7887  000A95  73 00 00           	db	115	;'s'
  7888  000A98  00                 	db	0
  7889                           	psect	mconst
  7890  00854D                     u219:
  7891                           ; strings
  7892  00854D                     	ds	15
  7893                           	psect	const
  7894                           ; strings
  7895  000A99  49 00 00           	db	73	;'I'
  7896  000A9C  6E                 	db	110	;'n'
  7897  000A9D  69 00 00           	db	105	;'i'
  7898  000AA0  74                 	db	116	;'t'
  7899  000AA1  69 00 00           	db	105	;'i'
  7900  000AA4  61                 	db	97	;'a'
  7901  000AA5  6C 00 00           	db	108	;'l'
  7902  000AA8  20                 	db	32
  7903  000AA9  43 00 00           	db	67	;'C'
  7904  000AAC  79                 	db	121	;'y'
  7905  000AAD  63 00 00           	db	99	;'c'
  7906  000AB0  6C                 	db	108	;'l'
  7907  000AB1  65 00 00           	db	101	;'e'
  7908  000AB4  73                 	db	115	;'s'
  7909  000AB5  00 00 00           	db	0
  7910                           	psect	mconst
  7911  00855C                     u179:
  7912                           ; strings
  7913  00855C                     	ds	17
  7914                           	psect	const
  7915                           ; strings
  7916  000AB8  49                 	db	73	;'I'
  7917  000AB9  6E 00 00           	db	110	;'n'
  7918  000ABC  69                 	db	105	;'i'
  7919  000ABD  74 00 00           	db	116	;'t'
  7920  000AC0  69                 	db	105	;'i'
  7921  000AC1  61 00 00           	db	97	;'a'
  7922  000AC4  6C                 	db	108	;'l'
  7923  000AC5  20 00 00           	db	32
  7924  000AC8  47                 	db	71	;'G'
  7925  000AC9  72 00 00           	db	114	;'r'
  7926  000ACC  61                 	db	97	;'a'
  7927  000ACD  70 00 00           	db	112	;'p'
  7928  000AD0  68                 	db	104	;'h'
  7929  000AD1  69 00 00           	db	105	;'i'
  7930  000AD4  63                 	db	99	;'c'
  7931  000AD5  73 00 00           	db	115	;'s'
  7932  000AD8  00                 	db	0
  7933                           	psect	mconst
  7934  00856D                     u189:
  7935                           ; strings
  7936  00856D                     	ds	22
  7937                           	psect	const
  7938                           ; strings
  7939  000AD9  49 00 00           	db	73	;'I'
  7940  000ADC  6E                 	db	110	;'n'
  7941  000ADD  69 00 00           	db	105	;'i'
  7942  000AE0  74                 	db	116	;'t'
  7943  000AE1  69 00 00           	db	105	;'i'
  7944  000AE4  61                 	db	97	;'a'
  7945  000AE5  6C 00 00           	db	108	;'l'
  7946  000AE8  20                 	db	32
  7947  000AE9  49 00 00           	db	73	;'I'
  7948  000AEC  6D                 	db	109	;'m'
  7949  000AED  70 00 00           	db	112	;'p'
  7950  000AF0  65                 	db	101	;'e'
  7951  000AF1  64 00 00           	db	100	;'d'
  7952  000AF4  61                 	db	97	;'a'
  7953  000AF5  6E 00 00           	db	110	;'n'
  7954  000AF8  63                 	db	99	;'c'
  7955  000AF9  65 00 00           	db	101	;'e'
  7956  000AFC  20                 	db	32
  7957  000AFD  62 00 00           	db	98	;'b'
  7958  000B00  61                 	db	97	;'a'
  7959  000B01  72 00 00           	db	114	;'r'
  7960  000B04  00                 	db	0
  7961                           	psect	mconst
  7962  008583                     u59:
  7963                           ; strings
  7964  008583                     	ds	14
  7965                           	psect	const
  7966                           ; strings
  7967  000B05  4F 00 00           	db	79	;'O'
  7968  000B08  6E                 	db	110	;'n'
  7969  000B09  2D 00 00           	db	45
  7970  000B0C  62                 	db	98	;'b'
  7971  000B0D  6F 00 00           	db	111	;'o'
  7972  000B10  61                 	db	97	;'a'
  7973  000B11  72 00 00           	db	114	;'r'
  7974  000B14  64                 	db	100	;'d'
  7975  000B15  20 00 00           	db	32
  7976  000B18  74                 	db	116	;'t'
  7977  000B19  65 00 00           	db	101	;'e'
  7978  000B1C  6D                 	db	109	;'m'
  7979  000B1D  70 00 00           	db	112	;'p'
  7980  000B20  00                 	db	0
  7981                           	psect	mconst
  7982  008591                     u79:
  7983                           ; strings
  7984  008591                     	ds	13
  7985                           	psect	const
  7986                           ; strings
  7987  000B21  53 00 00           	db	83	;'S'
  7988  000B24  74                 	db	116	;'t'
  7989  000B25  75 00 00           	db	117	;'u'
  7990  000B28  63                 	db	99	;'c'
  7991  000B29  6B 00 00           	db	107	;'k'
  7992  000B2C  20                 	db	32
  7993  000B2D  42 00 00           	db	66	;'B'
  7994  000B30  75                 	db	117	;'u'
  7995  000B31  74 00 00           	db	116	;'t'
  7996  000B34  74                 	db	116	;'t'
  7997  000B35  6F 00 00           	db	111	;'o'
  7998  000B38  6E                 	db	110	;'n'
  7999  000B39  00 00 00           	db	0
  8000                           	psect	mconst
  8001  00859E                     u169:
  8002                           ; strings
  8003  00859E                     	ds	8
  8004                           	psect	const
  8005                           ; strings
  8006  000B3C  56                 	db	86	;'V'
  8007  000B3D  65 00 00           	db	101	;'e'
  8008  000B40  72                 	db	114	;'r'
  8009  000B41  73 00 00           	db	115	;'s'
  8010  000B44  69                 	db	105	;'i'
  8011  000B45  6F 00 00           	db	111	;'o'
  8012  000B48  6E                 	db	110	;'n'
  8013  000B49  00 00 00           	db	0
  8014                           	psect	mconst
  8015  0085A6                     u239:
  8016  0085A6                     u129:
  8017  0085A6                     u119:
  8018                           ; strings
  8019  0085A6                     	ds	5
  8020                           	psect	const
  8021                           ; strings
  8022  000B4C  6E                 	db	110	;'n'
  8023  000B4D  75 00 00           	db	117	;'u'
  8024  000B50  6C                 	db	108	;'l'
  8025  000B51  6C 00 00           	db	108	;'l'
  8026  000B54  00                 	db	0
  8027                           	psect	mconst
  8028  0085AB                     u149:
  8029  0085AB                     u49:
  8030                           ; strings
  8031  0085AB                     	ds	9
  8032                           	psect	const
  8033                           ; strings
  8034  000B55  57 00 00           	db	87	;'W'
  8035  000B58  61                 	db	97	;'a'
  8036  000B59  74 00 00           	db	116	;'t'
  8037  000B5C  63                 	db	99	;'c'
  8038  000B5D  68 00 00           	db	104	;'h'
  8039  000B60  64                 	db	100	;'d'
  8040  000B61  6F 00 00           	db	111	;'o'
  8041  000B64  67                 	db	103	;'g'
  8042  000B65  00 00 00           	db	0
  8043                           	psect	mconst
  8044  0085B4                     u139:
  8045                           ; strings
  8046  0085B4                     	ds	19
  8047                           	psect	const
  8048                           ; strings
  8049  000B68  44                 	db	68	;'D'
  8050  000B69  69 00 00           	db	105	;'i'
  8051  000B6C  73                 	db	115	;'s'
  8052  000B6D  70 00 00           	db	112	;'p'
  8053  000B70  6C                 	db	108	;'l'
  8054  000B71  61 00 00           	db	97	;'a'
  8055  000B74  79                 	db	121	;'y'
  8056  000B75  20 00 00           	db	32
  8057  000B78  50                 	db	80	;'P'
  8058  000B79  72 00 00           	db	114	;'r'
  8059  000B7C  6F                 	db	111	;'o'
  8060  000B7D  63 00 00           	db	99	;'c'
  8061  000B80  65                 	db	101	;'e'
  8062  000B81  73 00 00           	db	115	;'s'
  8063  000B84  73                 	db	115	;'s'
  8064  000B85  69 00 00           	db	105	;'i'
  8065  000B88  6E                 	db	110	;'n'
  8066  000B89  67 00 00           	db	103	;'g'
  8067  000B8C  00                 	db	0
  8068                           	psect	mconst
  8069  0085C7                     u69:
  8070                           ; strings
  8071  0085C7                     	ds	15
  8072                           	psect	const
  8073                           ; strings
  8074  000B8D  53 00 00           	db	83	;'S'
  8075  000B90  75                 	db	117	;'u'
  8076  000B91  70 00 00           	db	112	;'p'
  8077  000B94  70                 	db	112	;'p'
  8078  000B95  6C 00 00           	db	108	;'l'
  8079  000B98  79                 	db	121	;'y'
  8080  000B99  20 00 00           	db	32
  8081  000B9C  56                 	db	86	;'V'
  8082  000B9D  6F 00 00           	db	111	;'o'
  8083  000BA0  6C                 	db	108	;'l'
  8084  000BA1  74 00 00           	db	116	;'t'
  8085  000BA4  61                 	db	97	;'a'
  8086  000BA5  67 00 00           	db	103	;'g'
  8087  000BA8  65                 	db	101	;'e'
  8088  000BA9  00 00 00           	db	0
  8089                           	psect	mconst
  8090  0085D6                     u39:
  8091                           ; strings
  8092  0085D6                     	ds	7
  8093                           	psect	const
  8094                           ; strings
  8095  000BAC  45                 	db	69	;'E'
  8096  000BAD  45 00 00           	db	69	;'E'
  8097  000BB0  50                 	db	80	;'P'
  8098  000BB1  52 00 00           	db	82	;'R'
  8099  000BB4  4F                 	db	79	;'O'
  8100  000BB5  4D 00 00           	db	77	;'M'
  8101  000BB8  00                 	db	0
  8102                           	psect	mconst
  8103  0085DD                     u29:
  8104                           ; strings
  8105  0085DD                     	ds	4
  8106                           	psect	const
  8107                           ; strings
  8108  000BB9  52 00 00           	db	82	;'R'
  8109  000BBC  41                 	db	65	;'A'
  8110  000BBD  4D 00 00           	db	77	;'M'
  8111  000BC0  00                 	db	0
  8112                           	psect	mconst
  8113  0085E1                     u159:
  8114                           ; strings
  8115  0085E1                     	ds	15
  8116                           	psect	const
  8117                           ; strings
  8118  000BC1  53 00 00           	db	83	;'S'
  8119  000BC4  2F                 	db	47
  8120  000BC5  56 00 00           	db	86	;'V'
  8121  000BC8  20                 	db	32
  8122  000BC9  78 00 00           	db	120	;'x'
  8123  000BCC  2E                 	db	46
  8124  000BCD  30 00 00           	db	48	;'0'
  8125  000BD0  39                 	db	57	;'9'
  8126  000BD1  35 00 00           	db	53	;'5'
  8127  000BD4  58                 	db	88	;'X'
  8128  000BD5  43 00 00           	db	67	;'C'
  8129  000BD8  2E                 	db	46
  8130  000BD9  41 00 00           	db	65	;'A'
  8131  000BDC  41                 	db	65	;'A'
  8132  000BDD  00 00 00           	db	0
  8133                           	psect	mconst
  8134  0085F0                     u199:
  8135                           ; strings
  8136  0085F0                     	ds	2
  8137                           	psect	const
  8138                           ; strings
  8139  000BE0  20                 	db	32
  8140  000BE1  00 00 00           	db	0
  8141                           	psect	nearbss,class=NEARXDATA,space=1,reloc=2,p
                                 ad=2
  8142                           	psect	nearbss
  8143  000D56                     align 2
  8144  000D56                     F9715:
  8145  000D56                     	ds	2
  8146  000D58                     align 2
  8147  000D58                     F9737:
  8148  000D58                     	ds	2
  8149  000D5A                     align 2
  8150  000D5A                     F9751:
  8151  000D5A                     	ds	2
  8152  000D5C                     align 2
  8153  000D5C                     F9773:
  8154  000D5C                     	ds	2
  8155  000D5E                     align 2
  8156  000D5E                     F9783:
  8157  000D5E                     	ds	2
  8158  000000                     _AD1CHS0	equ	808
  8159  000000                     _AD1CHS0bits	equ	808
  8160  000000                     _AD1CHS123	equ	806
  8161  000000                     _AD1CHS123bits	equ	806
  8162  000000                     _AD1CON1	equ	800
  8163  000000                     _AD1CON1bits	equ	800
  8164  000000                     _AD1CON2	equ	802
  8165  000000                     _AD1CON2bits	equ	802
  8166  000000                     _AD1CON3	equ	804
  8167  000000                     _AD1CON3bits	equ	804
  8168  000000                     _AD1CON4	equ	818
  8169  000000                     _AD1CON4bits	equ	818
  8170  000000                     _AD1CSSH	equ	814
  8171  000000                     _AD1CSSHbits	equ	814
  8172  000000                     _AD1CSSL	equ	816
  8173  000000                     _AD1PCFGH	equ	810
  8174  000000                     _AD1PCFGL	equ	812
  8175  000000                     _AD2CHS0	equ	872
  8176  000000                     _AD2CHS0bits	equ	872
  8177  000000                     _AD2CHS123	equ	870
  8178  000000                     _AD2CHS123bits	equ	870
  8179  000000                     _AD2CON1	equ	864
  8180  000000                     _AD2CON1bits	equ	864
  8181  000000                     _AD2CON2	equ	866
  8182  000000                     _AD2CON2bits	equ	866
  8183  000000                     _AD2CON3	equ	868
  8184  000000                     _AD2CON3bits	equ	868
  8185  000000                     _AD2CON4	equ	882
  8186  000000                     _AD2CON4bits	equ	882
  8187  000000                     _AD2CSSL	equ	880
  8188  000000                     _AD2PCFG	equ	876
  8189  000000                     _ADC1BUF0	equ	768
  8190  000000                     _ADC2BUF0	equ	832
  8191  000000                     _C1BUFPNT1	equ	1056
  8192  000000                     _C1BUFPNT1bits	equ	1056
  8193  000000                     _C1BUFPNT2	equ	1058
  8194  000000                     _C1BUFPNT2bits	equ	1058
  8195  000000                     _C1BUFPNT3	equ	1060
  8196  000000                     _C1BUFPNT3bits	equ	1060
  8197  000000                     _C1BUFPNT4	equ	1062
  8198  000000                     _C1BUFPNT4bits	equ	1062
  8199  000000                     _C1CFG1	equ	1040
  8200  000000                     _C1CFG1bits	equ	1040
  8201  000000                     _C1CFG2	equ	1042
  8202  000000                     _C1CFG2bits	equ	1042
  8203  000000                     _C1CTRL1	equ	1024
  8204  000000                     _C1CTRL1bits	equ	1024
  8205  000000                     _C1CTRL2	equ	1026
  8206  000000                     _C1CTRL2bits	equ	1026
  8207  000000                     _C1EC	equ	1038
  8208  000000                     _C1ECbits	equ	1038
  8209  000000                     _C1FCTRL	equ	1030
  8210  000000                     _C1FCTRLbits	equ	1030
  8211  000000                     _C1FEN1	equ	1044
  8212  000000                     _C1FIFO	equ	1032
  8213  000000                     _C1FIFObits	equ	1032
  8214  000000                     _C1FMSKSEL1	equ	1048
  8215  000000                     _C1FMSKSEL1bits	equ	1048
  8216  000000                     _C1FMSKSEL2	equ	1050
  8217  000000                     _C1FMSKSEL2bits	equ	1050
  8218  000000                     _C1INTE	equ	1036
  8219  000000                     _C1INTEbits	equ	1036
  8220  000000                     _C1INTF	equ	1034
  8221  000000                     _C1INTFbits	equ	1034
  8222  000000                     _C1RXF0EID	equ	1090
  8223  000000                     _C1RXF0SID	equ	1088
  8224  000000                     _C1RXF0SIDbits	equ	1088
  8225  000000                     _C1RXF10EID	equ	1130
  8226  000000                     _C1RXF10EIDbits	equ	1130
  8227  000000                     _C1RXF10SID	equ	1128
  8228  000000                     _C1RXF10SIDbits	equ	1128
  8229  000000                     _C1RXF11EID	equ	1134
  8230  000000                     _C1RXF11EIDbits	equ	1134
  8231  000000                     _C1RXF11SID	equ	1132
  8232  000000                     _C1RXF11SIDbits	equ	1132
  8233  000000                     _C1RXF12EID	equ	1138
  8234  000000                     _C1RXF12EIDbits	equ	1138
  8235  000000                     _C1RXF12SID	equ	1136
  8236  000000                     _C1RXF12SIDbits	equ	1136
  8237  000000                     _C1RXF13EID	equ	1142
  8238  000000                     _C1RXF13EIDbits	equ	1142
  8239  000000                     _C1RXF13SID	equ	1140
  8240  000000                     _C1RXF13SIDbits	equ	1140
  8241  000000                     _C1RXF14EID	equ	1146
  8242  000000                     _C1RXF14EIDbits	equ	1146
  8243  000000                     _C1RXF14SID	equ	1144
  8244  000000                     _C1RXF14SIDbits	equ	1144
  8245  000000                     _C1RXF15EID	equ	1150
  8246  000000                     _C1RXF15EIDbits	equ	1150
  8247  000000                     _C1RXF15SID	equ	1148
  8248  000000                     _C1RXF15SIDbits	equ	1148
  8249  000000                     _C1RXF1EID	equ	1094
  8250  000000                     _C1RXF1SID	equ	1092
  8251  000000                     _C1RXF1SIDbits	equ	1092
  8252  000000                     _C1RXF2EID	equ	1098
  8253  000000                     _C1RXF2SID	equ	1096
  8254  000000                     _C1RXF2SIDbits	equ	1096
  8255  000000                     _C1RXF3EID	equ	1102
  8256  000000                     _C1RXF3SID	equ	1100
  8257  000000                     _C1RXF3SIDbits	equ	1100
  8258  000000                     _C1RXF4EID	equ	1106
  8259  000000                     _C1RXF4SID	equ	1104
  8260  000000                     _C1RXF4SIDbits	equ	1104
  8261  000000                     _C1RXF5EID	equ	1110
  8262  000000                     _C1RXF5SID	equ	1108
  8263  000000                     _C1RXF5SIDbits	equ	1108
  8264  000000                     _C1RXF6EID	equ	1114
  8265  000000                     _C1RXF6SID	equ	1112
  8266  000000                     _C1RXF6SIDbits	equ	1112
  8267  000000                     _C1RXF7EID	equ	1118
  8268  000000                     _C1RXF7SID	equ	1116
  8269  000000                     _C1RXF7SIDbits	equ	1116
  8270  000000                     _C1RXF8EID	equ	1122
  8271  000000                     _C1RXF8SID	equ	1120
  8272  000000                     _C1RXF8SIDbits	equ	1120
  8273  000000                     _C1RXF9EID	equ	1126
  8274  000000                     _C1RXF9SID	equ	1124
  8275  000000                     _C1RXF9SIDbits	equ	1124
  8276  000000                     _C1RXFUL1	equ	1056
  8277  000000                     _C1RXFUL2	equ	1058
  8278  000000                     _C1RXM0EID	equ	1074
  8279  000000                     _C1RXM0SID	equ	1072
  8280  000000                     _C1RXM0SIDbits	equ	1072
  8281  000000                     _C1RXM1EID	equ	1078
  8282  000000                     _C1RXM2EID	equ	1082
  8283+ 000000                     _C1RXM2SID	equ	1080
  8284+ 000000                     _C1RXM2SIDbits	equ	1080
  8285+ 000000                     _C1RXOVF1	equ	1064
  8286+ 000000                     _C1RXOVF2	equ	1066
  8287+ 000000                     _C1TR01CON	equ	1072
  8288+ 000000                     _C1TR01CONbits	equ	1072
  8289+ 000000                     _C1TR23CON	equ	1074
  8290+ 000000                     _C1TR23CONbits	equ	1074
  8291+ 000000                     _C1TR45CON	equ	1076
  8292+ 000000                     _C1TR45CONbits	equ	1076
  8293+ 000000                     _C1TR67CON	equ	1078
  8294+ 000000                     _C1TR67CONbits	equ	1078
  8295+ 000000                     _C1VEC	equ	1028
  8296+ 000000                     _C1VECbits	equ	1028
  8297+ 000000                     _C2BUFPNT1	equ	1312
  8298+ 000000                     _C2BUFPNT1bits	equ	1312
  8299+ 000000                     _C2BUFPNT2	equ	1314
  8300+ 000000                     _C2BUFPNT2bits	equ	1314
  8301+ 000000                     _C2BUFPNT3	equ	1316
  8302+ 000000                     _C2BUFPNT3bits	equ	1316
  8303+ 000000                     _C2BUFPNT4	equ	1318
  8304+ 000000                     _C2BUFPNT4bits	equ	1318
  8305+ 000000                     _C2CFG1	equ	1296
  8306+ 000000                     _C2CFG1bits	equ	1296
  8307+ 000000                     _C2CFG2	equ	1298
  8308+ 000000                     _C2CFG2bits	equ	1298
  8309+ 000000                     _C2CTRL1	equ	1280
  8310+ 000000                     _C2CTRL1bits	equ	1280
  8311+ 000000                     _C2CTRL2	equ	1282
  8312+ 000000                     _C2CTRL2bits	equ	1282
  8313+ 000000                     _C2EC	equ	1294
  8314+ 000000                     _C2ECbits	equ	1294
  8315+ 000000                     _C2FCTRL	equ	1286
  8316+ 000000                     _C2FCTRLbits	equ	1286
  8317+ 000000                     _C2FEN1	equ	1300
  8318+ 000000                     _C2FIFO	equ	1288
  8319+ 000000                     _C2FIFObits	equ	1288
  8320+ 000000                     _C2FMSKSEL1	equ	1304
  8321+ 000000                     _C2FMSKSEL1bits	equ	1304
  8322+ 000000                     _C2FMSKSEL2	equ	1306
  8323+ 000000                     _C2FMSKSEL2bits	equ	1306
  8324+ 000000                     _C2INTE	equ	1292
  8325+ 000000                     _C2INTEbits	equ	1292
  8326+ 000000                     _C2INTF	equ	1290
  8327+ 000000                     _C2INTFbits	equ	1290
  8328+ 000000                     _C2RXF0EID	equ	1346
  8329+ 000000                     _C2RXF0SID	equ	1344
  8330+ 000000                     _C2RXF0SIDbits	equ	1344
  8331+ 000000                     _C2RXF10EID	equ	1386
  8332+ 000000                     _C2RXF10EIDbits	equ	1386
  8333+ 000000                     _C2RXF10SID	equ	1384
  8334+ 000000                     _C2RXF10SIDbits	equ	1384
  8335+ 000000                     _C2RXF11EID	equ	1390
  8336+ 000000                     _C2RXF11EIDbits	equ	1390
  8337+ 000000                     _C2RXF11SID	equ	1388
  8338+ 000000                     _C2RXF11SIDbits	equ	1388
  8339+ 000000                     _C2RXF12EID	equ	1394
  8340+ 000000                     _C2RXF12EIDbits	equ	1394
  8341+ 000000                     _C2RXF12SID	equ	1392
  8342+ 000000                     _C2RXF12SIDbits	equ	1392
  8343+ 000000                     _C2RXF13EID	equ	1398
  8344+ 000000                     _C2RXF13EIDbits	equ	1398
  8345+ 000000                     _C2RXF13SID	equ	1396
  8346+ 000000                     _C2RXF13SIDbits	equ	1396
  8347+ 000000                     _C2RXF14EID	equ	1402
  8348+ 000000                     _C2RXF14EIDbits	equ	1402
  8349+ 000000                     _C2RXF14SID	equ	1400
  8350+ 000000                     _C2RXF14SIDbits	equ	1400
  8351+ 000000                     _C2RXF15EID	equ	1406
  8352+ 000000                     _C2RXF15EIDbits	equ	1406
  8353+ 000000                     _C2RXF15SID	equ	1404
  8354+ 000000                     _C2RXF15SIDbits	equ	1404
  8355+ 000000                     _C2RXF1EID	equ	1350
  8356+ 000000                     _C2RXF1SID	equ	1348
  8357+ 000000                     _C2RXF1SIDbits	equ	1348
  8358+ 000000                     _C2RXF2EID	equ	1354
  8359+ 000000                     _C2RXF2SID	equ	1352
  8360+ 000000                     _C2RXF2SIDbits	equ	1352
  8361+ 000000                     _C2RXF3EID	equ	1358
  8362+ 000000                     _C2RXF3SID	equ	1356
  8363+ 000000                     _C2RXF3SIDbits	equ	1356
  8364+ 000000                     _C2RXF4EID	equ	1362
  8365+ 000000                     _C2RXF4SID	equ	1360
  8366+ 000000                     _C2RXF4SIDbits	equ	1360
  8367+ 000000                     _C2RXF5EID	equ	1366
  8368+ 000000                     _C2RXF5SID	equ	1364
  8369+ 000000                     _C2RXF5SIDbits	equ	1364
  8370+ 000000                     _C2RXF6EID	equ	1370
  8371+ 000000                     _C2RXF6SID	equ	1368
  8372+ 000000                     _C2RXF6SIDbits	equ	1368
  8373+ 000000                     _C2RXF7EID	equ	1374
  8374+ 000000                     _C2RXF7SID	equ	1372
  8375+ 000000                     _C2RXF7SIDbits	equ	1372
  8376+ 000000                     _C2RXF8EID	equ	1378
  8377+ 000000                     _C2RXF8SID	equ	1376
  8378+ 000000                     _C2RXF8SIDbits	equ	1376
  8379+ 000000                     _C2RXF9EID	equ	1382
  8380+ 000000                     _C2RXF9SID	equ	1380
  8381+ 000000                     _C2RXF9SIDbits	equ	1380
  8382+ 000000                     _C2RXFUL1	equ	1312
  8383+ 000000                     _C2RXFUL2	equ	1314
  8384+ 000000                     _C2RXM0EID	equ	1330
  8385+ 000000                     _C2RXM0SID	equ	1328
  8386+ 000000                     _C2RXM0SIDbits	equ	1328
  8387+ 000000                     _C2RXM1EID	equ	1334
  8388+ 000000                     _C2RXM1SID	equ	1332
  8389+ 000000                     _C2RXM1SIDbits	equ	1332
  8390+ 000000                     _C2RXM2EID	equ	1338
  8391+ 000000                     _C2RXM2SID	equ	1336
  8392+ 000000                     _C2RXM2SIDbits	equ	1336
  8393+ 000000                     _C2RXOVF1	equ	1320
  8394+ 000000                     _C2RXOVF2	equ	1322
  8395+ 000000                     _C2TR01CON	equ	1328
  8396+ 000000                     _C2TR01CONbits	equ	1328
  8397+ 000000                     _C2TR23CON	equ	1330
  8398+ 000000                     _C2TR23CONbits	equ	1330
  8399+ 000000                     _C2TR45CON	equ	1332
  8400+ 000000                     _C2TR45CONbits	equ	1332
  8401+ 000000                     _C2TR67CON	equ	1334
  8402+ 000000                     _C2TR67CONbits	equ	1334
  8403+ 000000                     _C2VEC	equ	1284
  8404+ 000000                     _C2VECbits	equ	1284
  8405+ 000000                     _CLKDIV	equ	1860
  8406+ 000000                     _CLKDIVbits	equ	1860
  8407+ 000000                     _CNEN1	equ	96
  8408+ 000000                     _CNEN1bits	equ	96
  8409+ 000000                     _CNEN2	equ	98
  8410+ 000000                     _CNEN2bits	equ	98
  8411+ 000000                     _CNPU1	equ	104
  8412+ 000000                     _CNPU1bits	equ	104
  8413+ 000000                     _CNPU2	equ	106
  8414+ 000000                     _CNPU2bits	equ	106
  8415+ 000000                     _CORCON	equ	68
  8416+ 000000                     _CORCONbits	equ	68
  8417+ 000D60                     align 2
  8418+ 000D60                     _CycleButtonHeldAtExpirationCoun:
  8419+ 000D60                     	ds	2
  8420+ 000D62                     align 2
  8421+ 000D62                     _CycleButtonHeldCount:
  8422+ 000D62                     	ds	2
  8423+ 000D64                     align 2
  8424+ 000D64                     _CycleSwitchHeldAtExpirationCoun:
  8425+ 000D64                     	ds	2
  8426+ 000D66                     align 2
  8427+ 000D66                     _Cycles:
  8428+ 000D66                     	ds	2
  8429+ 000000                     _DISICNT	equ	82
  8430+ 000000                     _DMA0CNT	equ	906
  8431+ 000000                     _DMA0CON	equ	896
  8432+ 000000                     _DMA0CONbits	equ	896
  8433+ 000000                     _DMA0PAD	equ	904
  8434+ 000000                     _DMA0REQ	equ	898
  8435+ 000000                     _DMA0REQbits	equ	898
  8436+ 000000                     _DMA0STA	equ	900
  8437+ 000000                     _DMA0STB	equ	902
  8438+ 000000                     _DMA1CNT	equ	918
  8439+ 000000                     _DMA1CON	equ	908
  8440+ 000000                     _DMA1CONbits	equ	908
  8441+ 000000                     _DMA1PAD	equ	916
  8442+ 000000                     _DMA1REQ	equ	910
  8443+ 000000                     _DMA1REQbits	equ	910
  8444+ 000000                     _DMA1STA	equ	912
  8445+ 000000                     _DMA1STB	equ	914
  8446+ 000000                     _DMA2CNT	equ	930
  8447+ 000000                     _DMA2CON	equ	920
  8448+ 000000                     _DMA2CONbits	equ	920
  8449+ 000000                     _DMA2PAD	equ	928
  8450+ 000000                     _DMA2REQ	equ	922
  8451+ 000000                     _DMA2REQbits	equ	922
  8452+ 000000                     _DMA2STA	equ	924
  8453+ 000000                     _DMA2STB	equ	926
  8454+ 000000                     _DMA3CNT	equ	942
  8455+ 000000                     _DMA3CON	equ	932
  8456+ 000000                     _DMA3CONbits	equ	932
  8457+ 000000                     _DMA3PAD	equ	940
  8458+ 000000                     _DMA3REQ	equ	934
  8459+ 000000                     _DMA3REQbits	equ	934
  8460+ 000000                     _DMA3STA	equ	936
  8461+ 000000                     _DMA3STB	equ	938
  8462+ 000000                     _DMA4CNT	equ	954
  8463+ 000000                     _DMA4CON	equ	944
  8464+ 000000                     _DMA4CONbits	equ	944
  8465+ 000000                     _DMA4PAD	equ	952
  8466+ 000000                     _DMA4REQ	equ	946
  8467+ 000000                     _DMA4REQbits	equ	946
  8468+ 000000                     _DMA4STA	equ	948
  8469+ 000000                     _DMA4STB	equ	950
  8470+ 000000                     _DMA5CNT	equ	966
  8471+ 000000                     _DMA5CON	equ	956
  8472+ 000000                     _DMA5CONbits	equ	956
  8473+ 000000                     _DMA5PAD	equ	964
  8474+ 000000                     _DMA5REQ	equ	958
  8475+ 000000                     _DMA5REQbits	equ	958
  8476+ 000000                     _DMA5STA	equ	960
  8477+ 000000                     _DMA5STB	equ	962
  8478+ 000000                     _DMA6CNT	equ	978
  8479+ 000000                     _DMA6CON	equ	968
  8480+ 000000                     _DMA6CONbits	equ	968
  8481+ 000000                     _DMA6PAD	equ	976
  8482+ 000000                     _DMA6REQ	equ	970
  8483+ 000000                     _DMA6REQbits	equ	970
  8484+ 000000                     _DMA6STA	equ	972
  8485+ 000000                     _DMA6STB	equ	974
  8486+ 000000                     _DMA7CNT	equ	990
  8487+ 000000                     _DMA7CON	equ	980
  8488+ 000000                     _DMA7CONbits	equ	980
  8489+ 000000                     _DMA7PAD	equ	988
  8490+ 000000                     _DMA7REQ	equ	982
  8491+ 000000                     _DMA7REQbits	equ	982
  8492+ 000000                     _DMA7STA	equ	984
  8493+ 000000                     _DMA7STB	equ	986
  8494+ 000000                     _DMACS0	equ	992
  8495+ 000000                     _DMACS0bits	equ	992
  8496+ 000000                     _DMACS1	equ	994
  8497+ 000000                     _DMACS1bits	equ	994
  8498+ 000000                     _DSADR	equ	996
  8499+ 000000                     _DSADRbits	equ	996
  8500+ 000D68                     align 2
  8501+ 000D68                     _DeviceConnectReported:
  8502+ 000D68                     	ds	2
  8503+ 000D6A                     align 2
  8504+ 000D6A                     _DeviceDisconnectReported:
  8505+ 000D6A                     	ds	2
  8506+ 000D6C                     align 2
  8507+ 000D6C                     _DownButtonHeldCount:
  8508+ 000D6C                     	ds	2
  8509+ 000D6E                     align 2
  8510+ 000D6E                     _FlashRFCycleCount:
  8511+ 000D6E                     	ds	2
  8512+ 000000                     _I2C1ADD	equ	522
  8513+ 000000                     _I2C1ADDbits	equ	522
  8514+ 000000                     _I2C1BRG	equ	516
  8515+ 000000                     _I2C1CON	equ	518
  8516+ 000000                     _I2C1CONbits	equ	518
  8517+ 000000                     _I2C1MSK	equ	524
  8518+ 000000                     _I2C1MSKbits	equ	524
  8519+ 000000                     _I2C1RCV	equ	512
  8520+ 000000                     _I2C1STAT	equ	520
  8521+ 000000                     _I2C1STATbits	equ	520
  8522+ 000000                     _I2C1TRN	equ	514
  8523+ 000000                     _I2C2ADD	equ	538
  8524+ 000000                     _I2C2ADDbits	equ	538
  8525+ 000000                     _I2C2BRG	equ	532
  8526+ 000000                     _I2C2CON	equ	534
  8527+ 000000                     _I2C2CONbits	equ	534
  8528+ 000000                     _I2C2MSK	equ	540
  8529+ 000000                     _I2C2MSKbits	equ	540
  8530+ 000000                     _I2C2RCV	equ	528
  8531+ 000000                     _I2C2STAT	equ	536
  8532+ 000000                     _I2C2STATbits	equ	536
  8533+ 000000                     _I2C2TRN	equ	530
  8534+ 000000                     _IC1BUF	equ	320
  8535+ 000000                     _IC1CON	equ	322
  8536+ 000000                     _IC1CONbits	equ	322
  8537+ 000000                     _IC2BUF	equ	324
  8538+ 000000                     _IC2CON	equ	326
  8539+ 000000                     _IC2CONbits	equ	326
  8540+ 000000                     _IC3BUF	equ	328
  8541+ 000000                     _IC3CON	equ	330
  8542+ 000000                     _IC3CONbits	equ	330
  8543+ 000000                     _IC4BUF	equ	332
  8544+ 000000                     _IC4CON	equ	334
  8545+ 000000                     _IC4CONbits	equ	334
  8546+ 000000                     _IC5BUF	equ	336
  8547+ 000000                     _IC5CON	equ	338
  8548+ 000000                     _IC5CONbits	equ	338
  8549+ 000000                     _IC6BUF	equ	340
  8550+ 000000                     _IC6CON	equ	342
  8551+ 000000                     _IC6CONbits	equ	342
  8552+ 000000                     _IC7BUF	equ	344
  8553+ 000000                     _IC7CON	equ	346
  8554+ 000000                     _IC7CONbits	equ	346
  8555+ 000000                     _IC8BUF	equ	348
  8556+ 000000                     _IC8CON	equ	350
  8557+ 000000                     _IC8CONbits	equ	350
  8558+ 000000                     _IEC0	equ	148
  8559+ 000000                     _IEC0bits	equ	148
  8560+ 000000                     _IEC1	equ	150
  8561+ 000000                     _IEC1bits	equ	150
  8562+ 000000                     _IEC2	equ	152
  8563+ 000000                     _IEC2bits	equ	152
  8564+ 000000                     _IEC3	equ	154
  8565+ 000000                     _IEC3bits	equ	154
  8566+ 000000                     _IEC4	equ	156
  8567+ 000000                     _IEC4bits	equ	156
  8568+ 000000                     _IFS0	equ	132
  8569+ 000000                     _IFS0bits	equ	132
  8570+ 000000                     _IFS1	equ	134
  8571+ 000000                     _IFS1bits	equ	134
  8572+ 000000                     _IFS2	equ	136
  8573+ 000000                     _IFS2bits	equ	136
  8574+ 000000                     _IFS3	equ	138
  8575+ 000000                     _IFS3bits	equ	138
  8576+ 000000                     _IFS4	equ	140
  8577+ 000000                     _IFS4bits	equ	140
  8578+ 000000                     _INTCON1	equ	128
  8579+ 000000                     _INTCON1bits	equ	128
  8580+ 000000                     _INTCON2	equ	130
  8581+ 000000                     _INTCON2bits	equ	130
  8582+ 000000                     _INTREG	equ	224
  8583+ 000000                     _INTREGbits	equ	224
  8584+ 000000                     _IPC0	equ	164
  8585+ 000000                     _IPC0bits	equ	164
  8586+ 000000                     _IPC1	equ	166
  8587+ 000000                     _IPC10	equ	184
  8588+ 000000                     _IPC10bits	equ	184
  8589+ 000000                     _IPC11	equ	186
  8590+ 000000                     _IPC11bits	equ	186
  8591+ 000000                     _IPC12	equ	188
  8592+ 000000                     _IPC12bits	equ	188
  8593+ 000000                     _IPC13	equ	190
  8594+ 000000                     _IPC13bits	equ	190
  8595+ 000000                     _IPC14	equ	192
  8596+ 000000                     _IPC15	equ	194
  8597+ 000000                     _IPC15bits	equ	194
  8598+ 000000                     _IPC16	equ	196
  8599+ 000000                     _IPC16bits	equ	196
  8600+ 000000                     _IPC17	equ	198
  8601+ 000000                     _IPC17bits	equ	198
  8602+ 000000                     _IPC1bits	equ	166
  8603+ 000000                     _IPC2	equ	168
  8604+ 000000                     _IPC2bits	equ	168
  8605+ 000000                     _IPC3	equ	170
  8606+ 000000                     _IPC3bits	equ	170
  8607+ 000000                     _IPC4	equ	172
  8608+ 000000                     _IPC4bits	equ	172
  8609+ 000000                     _IPC5	equ	174
  8610+ 000000                     _IPC5bits	equ	174
  8611+ 000000                     _IPC6	equ	176
  8612+ 000000                     _IPC6bits	equ	176
  8613+ 000000                     _IPC7	equ	178
  8614+ 000000                     _IPC7bits	equ	178
  8615+ 000000                     _IPC8	equ	180
  8616+ 000000                     _IPC8bits	equ	180
  8617+ 000000                     _IPC9	equ	182
  8618+ 000000                     _IPC9bits	equ	182
  8619+ 000000                     _LATA	equ	708
  8620+ 000000                     _LATAbits	equ	708
  8621+ 000000                     _LATB	equ	714
  8622+ 000000                     _LATBbits	equ	714
  8623+ 000000                     _LATC	equ	720
  8624+ 000000                     _LATCbits	equ	720
  8625+ 000000                     _LATD	equ	726
  8626+ 000000                     _LATDbits	equ	726
  8627+ 000000                     _LATE	equ	732
  8628+ 000000                     _LATEbits	equ	732
  8629+ 000000                     _LATF	equ	738
  8630+ 000000                     _LATFbits	equ	738
  8631+ 000000                     _LATG	equ	744
  8632+ 000000                     _LATGbits	equ	744
  8633+ 000000                     _NVMCON	equ	1888
  8634+ 000000                     _NVMCONbits	equ	1888
  8635+ 000000                     _NVMKEY	equ	1894
  8636+ 000000                     _OC1CON	equ	388
  8637+ 000000                     _OC1CONbits	equ	388
  8638+ 000000                     _OC1R	equ	386
  8639+ 000000                     _OC1RS	equ	384
  8640+ 000000                     _OC2CON	equ	394
  8641+ 000000                     _OC2CONbits	equ	394
  8642+ 000000                     _OC2R	equ	392
  8643+ 000000                     _OC2RS	equ	390
  8644+ 000000                     _OC3CON	equ	400
  8645+ 000000                     _OC3CONbits	equ	400
  8646+ 000000                     _OC3R	equ	398
  8647+ 000000                     _OC3RS	equ	396
  8648+ 000000                     _OC4CON	equ	406
  8649+ 000000                     _OC4CONbits	equ	406
  8650+ 000000                     _OC4R	equ	404
  8651+ 000000                     _OC4RS	equ	402
  8652+ 000000                     _OC5CON	equ	412
  8653+ 000000                     _OC5CONbits	equ	412
  8654+ 000000                     _OC5R	equ	410
  8655+ 000000                     _OC5RS	equ	408
  8656+ 000000                     _OC6CON	equ	418
  8657+ 000000                     _OC6CONbits	equ	418
  8658+ 000000                     _OC6R	equ	416
  8659+ 000000                     _OC6RS	equ	414
  8660+ 000000                     _OC7CON	equ	424
  8661+ 000000                     _OC7CONbits	equ	424
  8662+ 000000                     _OC7R	equ	422
  8663+ 000000                     _OC7RS	equ	420
  8664+ 000000                     _OC8CON	equ	430
  8665+ 000000                     _OC8CONbits	equ	430
  8666+ 000000                     _OC8R	equ	428
  8667+ 000000                     _OC8RS	equ	426
  8668+ 000000                     _ODCA	equ	1728
  8669+ 000000                     _ODCAbits	equ	1728
  8670+ 000000                     _ODCD	equ	1746
  8671+ 000000                     _ODCDbits	equ	1746
  8672+ 000000                     _ODCF	equ	1758
  8673+ 000000                     _ODCFbits	equ	1758
  8674+ 000000                     _ODCG	equ	1764
  8675+ 000000                     _ODCGbits	equ	1764
  8676+ 000000                     _OSCCON	equ	1858
  8677+ 000000                     _OSCCONbits	equ	1858
  8678+ 000000                     _OSCTRIM	equ	1864
  8679+ 000000                     _OSCTRIMbits	equ	1864
  8680+ 000000                     _PCH	equ	48
  8681+ 000000                     _PCL	equ	46
  8682+ 000000                     _PLLFBD	equ	1862
  8683+ 000000                     _PLLFBDbits	equ	1862
  8684+ 000000                     _PMD1	equ	1904
  8685+ 000000                     _PMD2	equ	1906
  8686+ 000000                     _PMD3	equ	1908
  8687+ 000000                     _PORTA	equ	706
  8688+ 000000                     _PORTAbits	equ	706
  8689+ 000000                     _PORTB	equ	712
  8690+ 000000                     _PORTBbits	equ	712
  8691+ 000000                     _PORTC	equ	718
  8692+ 000000                     _PORTCbits	equ	718
  8693+ 000000                     _PORTD	equ	724
  8694+ 000000                     _PORTDbits	equ	724
  8695+ 000000                     _PORTE	equ	730
  8696+ 000000                     _PORTEbits	equ	730
  8697+ 000000                     _PORTF	equ	736
  8698+ 000000                     _PORTFbits	equ	736
  8699+ 000000                     _PORTG	equ	742
  8700+ 000000                     _PORTGbits	equ	742
  8701+ 000000                     _PR1	equ	258
  8702+ 000000                     _PR2	equ	268
  8703+ 000000                     _PR3	equ	270
  8704+ 000000                     _PR4	equ	282
  8705+ 000000                     _PR5	equ	284
  8706+ 000000                     _PR6	equ	296
  8707+ 000000                     _PR7	equ	298
  8708+ 000000                     _PR8	equ	310
  8709+ 000000                     _PR9	equ	312
  8710+ 000000                     _PSVPAG	equ	52
  8711+ 000D70                     align 2
  8712+ 000D70                     _PriorFlashRFCycleCount:
  8713+ 000D70                     	ds	2
  8714+ 000000                     _RCON	equ	1856
  8715+ 000000                     _RCONbits	equ	1856
  8716+ 000000                     _RCOUNT	equ	54
  8717+ 000D72                     align 2
  8718+ 000D72                     _RFCycleAdjusted:
  8719+ 000D72                     	ds	2
  8720+ 000D74                     align 2
  8721+ 000D74                     _RFCycleEraseOnly:
  8722+ 000D74                     	ds	2
  8723+ 000D76                     align 2
  8724+ 000D76                     _RFCycleSet:
  8725+ 000D76                     	ds	2
  8726+ 000D78                     align 2
  8727+ 000D78                     _ResetButtonHeldCount:
  8728+ 000D78                     	ds	2
  8729+ 000000                     _SPI1BUF	equ	584
  8730+ 000000                     _SPI1CON1	equ	578
  8731+ 000000                     _SPI1CON1bits	equ	578
  8732+ 000000                     _SPI1CON2	equ	580
  8733+ 000000                     _SPI1CON2bits	equ	580
  8734+ 000000                     _SPI1STAT	equ	576
  8735+ 000000                     _SPI1STATbits	equ	576
  8736+ 000000                     _SPI2BUF	equ	616
  8737+ 000000                     _SPI2CON1	equ	610
  8738+ 000000                     _SPI2CON1bits	equ	610
  8739+ 000000                     _SPI2CON2	equ	612
  8740+ 000000                     _SPI2CON2bits	equ	612
  8741+ 000000                     _SPI2STAT	equ	608
  8742+ 000000                     _SPI2STATbits	equ	608
  8743+ 000000                     _SPLIM	equ	32
  8744+ 000000                     _SR	equ	66
  8745+ 000000                     _SRbits	equ	66
  8746+ 000000                     _T1CON	equ	260
  8747+ 000000                     _T1CONbits	equ	260
  8748+ 000000                     _T2CON	equ	272
  8749+ 000000                     _T2CONbits	equ	272
  8750+ 000000                     _T3CON	equ	274
  8751+ 000000                     _T3CONbits	equ	274
  8752+ 000000                     _T4CON	equ	286
  8753+ 000000                     _T4CONbits	equ	286
  8754+ 000000                     _T5CON	equ	288
  8755+ 000000                     _T5CONbits	equ	288
  8756+ 000000                     _T6CON	equ	300
  8757+ 000000                     _T6CONbits	equ	300
  8758+ 000000                     _T7CON	equ	302
  8759+ 000000                     _T7CONbits	equ	302
  8760+ 000000                     _T8CON	equ	314
  8761+ 000000                     _T8CONbits	equ	314
  8762+ 000000                     _T9CON	equ	316
  8763+ 000000                     _T9CONbits	equ	316
  8764+ 000000                     _TBLPAG	equ	50
  8765+ 000000                     _TMR1	equ	256
  8766+ 000000                     _TMR2	equ	262
  8767+ 000000                     _TMR3	equ	266
  8768+ 000000                     _TMR3HLD	equ	264
  8769+ 000000                     _TMR4	equ	276
  8770+ 000000                     _TMR5	equ	280
  8771+ 000000                     _TMR5HLD	equ	278
  8772+ 000000                     _TMR6	equ	290
  8773+ 000000                     _TMR7	equ	294
  8774+ 000000                     _TMR7HLD	equ	292
  8775+ 000000                     _TMR8	equ	304
  8776+ 000000                     _TMR9	equ	308
  8777+ 000000                     _TMR9HLD	equ	306
  8778+ 000000                     _TRISA	equ	704
  8779+ 000000                     _TRISAbits	equ	704
  8780+ 000000                     _TRISB	equ	710
  8781+ 000000                     _TRISBbits	equ	710
  8782+ 000000                     _TRISC	equ	716
  8783+ 000000                     _TRISCbits	equ	716
  8784+ 000000                     _TRISD	equ	722
  8785+ 000000                     _TRISDbits	equ	722
  8786+ 000000                     _TRISE	equ	728
  8787+ 000000                     _TRISEbits	equ	728
  8788+ 000000                     _TRISF	equ	734
  8789+ 000000                     _TRISFbits	equ	734
  8790+ 000000                     _TRISG	equ	740
  8791+ 000000                     _TRISGbits	equ	740
  8792+ 000000                     _U1BRG	equ	552
  8793+ 000000                     _U1MODE	equ	544
  8794+ 000000                     _U1MODEbits	equ	544
  8795+ 000000                     _U1RXREG	equ	550
  8796+ 000000                     _U1STA	equ	546
  8797+ 000000                     _U1STAbits	equ	546
  8798+ 000000                     _U1TXREG	equ	548
  8799+ 000000                     _U2BRG	equ	568
  8800+ 000000                     _U2MODE	equ	560
  8801+ 000000                     _U2MODEbits	equ	560
  8802+ 000000                     _U2RXREG	equ	566
  8803+ 000000                     _U2STA	equ	562
  8804+ 000000                     _U2STAbits	equ	562
  8805+ 000000                     _U2TXREG	equ	564
  8806+ 000D7A                     align 2
  8807+ 000D7A                     _UpButtonHeldCount:
  8808+ 000D7A                     	ds	2
  8809+ 000000                     _WREG0	equ	0
  8810+ 000000                     _WREG1	equ	2
  8811+ 000000                     _WREG10	equ	20
  8812+ 000000                     _WREG11	equ	22
  8813+ 000000                     _WREG12	equ	24
  8814+ 000000                     _WREG13	equ	26
  8815+ 000000                     _WREG14	equ	28
  8816+ 000000                     _WREG15	equ	30
  8817+ 000000                     _WREG2	equ	4
  8818+ 000000                     _WREG3	equ	6
  8819+ 000000                     _WREG4	equ	8
  8820+ 000000                     _WREG5	equ	10
  8821+ 000000                     _WREG6	equ	12
  8822+ 000000                     _WREG7	equ	14
  8823+ 000000                     _WREG8	equ	16
  8824+ 000000                     _WREG9	equ	18
  8825+ 000D7C                     align 2
  8826+ 000D7C                     _ntc_avg:
  8827+ 000D7C                     	ds	2
  8828+ 000D7E                     align 2
  8829+ 000D7E                     _ntc_comp:
  8830+ 000D7E                     	ds	2
  8831+ 000D80                     align 2
  8832+ 000D80                     F9705:
  8833+ 000D80                     	ds	4
  8834+ 000D84                     align 2
  8835+ 000D84                     F9729:
  8836+ 000D84                     	ds	4
  8837+ 000000                     _AD1CON_ADCS0	equ	6432
  8838+ 000000                     _AD1CON_ADCS1	equ	6433
  8839+ 000000                     _AD1CON_ADCS2	equ	6434
  8840+ 000000                     _AD1CON_ADCS3	equ	6435
  8841+ 000000                     _AD1CON_ADCS4	equ	6436
  8842+ 000000                     _AD1CON_ADCS5	equ	6437
  8843+ 000000                     _AD1CON_ADON	equ	6415
  8844+ 000000                     _AD1CON_ADRC	equ	6439
  8845+ 000000                     _AD1CON_ADSIDL	equ	6413
  8846+ 000000                     _AD1CON_ALTS	equ	6416
  8847+ 000000                     _AD1CON_ASAM	equ	6402
  8848+ 000000                     _AD1CON_BUFM	equ	6417
  8849+ 000000                     _AD1CON_BUFS	equ	6423
  8850+ 000000                     _AD1CON_CHPS0	equ	6424
  8851+ 000000                     _AD1CON_CHPS1	equ	6425
  8852+ 000000                     _AD1CON_CONV	equ	6400
  8853+ 000000                     _AD1CON_CSCNA	equ	6426
  8854+ 000000                     _AD1CON_DMABL0	equ	6544
  8855+ 000000                     _AD1CON_DMABL1	equ	6545
  8856+ 000000                     _AD1CON_DMABL2	equ	6546
  8857+ 000000                     _AD1CON_FORM0	equ	6408
  8858+ 000000                     _AD1CON_FORM1	equ	6409
  8859+ 000000                     _AD1CON_OFFCAL	equ	6428
  8860+ 000000                     _AD1CON_SAMC0	equ	6440
  8861+ 000000                     _AD1CON_SAMC1	equ	6441
  8862+ 000000                     _AD1CON_SAMC2	equ	6442
  8863+ 000000                     _AD1CON_SAMC3	equ	6443
  8864+ 000000                     _AD1CON_SAMC4	equ	6444
  8865+ 000000                     _AD1CON_SAMP	equ	6401
  8866+ 000000                     _AD1CON_SIMSAM	equ	6403
  8867+ 000000                     _AD1CON_SMPI0	equ	6418
  8868+ 000000                     _AD1CON_SMPI1	equ	6419
  8869+ 000000                     _AD1CON_SMPI2	equ	6420
  8870+ 000000                     _AD1CON_SMPI3	equ	6421
  8871+ 000000                     _AD1CON_SSRC0	equ	6405
  8872+ 000000                     _AD1CON_SSRC1	equ	6406
  8873+ 000000                     _AD1CON_SSRC2	equ	6407
  8874+ 000000                     _AD1CON_VCFG0	equ	6429
  8875+ 000000                     _AD1CON_VCFG1	equ	6430
  8876+ 000000                     _AD1CON_VCFG2	equ	6431
  8877+ 000000                     _AD1_CH0NA	equ	6471
  8878+ 000000                     _AD1_CH0NB	equ	6479
  8879+ 000000                     _AD1_CH0SA0	equ	6464
  8880+ 000000                     _AD1_CH0SA1	equ	6465
  8881+ 000000                     _AD1_CH0SA2	equ	6466
  8882+ 000000                     _AD1_CH0SA3	equ	6467
  8883+ 000000                     _AD1_CH0SB0	equ	6472
  8884+ 000000                     _AD1_CH0SB1	equ	6473
  8885+ 000000                     _AD1_CH0SB2	equ	6474
  8886+ 000000                     _AD1_CH0SB3	equ	6475
  8887+ 000000                     _AD1_CH123NA0	equ	6449
  8888+ 000000                     _AD1_CH123NA1	equ	6450
  8889+ 000000                     _AD1_CH123NB0	equ	6457
  8890+ 000000                     _AD1_CH123NB1	equ	6458
  8891+ 000000                     _AD1_CH123SA	equ	6448
  8892+ 000000                     _AD1_CH123SB	equ	6456
  8893+ 000000                     _AD2CON_ADCS0	equ	6944
  8894+ 000000                     _AD2CON_ADCS1	equ	6945
  8895+ 000000                     _AD2CON_ADCS2	equ	6946
  8896+ 000000                     _AD2CON_ADCS3	equ	6947
  8897+ 000000                     _AD2CON_ADCS4	equ	6948
  8898+ 000000                     _AD2CON_ADCS5	equ	6949
  8899+ 000000                     _AD2CON_ADON	equ	6927
  8900+ 000000                     _AD2CON_ADRC	equ	6951
  8901+ 000000                     _AD2CON_ADSIDL	equ	6925
  8902+ 000000                     _AD2CON_ALTS	equ	6928
  8903+ 000000                     _AD2CON_ASAM	equ	6914
  8904+ 000000                     _AD2CON_BUFM	equ	6929
  8905+ 000000                     _AD2CON_BUFS	equ	6935
  8906+ 000000                     _AD2CON_CHPS0	equ	6936
  8907+ 000000                     _AD2CON_CHPS1	equ	6937
  8908+ 000000                     _AD2CON_CONV	equ	6912
  8909+ 000000                     _AD2CON_CSCNA	equ	6938
  8910+ 000000                     _AD2CON_DMABL0	equ	7056
  8911+ 000000                     _AD2CON_DMABL1	equ	7057
  8912+ 000000                     _AD2CON_DMABL2	equ	7058
  8913+ 000000                     _AD2CON_FORM0	equ	6920
  8914+ 000000                     _AD2CON_FORM1	equ	6921
  8915+ 000000                     _AD2CON_OFFCAL	equ	6940
  8916+ 000000                     _AD2CON_SAMC0	equ	6952
  8917+ 000000                     _AD2CON_SAMC1	equ	6953
  8918+ 000000                     _AD2CON_SAMC2	equ	6954
  8919+ 000000                     _AD2CON_SAMC3	equ	6955
  8920+ 000000                     _AD2CON_SAMC4	equ	6956
  8921+ 000000                     _AD2CON_SAMP	equ	6913
  8922+ 000000                     _AD2CON_SIMSAM	equ	6915
  8923+ 000000                     _AD2CON_SMPI0	equ	6930
  8924+ 000000                     _AD2CON_SMPI1	equ	6931
  8925+ 000000                     _AD2CON_SMPI2	equ	6932
  8926+ 000000                     _AD2CON_SMPI3	equ	6933
  8927+ 000000                     _AD2CON_SSRC0	equ	6917
  8928+ 000000                     _AD2CON_SSRC1	equ	6918
  8929+ 000000                     _AD2CON_SSRC2	equ	6919
  8930+ 000000                     _AD2CON_VCFG0	equ	6941
  8931+ 000000                     _AD2CON_VCFG1	equ	6942
  8932+ 000000                     _AD2CON_VCFG2	equ	6943
  8933+ 000000                     _AD2IE	equ	1205
  8934+ 000000                     _AD2IF	equ	1077
  8935+ 000000                     _AD2IP0	equ	1396
  8936+ 000000                     _AD2IP1	equ	1397
  8937+ 000000                     _AD2IP2	equ	1398
  8938+ 000000                     _AD2_CH0NA	equ	6983
  8939+ 000000                     _AD2_CH0NB	equ	6991
  8940+ 000000                     _AD2_CH0SA0	equ	6976
  8941+ 000000                     _AD2_CH0SA1	equ	6977
  8942+ 000000                     _AD2_CH0SA2	equ	6978
  8943+ 000000                     _AD2_CH0SA3	equ	6979
  8944+ 000000                     _AD2_CH0SB0	equ	6984
  8945+ 000000                     _AD2_CH0SB1	equ	6985
  8946+ 000000                     _AD2_CH0SB2	equ	6986
  8947+ 000000                     _AD2_CH0SB3	equ	6987
  8948+ 000000                     _AD2_CH123NA0	equ	6961
  8949+ 000000                     _AD2_CH123NA1	equ	6962
  8950+ 000000                     _AD2_CH123NB0	equ	6969
  8951+ 000000                     _AD2_CH123NB1	equ	6970
  8952+ 000000                     _AD2_CH123SA	equ	6960
  8953+ 000000                     _AD2_CH123SB	equ	6968
  8954+ 000000                     _ADDRERR	equ	1027
  8955+ 000000                     _ADIE	equ	1197
  8956+ 000000                     _ADIF	equ	1069
  8957+ 000000                     _ADIP0	equ	1364
  8958+ 000000                     _ADIP1	equ	1365
  8959+ 000000                     _ADIP2	equ	1366
  8960+ 000000                     _ALTIVT	equ	1055
  8961+ 000000                     _BOR	equ	14849
  8962+ 000000                     _C	equ	528
  8963+ 000000                     _C1CFG1_BRP0	equ	8320
  8964+ 000000                     _C1CFG1_BRP1	equ	8321
  8965+ 000000                     _C1CFG1_BRP2	equ	8322
  8966+ 000000                     _C1CFG1_BRP3	equ	8323
  8967+ 000000                     _C1CFG1_BRP4	equ	8324
  8968+ 000000                     _C1CFG1_BRP5	equ	8325
  8969+ 000000                     _C1CFG1_SJW0	equ	8326
  8970+ 000000                     _C1CFG1_SJW1	equ	8327
  8971+ 000000                     _C1CFG2_PRSEG0	equ	8336
  8972+ 000000                     _C1CFG2_PRSEG1	equ	8337
  8973+ 000000                     _C1CFG2_PRSEG2	equ	8338
  8974+ 000000                     _C1CFG2_SAM	equ	8342
  8975+ 000000                     _C1CFG2_SEG1PH0	equ	8339
  8976+ 000000                     _C1CFG2_SEG1PH1	equ	8340
  8977+ 000000                     _C1CFG2_SEG1PH2	equ	8341
  8978+ 000000                     _C1CFG2_SEG2PH0	equ	8344
  8979+ 000000                     _C1CFG2_SEG2PH1	equ	8345
  8980+ 000000                     _C1CFG2_SEG2PH2	equ	8346
  8981+ 000000                     _C1CFG2_SEG2PHTS	equ	8343
  8982+ 000000                     _C1CFG2_WAKFIL	equ	8350
  8983+ 000000                     _C1IE	equ	1219
  8984+ 000000                     _C1IF	equ	1091
  8985+ 000000                     _C1IP0	equ	1452
  8986+ 000000                     _C1IP1	equ	1453
  8987+ 000000                     _C1IP2	equ	1454
  8988+ 000000                     _C1RXF0_EID16	equ	8704
  8989+ 000000                     _C1RXF0_EID17	equ	8705
  8990+ 000000                     _C1RXF0_EXIDE	equ	8707
  8991+ 000000                     _C1RXF0_SID0	equ	8709
  8992+ 000000                     _C1RXF0_SID1	equ	8710
  8993+ 000000                     _C1RXF0_SID10	equ	8719
  8994+ 000000                     _C1RXF0_SID2	equ	8711
  8995+ 000000                     _C1RXF0_SID3	equ	8712
  8996+ 000000                     _C1RXF0_SID4	equ	8713
  8997+ 000000                     _C1RXF0_SID5	equ	8714
  8998+ 000000                     _C1RXF0_SID6	equ	8715
  8999+ 000000                     _C1RXF0_SID7	equ	8716
  9000+ 000000                     _C1RXF0_SID8	equ	8717
  9001+ 000000                     _C1RXF0_SID9	equ	8718
  9002+ 000000                     _C1RXF10_EID0	equ	9040
  9003+ 000000                     _C1RXF10_EID1	equ	9041
  9004+ 000000                     _C1RXF10_EID10	equ	9050
  9005+ 000000                     _C1RXF10_EID11	equ	9051
  9006+ 000000                     _C1RXF10_EID12	equ	9052
  9007+ 000000                     _C1RXF10_EID13	equ	9053
  9008+ 000000                     _C1RXF10_EID14	equ	9054
  9009+ 000000                     _C1RXF10_EID15	equ	9055
  9010+ 000000                     _C1RXF10_EID16	equ	9024
  9011+ 000000                     _C1RXF10_EID17	equ	9025
  9012+ 000000                     _C1RXF10_EID2	equ	9042
  9013+ 000000                     _C1RXF10_EID3	equ	9043
  9014+ 000000                     _C1RXF10_EID4	equ	9044
  9015+ 000000                     _C1RXF10_EID5	equ	9045
  9016+ 000000                     _C1RXF10_EID6	equ	9046
  9017+ 000000                     _C1RXF10_EID7	equ	9047
  9018+ 000000                     _C1RXF10_EID8	equ	9048
  9019+ 000000                     _C1RXF10_EID9	equ	9049
  9020+ 000000                     _C1RXF10_EXIDE	equ	9027
  9021+ 000000                     _C1RXF10_SID0	equ	9029
  9022+ 000000                     _C1RXF10_SID1	equ	9030
  9023+ 000000                     _C1RXF10_SID10	equ	9039
  9024+ 000000                     _C1RXF10_SID2	equ	9031
  9025+ 000000                     _C1RXF10_SID3	equ	9032
  9026+ 000000                     _C1RXF10_SID4	equ	9033
  9027+ 000000                     _C1RXF10_SID5	equ	9034
  9028+ 000000                     _C1RXF10_SID6	equ	9035
  9029+ 000000                     _C1RXF10_SID7	equ	9036
  9030+ 000000                     _C1RXF10_SID8	equ	9037
  9031+ 000000                     _C1RXF10_SID9	equ	9038
  9032+ 000000                     _C1RXF11_EID0	equ	9072
  9033+ 000000                     _C1RXF11_EID1	equ	9073
  9034+ 000000                     _C1RXF11_EID10	equ	9082
  9035+ 000000                     _C1RXF11_EID11	equ	9083
  9036+ 000000                     _C1RXF11_EID12	equ	9084
  9037+ 000000                     _C1RXF11_EID13	equ	9085
  9038+ 000000                     _C1RXF11_EID14	equ	9086
  9039+ 000000                     _C1RXF11_EID15	equ	9087
  9040+ 000000                     _C1RXF11_EID16	equ	9056
  9041+ 000000                     _C1RXF11_EID17	equ	9057
  9042+ 000000                     _C1RXF11_EID2	equ	9074
  9043+ 000000                     _C1RXF11_EID3	equ	9075
  9044+ 000000                     _C1RXF11_EID4	equ	9076
  9045+ 000000                     _C1RXF11_EID5	equ	9077
  9046+ 000000                     _C1RXF11_EID6	equ	9078
  9047+ 000000                     _C1RXF11_EID7	equ	9079
  9048+ 000000                     _C1RXF11_EID8	equ	9080
  9049+ 000000                     _C1RXF11_EID9	equ	9081
  9050+ 000000                     _C1RXF11_EXIDE	equ	9059
  9051+ 000000                     _C1RXF11_SID0	equ	9061
  9052+ 000000                     _C1RXF11_SID1	equ	9062
  9053+ 000000                     _C1RXF11_SID10	equ	9071
  9054+ 000000                     _C1RXF11_SID2	equ	9063
  9055+ 000000                     _C1RXF11_SID3	equ	9064
  9056+ 000000                     _C1RXF11_SID4	equ	9065
  9057+ 000000                     _C1RXF11_SID5	equ	9066
  9058+ 000000                     _C1RXF11_SID6	equ	9067
  9059+ 000000                     _C1RXF11_SID7	equ	9068
  9060+ 000000                     _C1RXF11_SID8	equ	9069
  9061+ 000000                     _C1RXF11_SID9	equ	9070
  9062+ 000000                     _C1RXF12_EID0	equ	9104
  9063+ 000000                     _C1RXF12_EID1	equ	9105
  9064+ 000000                     _C1RXF12_EID10	equ	9114
  9065+ 000000                     _C1RXF12_EID11	equ	9115
  9066+ 000000                     _C1RXF12_EID12	equ	9116
  9067+ 000000                     _C1RXF12_EID13	equ	9117
  9068+ 000000                     _C1RXF12_EID14	equ	9118
  9069+ 000000                     _C1RXF12_EID15	equ	9119
  9070+ 000000                     _C1RXF12_EID16	equ	9088
  9071+ 000000                     _C1RXF12_EID17	equ	9089
  9072+ 000000                     _C1RXF12_EID2	equ	9106
  9073+ 000000                     _C1RXF12_EID3	equ	9107
  9074+ 000000                     _C1RXF12_EID4	equ	9108
  9075+ 000000                     _C1RXF12_EID5	equ	9109
  9076+ 000000                     _C1RXF12_EID6	equ	9110
  9077+ 000000                     _C1RXF12_EID7	equ	9111
  9078+ 000000                     _C1RXF12_EID8	equ	9112
  9079+ 000000                     _C1RXF12_EID9	equ	9113
  9080+ 000000                     _C1RXF12_EXIDE	equ	9091
  9081+ 000000                     _C1RXF12_SID0	equ	9093
  9082+ 000000                     _C1RXF12_SID1	equ	9094
  9083+ 000000                     _C1RXF12_SID10	equ	9103
  9084+ 000000                     _C1RXF12_SID2	equ	9095
  9085+ 000000                     _C1RXF12_SID3	equ	9096
  9086+ 000000                     _C1RXF12_SID4	equ	9097
  9087+ 000000                     _C1RXF12_SID5	equ	9098
  9088+ 000000                     _C1RXF12_SID6	equ	9099
  9089+ 000000                     _C1RXF12_SID7	equ	9100
  9090+ 000000                     _C1RXF12_SID8	equ	9101
  9091+ 000000                     _C1RXF12_SID9	equ	9102
  9092+ 000000                     _C1RXF13_EID0	equ	9136
  9093+ 000000                     _C1RXF13_EID1	equ	9137
  9094+ 000000                     _C1RXF13_EID10	equ	9146
  9095+ 000000                     _C1RXF13_EID11	equ	9147
  9096+ 000000                     _C1RXF13_EID12	equ	9148
  9097+ 000000                     _C1RXF13_EID13	equ	9149
  9098+ 000000                     _C1RXF13_EID14	equ	9150
  9099+ 000000                     _C1RXF13_EID15	equ	9151
  9100+ 000000                     _C1RXF13_EID16	equ	9120
  9101+ 000000                     _C1RXF13_EID17	equ	9121
  9102+ 000000                     _C1RXF13_EID2	equ	9138
  9103+ 000000                     _C1RXF13_EID3	equ	9139
  9104+ 000000                     _C1RXF13_EID4	equ	9140
  9105+ 000000                     _C1RXF13_EID5	equ	9141
  9106+ 000000                     _C1RXF13_EID6	equ	9142
  9107+ 000000                     _C1RXF13_EID7	equ	9143
  9108+ 000000                     _C1RXF13_EID8	equ	9144
  9109+ 000000                     _C1RXF13_EID9	equ	9145
  9110+ 000000                     _C1RXF13_EXIDE	equ	9123
  9111+ 000000                     _C1RXF13_SID0	equ	9125
  9112+ 000000                     _C1RXF13_SID1	equ	9126
  9113+ 000000                     _C1RXF13_SID10	equ	9135
  9114+ 000000                     _C1RXF13_SID2	equ	9127
  9115+ 000000                     _C1RXF13_SID3	equ	9128
  9116+ 000000                     _C1RXF13_SID4	equ	9129
  9117+ 000000                     _C1RXF13_SID5	equ	9130
  9118+ 000000                     _C1RXF13_SID6	equ	9131
  9119+ 000000                     _C1RXF13_SID7	equ	9132
  9120+ 000000                     _C1RXF13_SID8	equ	9133
  9121+ 000000                     _C1RXF13_SID9	equ	9134
  9122+ 000000                     _C1RXF14_EID0	equ	9168
  9123+ 000000                     _C1RXF14_EID1	equ	9169
  9124+ 000000                     _C1RXF14_EID10	equ	9178
  9125+ 000000                     _C1RXF14_EID11	equ	9179
  9126+ 000000                     _C1RXF14_EID12	equ	9180
  9127+ 000000                     _C1RXF14_EID13	equ	9181
  9128+ 000000                     _C1RXF14_EID14	equ	9182
  9129+ 000000                     _C1RXF14_EID15	equ	9183
  9130+ 000000                     _C1RXF14_EID16	equ	9152
  9131+ 000000                     _C1RXF14_EID17	equ	9153
  9132+ 000000                     _C1RXF14_EID2	equ	9170
  9133+ 000000                     _C1RXF14_EID3	equ	9171
  9134+ 000000                     _C1RXF14_EID4	equ	9172
  9135+ 000000                     _C1RXF14_EID5	equ	9173
  9136+ 000000                     _C1RXF14_EID6	equ	9174
  9137+ 000000                     _C1RXF14_EID7	equ	9175
  9138+ 000000                     _C1RXF14_EID8	equ	9176
  9139+ 000000                     _C1RXF14_EID9	equ	9177
  9140+ 000000                     _C1RXF14_EXIDE	equ	9155
  9141+ 000000                     _C1RXF14_SID0	equ	9157
  9142+ 000000                     _C1RXF14_SID1	equ	9158
  9143+ 000000                     _C1RXF14_SID10	equ	9167
  9144+ 000000                     _C1RXF14_SID2	equ	9159
  9145+ 000000                     _C1RXF14_SID3	equ	9160
  9146+ 000000                     _C1RXF14_SID4	equ	9161
  9147+ 000000                     _C1RXF14_SID5	equ	9162
  9148+ 000000                     _C1RXF14_SID6	equ	9163
  9149+ 000000                     _C1RXF14_SID7	equ	9164
  9150+ 000000                     _C1RXF14_SID8	equ	9165
  9151+ 000000                     _C1RXF14_SID9	equ	9166
  9152+ 000000                     _C1RXF15_EID0	equ	9200
  9153+ 000000                     _C1RXF15_EID1	equ	9201
  9154+ 000000                     _C1RXF15_EID10	equ	9210
  9155+ 000000                     _C1RXF15_EID11	equ	9211
  9156+ 000000                     _C1RXF15_EID12	equ	9212
  9157+ 000000                     _C1RXF15_EID13	equ	9213
  9158+ 000000                     _C1RXF15_EID14	equ	9214
  9159+ 000000                     _C1RXF15_EID15	equ	9215
  9160+ 000000                     _C1RXF15_EID16	equ	9184
  9161+ 000000                     _C1RXF15_EID17	equ	9185
  9162+ 000000                     _C1RXF15_EID2	equ	9202
  9163+ 000000                     _C1RXF15_EID3	equ	9203
  9164+ 000000                     _C1RXF15_EID4	equ	9204
  9165+ 000000                     _C1RXF15_EID5	equ	9205
  9166+ 000000                     _C1RXF15_EID6	equ	9206
  9167+ 000000                     _C1RXF15_EID7	equ	9207
  9168+ 000000                     _C1RXF15_EID8	equ	9208
  9169+ 000000                     _C1RXF15_EID9	equ	9209
  9170+ 000000                     _C1RXF15_EXIDE	equ	9187
  9171+ 000000                     _C1RXF15_SID0	equ	9189
  9172+ 000000                     _C1RXF15_SID1	equ	9190
  9173+ 000000                     _C1RXF15_SID10	equ	9199
  9174+ 000000                     _C1RXF15_SID2	equ	9191
  9175+ 000000                     _C1RXF15_SID3	equ	9192
  9176+ 000000                     _C1RXF15_SID4	equ	9193
  9177+ 000000                     _C1RXF15_SID5	equ	9194
  9178+ 000000                     _C1RXF15_SID6	equ	9195
  9179+ 000000                     _C1RXF15_SID7	equ	9196
  9180+ 000000                     _C1RXF15_SID8	equ	9197
  9181+ 000000                     _C1RXF15_SID9	equ	9198
  9182+ 000000                     _C1RXF1_EID16	equ	8736
  9183+ 000000                     _C1RXF1_EID17	equ	8737
  9184+ 000000                     _C1RXF1_EXIDE	equ	8739
  9185+ 000000                     _C1RXF1_SID0	equ	8741
  9186+ 000000                     _C1RXF1_SID1	equ	8742
  9187+ 000000                     _C1RXF1_SID10	equ	8751
  9188+ 000000                     _C1RXF1_SID2	equ	8743
  9189+ 000000                     _C1RXF1_SID3	equ	8744
  9190+ 000000                     _C1RXF1_SID4	equ	8745
  9191+ 000000                     _C1RXF1_SID5	equ	8746
  9192+ 000000                     _C1RXF1_SID6	equ	8747
  9193+ 000000                     _C1RXF1_SID7	equ	8748
  9194+ 000000                     _C1RXF1_SID8	equ	8749
  9195+ 000000                     _C1RXF1_SID9	equ	8750
  9196+ 000000                     _C1RXF2_EID16	equ	8768
  9197+ 000000                     _C1RXF2_EID17	equ	8769
  9198+ 000000                     _C1RXF2_EXIDE	equ	8771
  9199+ 000000                     _C1RXF2_SID0	equ	8773
  9200+ 000000                     _C1RXF2_SID1	equ	8774
  9201+ 000000                     _C1RXF2_SID10	equ	8783
  9202+ 000000                     _C1RXF2_SID2	equ	8775
  9203+ 000000                     _C1RXF2_SID3	equ	8776
  9204+ 000000                     _C1RXF2_SID4	equ	8777
  9205+ 000000                     _C1RXF2_SID5	equ	8778
  9206+ 000000                     _C1RXF2_SID6	equ	8779
  9207+ 000000                     _C1RXF2_SID7	equ	8780
  9208+ 000000                     _C1RXF2_SID8	equ	8781
  9209+ 000000                     _C1RXF2_SID9	equ	8782
  9210+ 000000                     _C1RXF3_EID16	equ	8800
  9211+ 000000                     _C1RXF3_EID17	equ	8801
  9212+ 000000                     _C1RXF3_EXIDE	equ	8803
  9213+ 000000                     _C1RXF3_SID0	equ	8805
  9214+ 000000                     _C1RXF3_SID1	equ	8806
  9215+ 000000                     _C1RXF3_SID10	equ	8815
  9216+ 000000                     _C1RXF3_SID2	equ	8807
  9217+ 000000                     _C1RXF3_SID3	equ	8808
  9218+ 000000                     _C1RXF3_SID4	equ	8809
  9219+ 000000                     _C1RXF3_SID5	equ	8810
  9220+ 000000                     _C1RXF3_SID6	equ	8811
  9221+ 000000                     _C1RXF3_SID7	equ	8812
  9222+ 000000                     _C1RXF3_SID8	equ	8813
  9223+ 000000                     _C1RXF3_SID9	equ	8814
  9224+ 000000                     _C1RXF4_EID16	equ	8832
  9225+ 000000                     _C1RXF4_EID17	equ	8833
  9226+ 000000                     _C1RXF4_EXIDE	equ	8835
  9227+ 000000                     _C1RXF4_SID0	equ	8837
  9228+ 000000                     _C1RXF4_SID1	equ	8838
  9229+ 000000                     _C1RXF4_SID10	equ	8847
  9230+ 000000                     _C1RXF4_SID2	equ	8839
  9231+ 000000                     _C1RXF4_SID3	equ	8840
  9232+ 000000                     _C1RXF4_SID4	equ	8841
  9233+ 000000                     _C1RXF4_SID5	equ	8842
  9234+ 000000                     _C1RXF4_SID6	equ	8843
  9235+ 000000                     _C1RXF4_SID7	equ	8844
  9236+ 000000                     _C1RXF4_SID8	equ	8845
  9237+ 000000                     _C1RXF4_SID9	equ	8846
  9238+ 000000                     _C1RXF5_EID16	equ	8864
  9239+ 000000                     _C1RXF5_EID17	equ	8865
  9240+ 000000                     _C1RXF5_EXIDE	equ	8867
  9241+ 000000                     _C1RXF5_SID0	equ	8869
  9242+ 000000                     _C1RXF5_SID1	equ	8870
  9243+ 000000                     _C1RXF5_SID10	equ	8879
  9244+ 000000                     _C1RXF5_SID2	equ	8871
  9245+ 000000                     _C1RXF5_SID3	equ	8872
  9246+ 000000                     _C1RXF5_SID4	equ	8873
  9247+ 000000                     _C1RXF5_SID5	equ	8874
  9248+ 000000                     _C1RXF5_SID6	equ	8875
  9249+ 000000                     _C1RXF5_SID7	equ	8876
  9250+ 000000                     _C1RXF5_SID8	equ	8877
  9251+ 000000                     _C1RXF5_SID9	equ	8878
  9252+ 000000                     _C1RXF6_EID16	equ	8896
  9253+ 000000                     _C1RXF6_EID17	equ	8897
  9254+ 000000                     _C1RXF6_EXIDE	equ	8899
  9255+ 000000                     _C1RXF6_SID0	equ	8901
  9256+ 000000                     _C1RXF6_SID1	equ	8902
  9257+ 000000                     _C1RXF6_SID10	equ	8911
  9258+ 000000                     _C1RXF6_SID2	equ	8903
  9259+ 000000                     _C1RXF6_SID3	equ	8904
  9260+ 000000                     _C1RXF6_SID4	equ	8905
  9261+ 000000                     _C1RXF6_SID5	equ	8906
  9262+ 000000                     _C1RXF6_SID6	equ	8907
  9263+ 000000                     _C1RXF6_SID7	equ	8908
  9264+ 000000                     _C1RXF6_SID8	equ	8909
  9265+ 000000                     _C1RXF6_SID9	equ	8910
  9266+ 000000                     _C1RXF7_EID16	equ	8928
  9267+ 000000                     _C1RXF7_EID17	equ	8929
  9268+ 000000                     _C1RXF7_EXIDE	equ	8931
  9269+ 000000                     _C1RXF7_SID0	equ	8933
  9270+ 000000                     _C1RXF7_SID1	equ	8934
  9271+ 000000                     _C1RXF7_SID10	equ	8943
  9272+ 000000                     _C1RXF7_SID2	equ	8935
  9273+ 000000                     _C1RXF7_SID3	equ	8936
  9274+ 000000                     _C1RXF7_SID4	equ	8937
  9275+ 000000                     _C1RXF7_SID5	equ	8938
  9276+ 000000                     _C1RXF7_SID6	equ	8939
  9277+ 000000                     _C1RXF7_SID7	equ	8940
  9278+ 000000                     _C1RXF7_SID8	equ	8941
  9279+ 000000                     _C1RXF7_SID9	equ	8942
  9280+ 000000                     _C1RXF8_EID16	equ	8960
  9281+ 000000                     _C1RXF8_EID17	equ	8961
  9282+ 000000                     _C1RXF8_EXIDE	equ	8963
  9283+ 000000                     _C1RXF8_SID0	equ	8965
  9284+ 000000                     _C1RXF8_SID1	equ	8966
  9285+ 000000                     _C1RXF8_SID10	equ	8975
  9286+ 000000                     _C1RXF8_SID2	equ	8967
  9287+ 000000                     _C1RXF8_SID3	equ	8968
  9288+ 000000                     _C1RXF8_SID4	equ	8969
  9289+ 000000                     _C1RXF8_SID5	equ	8970
  9290+ 000000                     _C1RXF8_SID6	equ	8971
  9291+ 000000                     _C1RXF8_SID7	equ	8972
  9292+ 000000                     _C1RXF8_SID8	equ	8973
  9293+ 000000                     _C1RXF8_SID9	equ	8974
  9294+ 000000                     _C1RXF9_EID16	equ	8992
  9295+ 000000                     _C1RXF9_EID17	equ	8993
  9296+ 000000                     _C1RXF9_EXIDE	equ	8995
  9297+ 000000                     _C1RXF9_SID0	equ	8997
  9298+ 000000                     _C1RXF9_SID1	equ	8998
  9299+ 000000                     _C1RXF9_SID10	equ	9007
  9300+ 000000                     _C1RXF9_SID2	equ	8999
  9301+ 000000                     _C1RXF9_SID3	equ	9000
  9302+ 000000                     _C1RXF9_SID4	equ	9001
  9303+ 000000                     _C1RXF9_SID5	equ	9002
  9304+ 000000                     _C1RXF9_SID6	equ	9003
  9305+ 000000                     _C1RXF9_SID7	equ	9004
  9306+ 000000                     _C1RXF9_SID8	equ	9005
  9307+ 000000                     _C1RXF9_SID9	equ	9006
  9308+ 000000                     _C1RXIE	equ	1218
  9309+ 000000                     _C1RXIF	equ	1090
  9310+ 000000                     _C1RXIP0	equ	1448
  9311+ 000000                     _C1RXIP1	equ	1449
  9312+ 000000                     _C1RXIP2	equ	1450
  9313+ 000000                     _C1RXM0_EID16	equ	8576
  9314+ 000000                     _C1RXM0_EID17	equ	8577
  9315+ 000000                     _C1RXM0_MIDE	equ	8579
  9316+ 000000                     _C1RXM0_SID0	equ	8581
  9317+ 000000                     _C1RXM0_SID1	equ	8582
  9318+ 000000                     _C1RXM0_SID10	equ	8591
  9319+ 000000                     _C1RXM0_SID2	equ	8583
  9320+ 000000                     _C1RXM0_SID3	equ	8584
  9321+ 000000                     _C1RXM0_SID4	equ	8585
  9322+ 000000                     _C1RXM0_SID5	equ	8586
  9323+ 000000                     _C1RXM0_SID6	equ	8587
  9324+ 000000                     _C1RXM0_SID7	equ	8588
  9325+ 000000                     _C1RXM0_SID8	equ	8589
  9326+ 000000                     _C1RXM0_SID9	equ	8590
  9327+ 000000                     _C1RXM2_EID16	equ	8640
  9328+ 000000                     _C1RXM2_EID17	equ	8641
  9329+ 000000                     _C1RXM2_MIDE	equ	8643
  9330+ 000000                     _C1RXM2_SID0	equ	8645
  9331+ 000000                     _C1RXM2_SID1	equ	8646
  9332+ 000000                     _C1RXM2_SID10	equ	8655
  9333+ 000000                     _C1RXM2_SID2	equ	8647
  9334+ 000000                     _C1RXM2_SID3	equ	8648
  9335+ 000000                     _C1RXM2_SID4	equ	8649
  9336+ 000000                     _C1RXM2_SID5	equ	8650
  9337+ 000000                     _C1RXM2_SID6	equ	8651
  9338+ 000000                     _C1RXM2_SID7	equ	8652
  9339+ 000000                     _C1RXM2_SID8	equ	8653
  9340+ 000000                     _C1RXM2_SID9	equ	8654
  9341+ 000000                     _C1TXIE	equ	1254
  9342+ 000000                     _C1TXIF	equ	1126
  9343+ 000000                     _C1TXIP0	equ	1592
  9344+ 000000                     _C1TXIP1	equ	1593
  9345+ 000000                     _C1TXIP2	equ	1594
  9346+ 000000                     _C1_ABAT	equ	8204
  9347+ 000000                     _C1_CANCAP	equ	8195
  9348+ 000000                     _C1_CANCKS	equ	8203
  9349+ 000000                     _C1_CSIDL	equ	8205
  9350+ 000000                     _C1_DMABS0	equ	8253
  9351+ 000000                     _C1_DMABS1	equ	8254
  9352+ 000000                     _C1_DMABS2	equ	8255
  9353+ 000000                     _C1_DNCNT0	equ	8208
  9354+ 000000                     _C1_DNCNT1	equ	8209
  9355+ 000000                     _C1_DNCNT2	equ	8210
  9356+ 000000                     _C1_DNCNT3	equ	8211
  9357+ 000000                     _C1_DNCNT4	equ	8212
  9358+ 000000                     _C1_ERRIE	equ	8293
  9359+ 000000                     _C1_ERRIF	equ	8277
  9360+ 000000                     _C1_EWARN	equ	8280
  9361+ 000000                     _C1_F0BP0	equ	8448
  9362+ 000000                     _C1_F0BP1	equ	8449
  9363+ 000000                     _C1_F0BP2	equ	8450
  9364+ 000000                     _C1_F0BP3	equ	8451
  9365+ 000000                     _C1_F0MSK0	equ	8384
  9366+ 000000                     _C1_F0MSK1	equ	8385
  9367+ 000000                     _C1_F10BP0	equ	8488
  9368+ 000000                     _C1_F10BP1	equ	8489
  9369+ 000000                     _C1_F10BP2	equ	8490
  9370+ 000000                     _C1_F10BP3	equ	8491
  9371+ 000000                     _C1_F10MSK0	equ	8404
  9372+ 000000                     _C1_F10MSK1	equ	8405
  9373+ 000000                     _C1_F11BP0	equ	8492
  9374+ 000000                     _C1_F11BP1	equ	8493
  9375+ 000000                     _C1_F11BP2	equ	8494
  9376+ 000000                     _C1_F11BP3	equ	8495
  9377+ 000000                     _C1_F11MSK0	equ	8406
  9378+ 000000                     _C1_F11MSK1	equ	8407
  9379+ 000000                     _C1_F12BP0	equ	8496
  9380+ 000000                     _C1_F12BP1	equ	8497
  9381+ 000000                     _C1_F12BP2	equ	8498
  9382+ 000000                     _C1_F12BP3	equ	8499
  9383+ 000000                     _C1_F12MSK0	equ	8408
  9384+ 000000                     _C1_F12MSK1	equ	8409
  9385+ 000000                     _C1_F13BP0	equ	8500
  9386+ 000000                     _C1_F13BP1	equ	8501
  9387+ 000000                     _C1_F13BP2	equ	8502
  9388+ 000000                     _C1_F13BP3	equ	8503
  9389+ 000000                     _C1_F13MSK0	equ	8410
  9390+ 000000                     _C1_F13MSK1	equ	8411
  9391+ 000000                     _C1_F14BP0	equ	8504
  9392+ 000000                     _C1_F14BP1	equ	8505
  9393+ 000000                     _C1_F14BP2	equ	8506
  9394+ 000000                     _C1_F14BP3	equ	8507
  9395+ 000000                     _C1_F14MSK0	equ	8412
  9396+ 000000                     _C1_F14MSK1	equ	8413
  9397+ 000000                     _C1_F15BP0	equ	8508
  9398+ 000000                     _C1_F15BP1	equ	8509
  9399+ 000000                     _C1_F15BP2	equ	8510
  9400+ 000000                     _C1_F15BP3	equ	8511
  9401+ 000000                     _C1_F15MSK0	equ	8414
  9402+ 000000                     _C1_F15MSK1	equ	8415
  9403+ 000000                     _C1_F1BP0	equ	8452
  9404+ 000000                     _C1_F1BP1	equ	8453
  9405+ 000000                     _C1_F1BP2	equ	8454
  9406+ 000000                     _C1_F1BP3	equ	8455
  9407+ 000000                     _C1_F1MSK0	equ	8386
  9408+ 000000                     _C1_F1MSK1	equ	8387
  9409+ 000000                     _C1_F2BP0	equ	8456
  9410+ 000000                     _C1_F2BP1	equ	8457
  9411+ 000000                     _C1_F2BP2	equ	8458
  9412+ 000000                     _C1_F2BP3	equ	8459
  9413+ 000000                     _C1_F2MSK0	equ	8388
  9414+ 000000                     _C1_F2MSK1	equ	8389
  9415+ 000000                     _C1_F3BP0	equ	8460
  9416+ 000000                     _C1_F3BP1	equ	8461
  9417+ 000000                     _C1_F3BP2	equ	8462
  9418+ 000000                     _C1_F3BP3	equ	8463
  9419+ 000000                     _C1_F3MSK0	equ	8390
  9420+ 000000                     _C1_F3MSK1	equ	8391
  9421+ 000000                     _C1_F4BP0	equ	8464
  9422+ 000000                     _C1_F4BP1	equ	8465
  9423+ 000000                     _C1_F4BP2	equ	8466
  9424+ 000000                     _C1_F4BP3	equ	8467
  9425+ 000000                     _C1_F4MSK0	equ	8392
  9426+ 000000                     _C1_F4MSK1	equ	8393
  9427+ 000000                     _C1_F5BP0	equ	8468
  9428+ 000000                     _C1_F5BP1	equ	8469
  9429+ 000000                     _C1_F5BP2	equ	8470
  9430+ 000000                     _C1_F5BP3	equ	8471
  9431+ 000000                     _C1_F5MSK0	equ	8394
  9432+ 000000                     _C1_F5MSK1	equ	8395
  9433+ 000000                     _C1_F6BP0	equ	8472
  9434+ 000000                     _C1_F6BP1	equ	8473
  9435+ 000000                     _C1_F6BP2	equ	8474
  9436+ 000000                     _C1_F6BP3	equ	8475
  9437+ 000000                     _C1_F6MSK0	equ	8396
  9438+ 000000                     _C1_F6MSK1	equ	8397
  9439+ 000000                     _C1_F7BP0	equ	8476
  9440+ 000000                     _C1_F7BP1	equ	8477
  9441+ 000000                     _C1_F7BP2	equ	8478
  9442+ 000000                     _C1_F7BP3	equ	8479
  9443+ 000000                     _C1_F7MSK0	equ	8398
  9444+ 000000                     _C1_F7MSK1	equ	8399
  9445+ 000000                     _C1_F8BP0	equ	8480
  9446+ 000000                     _C1_F8BP1	equ	8481
  9447+ 000000                     _C1_F8BP2	equ	8482
  9448+ 000000                     _C1_F8BP3	equ	8483
  9449+ 000000                     _C1_F8MSK0	equ	8400
  9450+ 000000                     _C1_F8MSK1	equ	8401
  9451+ 000000                     _C1_F9BP0	equ	8484
  9452+ 000000                     _C1_F9BP1	equ	8485
  9453+ 000000                     _C1_F9BP2	equ	8486
  9454+ 000000                     _C1_F9BP3	equ	8487
  9455+ 000000                     _C1_F9MSK0	equ	8402
  9456+ 000000                     _C1_F9MSK1	equ	8403
  9457+ 000000                     _C1_FBP0	equ	8264
  9458+ 000000                     _C1_FBP1	equ	8265
  9459+ 000000                     _C1_FBP2	equ	8266
  9460+ 000000                     _C1_FBP3	equ	8267
  9461+ 000000                     _C1_FBP4	equ	8268
  9462+ 000000                     _C1_FBP5	equ	8269
  9463+ 000000                     _C1_FIFOIE	equ	8291
  9464+ 000000                     _C1_FIFOIF	equ	8275
  9465+ 000000                     _C1_FILHIT0	equ	8232
  9466+ 000000                     _C1_FILHIT1	equ	8233
  9467+ 000000                     _C1_FILHIT2	equ	8234
  9468+ 000000                     _C1_FILHIT3	equ	8235
  9469+ 000000                     _C1_FILHIT4	equ	8236
  9470+ 000000                     _C1_FNRB0	equ	8256
  9471+ 000000                     _C1_FNRB1	equ	8257
  9472+ 000000                     _C1_FNRB2	equ	8258
  9473+ 000000                     _C1_FNRB3	equ	8259
  9474+ 000000                     _C1_FNRB4	equ	8260
  9475+ 000000                     _C1_FNRB5	equ	8261
  9476+ 000000                     _C1_FSA0	equ	8240
  9477+ 000000                     _C1_FSA1	equ	8241
  9478+ 000000                     _C1_FSA2	equ	8242
  9479+ 000000                     _C1_FSA3	equ	8243
  9480+ 000000                     _C1_FSA4	equ	8244
  9481+ 000000                     _C1_ICODE0	equ	8224
  9482+ 000000                     _C1_ICODE1	equ	8225
  9483+ 000000                     _C1_ICODE2	equ	8226
  9484+ 000000                     _C1_ICODE3	equ	8227
  9485+ 000000                     _C1_ICODE4	equ	8228
  9486+ 000000                     _C1_ICODE5	equ	8229
  9487+ 000000                     _C1_ICODE6	equ	8230
  9488+ 000000                     _C1_IVRIE	equ	8295
  9489+ 000000                     _C1_IVRIF	equ	8279
  9490+ 000000                     _C1_OPMODE0	equ	8197
  9491+ 000000                     _C1_OPMODE1	equ	8198
  9492+ 000000                     _C1_OPMODE2	equ	8199
  9493+ 000000                     _C1_RBIE	equ	8289
  9494+ 000000                     _C1_RBIF	equ	8273
  9495+ 000000                     _C1_RBOVIE	equ	8290
  9496+ 000000                     _C1_RBOVIF	equ	8274
  9497+ 000000                     _C1_REQOP0	equ	8200
  9498+ 000000                     _C1_REQOP1	equ	8201
  9499+ 000000                     _C1_REQOP2	equ	8202
  9500+ 000000                     _C1_RERRCNT0	equ	8304
  9501+ 000000                     _C1_RERRCNT1	equ	8305
  9502+ 000000                     _C1_RERRCNT2	equ	8306
  9503+ 000000                     _C1_RERRCNT3	equ	8307
  9504+ 000000                     _C1_RERRCNT4	equ	8308
  9505+ 000000                     _C1_RERRCNT5	equ	8309
  9506+ 000000                     _C1_RERRCNT6	equ	8310
  9507+ 000000                     _C1_RERRCNT7	equ	8311
  9508+ 000000                     _C1_RTREN0	equ	8578
  9509+ 000000                     _C1_RTREN1	equ	8586
  9510+ 000000                     _C1_RTREN2	equ	8594
  9511+ 000000                     _C1_RTREN3	equ	8602
  9512+ 000000                     _C1_RTREN4	equ	8610
  9513+ 000000                     _C1_RTREN5	equ	8618
  9514+ 000000                     _C1_RTREN6	equ	8626
  9515+ 000000                     _C1_RTREN7	equ	8634
  9516+ 000000                     _C1_RXBP	equ	8283
  9517+ 000000                     _C1_RXWAR	equ	8281
  9518+ 000000                     _C1_TBIE	equ	8288
  9519+ 000000                     _C1_TBIF	equ	8272
  9520+ 000000                     _C1_TERRCNT0	equ	8312
  9521+ 000000                     _C1_TERRCNT1	equ	8313
  9522+ 000000                     _C1_TERRCNT2	equ	8314
  9523+ 000000                     _C1_TERRCNT3	equ	8315
  9524+ 000000                     _C1_TERRCNT4	equ	8316
  9525+ 000000                     _C1_TERRCNT5	equ	8317
  9526+ 000000                     _C1_TERRCNT6	equ	8318
  9527+ 000000                     _C1_TERRCNT7	equ	8319
  9528+ 000000                     _C1_TX0PRI0	equ	8576
  9529+ 000000                     _C1_TX0PRI1	equ	8577
  9530+ 000000                     _C1_TX1PRI0	equ	8584
  9531+ 000000                     _C1_TX1PRI1	equ	8585
  9532+ 000000                     _C1_TX2PRI0	equ	8592
  9533+ 000000                     _C1_TX2PRI1	equ	8593
  9534+ 000000                     _C1_TX3PRI0	equ	8600
  9535+ 000000                     _C1_TX3PRI1	equ	8601
  9536+ 000000                     _C1_TX4PRI0	equ	8608
  9537+ 000000                     _C1_TX4PRI1	equ	8609
  9538+ 000000                     _C1_TX5PRI0	equ	8616
  9539+ 000000                     _C1_TX5PRI1	equ	8617
  9540+ 000000                     _C1_TX6PRI0	equ	8624
  9541+ 000000                     _C1_TX6PRI1	equ	8625
  9542+ 000000                     _C1_TX7PRI0	equ	8632
  9543+ 000000                     _C1_TX7PRI1	equ	8633
  9544+ 000000                     _C1_TXABT0	equ	8582
  9545+ 000000                     _C1_TXABT1	equ	8590
  9546+ 000000                     _C1_TXABT2	equ	8598
  9547+ 000000                     _C1_TXABT3	equ	8606
  9548+ 000000                     _C1_TXABT4	equ	8614
  9549+ 000000                     _C1_TXABT5	equ	8622
  9550+ 000000                     _C1_TXABT6	equ	8630
  9551+ 000000                     _C1_TXABT7	equ	8638
  9552+ 000000                     _C1_TXBO	equ	8285
  9553+ 000000                     _C1_TXBP	equ	8284
  9554+ 000000                     _C1_TXEN0	equ	8583
  9555+ 000000                     _C1_TXEN1	equ	8591
  9556+ 000000                     _C1_TXEN2	equ	8599
  9557+ 000000                     _C1_TXEN3	equ	8607
  9558+ 000000                     _C1_TXEN4	equ	8615
  9559+ 000000                     _C1_TXEN5	equ	8623
  9560+ 000000                     _C1_TXEN6	equ	8631
  9561+ 000000                     _C1_TXEN7	equ	8639
  9562+ 000000                     _C1_TXERR0	equ	8580
  9563+ 000000                     _C1_TXERR1	equ	8588
  9564+ 000000                     _C1_TXERR2	equ	8596
  9565+ 000000                     _C1_TXERR3	equ	8604
  9566+ 000000                     _C1_TXERR4	equ	8612
  9567+ 000000                     _C1_TXERR5	equ	8620
  9568+ 000000                     _C1_TXERR6	equ	8628
  9569+ 000000                     _C1_TXERR7	equ	8636
  9570+ 000000                     _C1_TXLARB0	equ	8581
  9571+ 000000                     _C1_TXLARB1	equ	8589
  9572+ 000000                     _C1_TXLARB2	equ	8597
  9573+ 000000                     _C1_TXLARB3	equ	8605
  9574+ 000000                     _C1_TXLARB4	equ	8613
  9575+ 000000                     _C1_TXLARB5	equ	8621
  9576+ 000000                     _C1_TXLARB6	equ	8629
  9577+ 000000                     _C1_TXLARB7	equ	8637
  9578+ 000000                     _C1_TXREQ0	equ	8579
  9579+ 000000                     _C1_TXREQ1	equ	8587
  9580+ 000000                     _C1_TXREQ2	equ	8595
  9581+ 000000                     _C1_TXREQ3	equ	8603
  9582+ 000000                     _C1_TXREQ4	equ	8611
  9583+ 000000                     _C1_TXREQ5	equ	8619
  9584+ 000000                     _C1_TXREQ6	equ	8627
  9585+ 000000                     _C1_TXREQ7	equ	8635
  9586+ 000000                     _C1_TXWAR	equ	8282
  9587+ 000000                     _C1_WAKIE	equ	8294
  9588+ 000000                     _C1_WAKIF	equ	8278
  9589+ 000000                     _C1_WIN	equ	8192
  9590+ 000000                     _C2CFG1_BRP0	equ	10368
  9591+ 000000                     _C2CFG1_BRP1	equ	10369
  9592+ 000000                     _C2CFG1_BRP2	equ	10370
  9593+ 000000                     _C2CFG1_BRP3	equ	10371
  9594+ 000000                     _C2CFG1_BRP4	equ	10372
  9595+ 000000                     _C2CFG1_BRP5	equ	10373
  9596+ 000000                     _C2CFG1_SJW0	equ	10374
  9597+ 000000                     _C2CFG1_SJW1	equ	10375
  9598+ 000000                     _C2CFG2_PRSEG0	equ	10384
  9599+ 000000                     _C2CFG2_PRSEG1	equ	10385
  9600+ 000000                     _C2CFG2_PRSEG2	equ	10386
  9601+ 000000                     _C2CFG2_SAM	equ	10390
  9602+ 000000                     _C2CFG2_SEG1PH0	equ	10387
  9603+ 000000                     _C2CFG2_SEG1PH1	equ	10388
  9604+ 000000                     _C2CFG2_SEG1PH2	equ	10389
  9605+ 000000                     _C2CFG2_SEG2PH0	equ	10392
  9606+ 000000                     _C2CFG2_SEG2PH1	equ	10393
  9607+ 000000                     _C2CFG2_SEG2PH2	equ	10394
  9608+ 000000                     _C2CFG2_SEG2PHTS	equ	10391
  9609+ 000000                     _C2CFG2_WAKFIL	equ	10398
  9610+ 000000                     _C2IE	equ	1240
  9611+ 000000                     _C2IF	equ	1112
  9612+ 000000                     _C2RXF0_EID16	equ	10752
  9613+ 000000                     _C2RXF0_EID17	equ	10753
  9614+ 000000                     _C2RXF0_EXIDE	equ	10755
  9615+ 000000                     _C2RXF0_SID0	equ	10757
  9616+ 000000                     _C2RXF0_SID1	equ	10758
  9617+ 000000                     _C2RXF0_SID10	equ	10767
  9618+ 000000                     _C2RXF0_SID2	equ	10759
  9619+ 000000                     _C2RXF0_SID3	equ	10760
  9620+ 000000                     _C2RXF0_SID4	equ	10761
  9621+ 000000                     _C2RXF0_SID5	equ	10762
  9622+ 000000                     _C2RXF0_SID6	equ	10763
  9623+ 000000                     _C2RXF0_SID7	equ	10764
  9624+ 000000                     _C2RXF0_SID8	equ	10765
  9625+ 000000                     _C2RXF0_SID9	equ	10766
  9626+ 000000                     _C2RXF10_EID0	equ	11088
  9627+ 000000                     _C2RXF10_EID1	equ	11089
  9628+ 000000                     _C2RXF10_EID10	equ	11098
  9629+ 000000                     _C2RXF10_EID11	equ	11099
  9630+ 000000                     _C2RXF10_EID12	equ	11100
  9631+ 000000                     _C2RXF10_EID13	equ	11101
  9632+ 000000                     _C2RXF10_EID14	equ	11102
  9633+ 000000                     _C2RXF10_EID15	equ	11103
  9634+ 000000                     _C2RXF10_EID16	equ	11072
  9635+ 000000                     _C2RXF10_EID17	equ	11073
  9636+ 000000                     _C2RXF10_EID2	equ	11090
  9637+ 000000                     _C2RXF10_EID3	equ	11091
  9638+ 000000                     _C2RXF10_EID4	equ	11092
  9639+ 000000                     _C2RXF10_EID5	equ	11093
  9640+ 000000                     _C2RXF10_EID6	equ	11094
  9641+ 000000                     _C2RXF10_EID7	equ	11095
  9642+ 000000                     _C2RXF10_EID8	equ	11096
  9643+ 000000                     _C2RXF10_EID9	equ	11097
  9644+ 000000                     _C2RXF10_EXIDE	equ	11075
  9645+ 000000                     _C2RXF10_SID0	equ	11077
  9646+ 000000                     _C2RXF10_SID1	equ	11078
  9647+ 000000                     _C2RXF10_SID10	equ	11087
  9648+ 000000                     _C2RXF10_SID2	equ	11079
  9649+ 000000                     _C2RXF10_SID3	equ	11080
  9650+ 000000                     _C2RXF10_SID4	equ	11081
  9651+ 000000                     _C2RXF10_SID5	equ	11082
  9652+ 000000                     _C2RXF10_SID6	equ	11083
  9653+ 000000                     _C2RXF10_SID7	equ	11084
  9654+ 000000                     _C2RXF10_SID8	equ	11085
  9655+ 000000                     _C2RXF10_SID9	equ	11086
  9656+ 000000                     _C2RXF11_EID0	equ	11120
  9657+ 000000                     _C2RXF11_EID1	equ	11121
  9658+ 000000                     _C2RXF11_EID10	equ	11130
  9659+ 000000                     _C2RXF11_EID11	equ	11131
  9660+ 000000                     _C2RXF11_EID12	equ	11132
  9661+ 000000                     _C2RXF11_EID13	equ	11133
  9662+ 000000                     _C2RXF11_EID14	equ	11134
  9663+ 000000                     _C2RXF11_EID15	equ	11135
  9664+ 000000                     _C2RXF11_EID16	equ	11104
  9665+ 000000                     _C2RXF11_EID17	equ	11105
  9666+ 000000                     _C2RXF11_EID2	equ	11122
  9667+ 000000                     _C2RXF11_EID3	equ	11123
  9668+ 000000                     _C2RXF11_EID4	equ	11124
  9669+ 000000                     _C2RXF11_EID5	equ	11125
  9670+ 000000                     _C2RXF11_EID6	equ	11126
  9671+ 000000                     _C2RXF11_EID7	equ	11127
  9672+ 000000                     _C2RXF11_EID8	equ	11128
  9673+ 000000                     _C2RXF11_EID9	equ	11129
  9674+ 000000                     _C2RXF11_EXIDE	equ	11107
  9675+ 000000                     _C2RXF11_SID0	equ	11109
  9676+ 000000                     _C2RXF11_SID1	equ	11110
  9677+ 000000                     _C2RXF11_SID10	equ	11119
  9678+ 000000                     _C2RXF11_SID2	equ	11111
  9679+ 000000                     _C2RXF11_SID3	equ	11112
  9680+ 000000                     _C2RXF11_SID4	equ	11113
  9681+ 000000                     _C2RXF11_SID5	equ	11114
  9682+ 000000                     _C2RXF11_SID6	equ	11115
  9683+ 000000                     _C2RXF11_SID7	equ	11116
  9684+ 000000                     _C2RXF11_SID8	equ	11117
  9685+ 000000                     _C2RXF11_SID9	equ	11118
  9686+ 000000                     _C2RXF12_EID0	equ	11152
  9687+ 000000                     _C2RXF12_EID1	equ	11153
  9688+ 000000                     _C2RXF12_EID10	equ	11162
  9689+ 000000                     _C2RXF12_EID11	equ	11163
  9690+ 000000                     _C2RXF12_EID12	equ	11164
  9691+ 000000                     _C2RXF12_EID13	equ	11165
  9692+ 000000                     _C2RXF12_EID14	equ	11166
  9693+ 000000                     _C2RXF12_EID15	equ	11167
  9694+ 000000                     _C2RXF12_EID16	equ	11136
  9695+ 000000                     _C2RXF12_EID17	equ	11137
  9696+ 000000                     _C2RXF12_EID2	equ	11154
  9697+ 000000                     _C2RXF12_EID3	equ	11155
  9698+ 000000                     _C2RXF12_EID4	equ	11156
  9699+ 000000                     _C2RXF12_EID5	equ	11157
  9700+ 000000                     _C2RXF12_EID6	equ	11158
  9701+ 000000                     _C2RXF12_EID7	equ	11159
  9702+ 000000                     _C2RXF12_EID8	equ	11160
  9703+ 000000                     _C2RXF12_EID9	equ	11161
  9704+ 000000                     _C2RXF12_EXIDE	equ	11139
  9705+ 000000                     _C2RXF12_SID0	equ	11141
  9706+ 000000                     _C2RXF12_SID1	equ	11142
  9707+ 000000                     _C2RXF12_SID10	equ	11151
  9708+ 000000                     _C2RXF12_SID2	equ	11143
  9709+ 000000                     _C2RXF12_SID3	equ	11144
  9710+ 000000                     _C2RXF12_SID4	equ	11145
  9711+ 000000                     _C2RXF12_SID5	equ	11146
  9712+ 000000                     _C2RXF12_SID6	equ	11147
  9713+ 000000                     _C2RXF12_SID7	equ	11148
  9714+ 000000                     _C2RXF12_SID8	equ	11149
  9715+ 000000                     _C2RXF12_SID9	equ	11150
  9716+ 000000                     _C2RXF13_EID0	equ	11184
  9717+ 000000                     _C2RXF13_EID1	equ	11185
  9718+ 000000                     _C2RXF13_EID10	equ	11194
  9719+ 000000                     _C2RXF13_EID11	equ	11195
  9720+ 000000                     _C2RXF13_EID12	equ	11196
  9721+ 000000                     _C2RXF13_EID13	equ	11197
  9722+ 000000                     _C2RXF13_EID14	equ	11198
  9723+ 000000                     _C2RXF13_EID15	equ	11199
  9724+ 000000                     _C2RXF13_EID16	equ	11168
  9725+ 000000                     _C2RXF13_EID17	equ	11169
  9726+ 000000                     _C2RXF13_EID2	equ	11186
  9727+ 000000                     _C2RXF13_EID3	equ	11187
  9728+ 000000                     _C2RXF13_EID4	equ	11188
  9729+ 000000                     _C2RXF13_EID5	equ	11189
  9730+ 000000                     _C2RXF13_EID6	equ	11190
  9731+ 000000                     _C2RXF13_EID7	equ	11191
  9732+ 000000                     _C2RXF13_EID8	equ	11192
  9733+ 000000                     _C2RXF13_EID9	equ	11193
  9734+ 000000                     _C2RXF13_EXIDE	equ	11171
  9735+ 000000                     _C2RXF13_SID0	equ	11173
  9736+ 000000                     _C2RXF13_SID1	equ	11174
  9737+ 000000                     _C2RXF13_SID10	equ	11183
  9738+ 000000                     _C2RXF13_SID2	equ	11175
  9739+ 000000                     _C2RXF13_SID3	equ	11176
  9740+ 000000                     _C2RXF13_SID4	equ	11177
  9741+ 000000                     _C2RXF13_SID5	equ	11178
  9742+ 000000                     _C2RXF13_SID6	equ	11179
  9743+ 000000                     _C2RXF13_SID7	equ	11180
  9744+ 000000                     _C2RXF13_SID8	equ	11181
  9745+ 000000                     _C2RXF13_SID9	equ	11182
  9746+ 000000                     _C2RXF14_EID0	equ	11216
  9747+ 000000                     _C2RXF14_EID1	equ	11217
  9748+ 000000                     _C2RXF14_EID10	equ	11226
  9749+ 000000                     _C2RXF14_EID11	equ	11227
  9750+ 000000                     _C2RXF14_EID12	equ	11228
  9751+ 000000                     _C2RXF14_EID13	equ	11229
  9752+ 000000                     _C2RXF14_EID14	equ	11230
  9753+ 000000                     _C2RXF14_EID15	equ	11231
  9754+ 000000                     _C2RXF14_EID16	equ	11200
  9755+ 000000                     _C2RXF14_EID17	equ	11201
  9756+ 000000                     _C2RXF14_EID2	equ	11218
  9757+ 000000                     _C2RXF14_EID3	equ	11219
  9758+ 000000                     _C2RXF14_EID4	equ	11220
  9759+ 000000                     _C2RXF14_EID5	equ	11221
  9760+ 000000                     _C2RXF14_EID6	equ	11222
  9761+ 000000                     _C2RXF14_EID7	equ	11223
  9762+ 000000                     _C2RXF14_EID8	equ	11224
  9763+ 000000                     _C2RXF14_EID9	equ	11225
  9764+ 000000                     _C2RXF14_EXIDE	equ	11203
  9765+ 000000                     _C2RXF14_SID0	equ	11205
  9766+ 000000                     _C2RXF14_SID1	equ	11206
  9767+ 000000                     _C2RXF14_SID10	equ	11215
  9768+ 000000                     _C2RXF14_SID2	equ	11207
  9769+ 000000                     _C2RXF14_SID3	equ	11208
  9770+ 000000                     _C2RXF14_SID4	equ	11209
  9771+ 000000                     _C2RXF14_SID5	equ	11210
  9772+ 000000                     _C2RXF14_SID6	equ	11211
  9773+ 000000                     _C2RXF14_SID7	equ	11212
  9774+ 000000                     _C2RXF14_SID8	equ	11213
  9775+ 000000                     _C2RXF14_SID9	equ	11214
  9776+ 000000                     _C2RXF15_EID0	equ	11248
  9777+ 000000                     _C2RXF15_EID1	equ	11249
  9778+ 000000                     _C2RXF15_EID10	equ	11258
  9779+ 000000                     _C2RXF15_EID11	equ	11259
  9780+ 000000                     _C2RXF15_EID12	equ	11260
  9781+ 000000                     _C2RXF15_EID13	equ	11261
  9782+ 000000                     _C2RXF15_EID14	equ	11262
  9783  000000                     _C2RXF15_EID15	equ	11263
  9784  000000                     _C2RXF15_EID16	equ	11232
  9785  000000                     _C2RXF15_EID17	equ	11233
  9786  000000                     _C2RXF15_EID2	equ	11250
  9787  000000                     _C2RXF15_EID3	equ	11251
  9788  000000                     _C2RXF15_EID4	equ	11252
  9789  000000                     _C2RXF15_EID5	equ	11253
  9790  000000                     _C2RXF15_EID6	equ	11254
  9791  000000                     _C2RXF15_EID7	equ	11255
  9792  000000                     _C2RXF15_EID8	equ	11256
  9793  000000                     _C2RXF15_EID9	equ	11257
  9794  000000                     _C2RXF15_EXIDE	equ	11235
  9795  000000                     _C2RXF15_SID0	equ	11237
  9796  000000                     _C2RXF15_SID1	equ	11238
  9797  000000                     _C2RXF15_SID10	equ	11247
  9798  000000                     _C2RXF15_SID2	equ	11239
  9799  000000                     _C2RXF15_SID3	equ	11240
  9800  000000                     _C2RXF15_SID4	equ	11241
  9801  000000                     _C2RXF15_SID5	equ	11242
  9802  000000                     _C2RXF15_SID6	equ	11243
  9803  000000                     _C2RXF15_SID7	equ	11244
  9804  000000                     _C2RXF15_SID8	equ	11245
  9805  000000                     _C2RXF15_SID9	equ	11246
  9806  000000                     _C2RXF1_EID16	equ	10784
  9807  000000                     _C2RXF1_EID17	equ	10785
  9808  000000                     _C2RXF1_EXIDE	equ	10787
  9809  000000                     _C2RXF1_SID0	equ	10789
  9810  000000                     _C2RXF1_SID1	equ	10790
  9811  000000                     _C2RXF1_SID10	equ	10799
  9812  000000                     _C2RXF1_SID2	equ	10791
  9813  000000                     _C2RXF1_SID3	equ	10792
  9814  000000                     _C2RXF1_SID4	equ	10793
  9815  000000                     _C2RXF1_SID5	equ	10794
  9816  000000                     _C2RXF1_SID6	equ	10795
  9817  000000                     _C2RXF1_SID7	equ	10796
  9818  000000                     _C2RXF1_SID8	equ	10797
  9819  000000                     _C2RXF1_SID9	equ	10798
  9820  000000                     _C2RXF2_EID16	equ	10816
  9821  000000                     _C2RXF2_EID17	equ	10817
  9822  000000                     _C2RXF2_EXIDE	equ	10819
  9823  000000                     _C2RXF2_SID0	equ	10821
  9824  000000                     _C2RXF2_SID1	equ	10822
  9825  000000                     _C2RXF2_SID10	equ	10831
  9826  000000                     _C2RXF2_SID2	equ	10823
  9827  000000                     _C2RXF2_SID3	equ	10824
  9828  000000                     _C2RXF2_SID4	equ	10825
  9829  000000                     _C2RXF2_SID5	equ	10826
  9830  000000                     _C2RXF2_SID6	equ	10827
  9831  000000                     _C2RXF2_SID7	equ	10828
  9832  000000                     _C2RXF2_SID8	equ	10829
  9833  000000                     _C2RXF2_SID9	equ	10830
  9834  000000                     _C2RXF3_EID16	equ	10848
  9835  000000                     _C2RXF3_EID17	equ	10849
  9836  000000                     _C2RXF3_EXIDE	equ	10851
  9837  000000                     _C2RXF3_SID0	equ	10853
  9838  000000                     _C2RXF3_SID1	equ	10854
  9839  000000                     _C2RXF3_SID10	equ	10863
  9840  000000                     _C2RXF3_SID2	equ	10855
  9841  000000                     _C2RXF3_SID3	equ	10856
  9842  000000                     _C2RXF3_SID4	equ	10857
  9843  000000                     _C2RXF3_SID5	equ	10858
  9844  000000                     _C2RXF3_SID6	equ	10859
  9845  000000                     _C2RXF3_SID7	equ	10860
  9846  000000                     _C2RXF3_SID8	equ	10861
  9847  000000                     _C2RXF3_SID9	equ	10862
  9848  000000                     _C2RXF4_EID16	equ	10880
  9849  000000                     _C2RXF4_EID17	equ	10881
  9850  000000                     _C2RXF4_EXIDE	equ	10883
  9851  000000                     _C2RXF4_SID0	equ	10885
  9852  000000                     _C2RXF4_SID1	equ	10886
  9853  000000                     _C2RXF4_SID10	equ	10895
  9854  000000                     _C2RXF4_SID2	equ	10887
  9855  000000                     _C2RXF4_SID3	equ	10888
  9856  000000                     _C2RXF4_SID4	equ	10889
  9857  000000                     _C2RXF4_SID5	equ	10890
  9858  000000                     _C2RXF4_SID6	equ	10891
  9859  000000                     _C2RXF4_SID7	equ	10892
  9860  000000                     _C2RXF4_SID8	equ	10893
  9861  000000                     _C2RXF4_SID9	equ	10894
  9862  000000                     _C2RXF5_EID16	equ	10912
  9863  000000                     _C2RXF5_EID17	equ	10913
  9864  000000                     _C2RXF5_EXIDE	equ	10915
  9865  000000                     _C2RXF5_SID0	equ	10917
  9866  000000                     _C2RXF5_SID1	equ	10918
  9867  000000                     _C2RXF5_SID10	equ	10927
  9868  000000                     _C2RXF5_SID2	equ	10919
  9869  000000                     _C2RXF5_SID3	equ	10920
  9870  000000                     _C2RXF5_SID4	equ	10921
  9871  000000                     _C2RXF5_SID5	equ	10922
  9872  000000                     _C2RXF5_SID6	equ	10923
  9873  000000                     _C2RXF5_SID7	equ	10924
  9874  000000                     _C2RXF5_SID8	equ	10925
  9875  000000                     _C2RXF5_SID9	equ	10926
  9876  000000                     _C2RXF6_EID16	equ	10944
  9877  000000                     _C2RXF6_EID17	equ	10945
  9878  000000                     _C2RXF6_EXIDE	equ	10947
  9879  000000                     _C2RXF6_SID0	equ	10949
  9880  000000                     _C2RXF6_SID1	equ	10950
  9881  000000                     _C2RXF6_SID10	equ	10959
  9882  000000                     _C2RXF6_SID2	equ	10951
  9883  000000                     _C2RXF6_SID3	equ	10952
  9884  000000                     _C2RXF6_SID4	equ	10953
  9885  000000                     _C2RXF6_SID5	equ	10954
  9886  000000                     _C2RXF6_SID6	equ	10955
  9887  000000                     _C2RXF6_SID7	equ	10956
  9888  000000                     _C2RXF6_SID8	equ	10957
  9889  000000                     _C2RXF6_SID9	equ	10958
  9890  000000                     _C2RXF7_EID16	equ	10976
  9891  000000                     _C2RXF7_EID17	equ	10977
  9892  000000                     _C2RXF7_EXIDE	equ	10979
  9893  000000                     _C2RXF7_SID0	equ	10981
  9894  000000                     _C2RXF7_SID1	equ	10982
  9895  000000                     _C2RXF7_SID10	equ	10991
  9896  000000                     _C2RXF7_SID2	equ	10983
  9897  000000                     _C2RXF7_SID3	equ	10984
  9898  000000                     _C2RXF7_SID4	equ	10985
  9899  000000                     _C2RXF7_SID5	equ	10986
  9900  000000                     _C2RXF7_SID6	equ	10987
  9901  000000                     _C2RXF7_SID7	equ	10988
  9902  000000                     _C2RXF7_SID8	equ	10989
  9903  000000                     _C2RXF7_SID9	equ	10990
  9904  000000                     _C2RXF8_EID16	equ	11008
  9905  000000                     _C2RXF8_EID17	equ	11009
  9906  000000                     _C2RXF8_EXIDE	equ	11011
  9907  000000                     _C2RXF8_SID0	equ	11013
  9908  000000                     _C2RXF8_SID1	equ	11014
  9909  000000                     _C2RXF8_SID10	equ	11023
  9910  000000                     _C2RXF8_SID2	equ	11015
  9911  000000                     _C2RXF8_SID3	equ	11016
  9912  000000                     _C2RXF8_SID4	equ	11017
  9913  000000                     _C2RXF8_SID5	equ	11018
  9914  000000                     _C2RXF8_SID6	equ	11019
  9915  000000                     _C2RXF8_SID7	equ	11020
  9916  000000                     _C2RXF8_SID8	equ	11021
  9917  000000                     _C2RXF8_SID9	equ	11022
  9918  000000                     _C2RXF9_EID16	equ	11040
  9919  000000                     _C2RXF9_EID17	equ	11041
  9920  000000                     _C2RXF9_EXIDE	equ	11043
  9921  000000                     _C2RXF9_SID0	equ	11045
  9922  000000                     _C2RXF9_SID1	equ	11046
  9923  000000                     _C2RXF9_SID10	equ	11055
  9924  000000                     _C2RXF9_SID2	equ	11047
  9925  000000                     _C2RXF9_SID3	equ	11048
  9926  000000                     _C2RXF9_SID4	equ	11049
  9927  000000                     _C2RXF9_SID5	equ	11050
  9928  000000                     _C2RXF9_SID6	equ	11051
  9929  000000                     _C2RXF9_SID7	equ	11052
  9930  000000                     _C2RXF9_SID8	equ	11053
  9931  000000                     _C2RXF9_SID9	equ	11054
  9932  000000                     _C2RXIE	equ	1239
  9933  000000                     _C2RXIF	equ	1111
  9934  000000                     _C2RXIP0	equ	1532
  9935  000000                     _C2RXIP1	equ	1533
  9936  000000                     _C2RXIP2	equ	1534
  9937  000000                     _C2RXM0_EID16	equ	10624
  9938  000000                     _C2RXM0_EID17	equ	10625
  9939  000000                     _C2RXM0_MIDE	equ	10627
  9940  000000                     _C2RXM0_SID0	equ	10629
  9941  000000                     _C2RXM0_SID1	equ	10630
  9942  000000                     _C2RXM0_SID10	equ	10639
  9943  000000                     _C2RXM0_SID2	equ	10631
  9944  000000                     _C2RXM0_SID3	equ	10632
  9945  000000                     _C2RXM0_SID4	equ	10633
  9946  000000                     _C2RXM0_SID5	equ	10634
  9947  000000                     _C2RXM0_SID6	equ	10635
  9948  000000                     _C2RXM0_SID7	equ	10636
  9949  000000                     _C2RXM0_SID8	equ	10637
  9950  000000                     _C2RXM0_SID9	equ	10638
  9951  000000                     _C2RXM1_EID16	equ	10656
  9952  000000                     _C2RXM1_EID17	equ	10657
  9953  000000                     _C2RXM1_MIDE	equ	10659
  9954  000000                     _C2RXM1_SID0	equ	10661
  9955  000000                     _C2RXM1_SID1	equ	10662
  9956  000000                     _C2RXM1_SID10	equ	10671
  9957  000000                     _C2RXM1_SID2	equ	10663
  9958  000000                     _C2RXM1_SID3	equ	10664
  9959  000000                     _C2RXM1_SID4	equ	10665
  9960  000000                     _C2RXM1_SID5	equ	10666
  9961  000000                     _C2RXM1_SID6	equ	10667
  9962  000000                     _C2RXM1_SID7	equ	10668
  9963  000000                     _C2RXM1_SID8	equ	10669
  9964  000000                     _C2RXM1_SID9	equ	10670
  9965  000000                     _C2RXM2_EID16	equ	10688
  9966  000000                     _C2RXM2_EID17	equ	10689
  9967  000000                     _C2RXM2_MIDE	equ	10691
  9968  000000                     _C2RXM2_SID0	equ	10693
  9969  000000                     _C2RXM2_SID1	equ	10694
  9970  000000                     _C2RXM2_SID10	equ	10703
  9971  000000                     _C2RXM2_SID2	equ	10695
  9972  000000                     _C2RXM2_SID3	equ	10696
  9973  000000                     _C2RXM2_SID4	equ	10697
  9974  000000                     _C2RXM2_SID5	equ	10698
  9975  000000                     _C2RXM2_SID6	equ	10699
  9976  000000                     _C2RXM2_SID7	equ	10700
  9977  000000                     _C2RXM2_SID8	equ	10701
  9978  000000                     _C2RXM2_SID9	equ	10702
  9979  000000                     _C2TXIE	equ	1255
  9980  000000                     _C2TXIF	equ	1127
  9981  000000                     _C2TXIP0	equ	1596
  9982  000000                     _C2TXIP1	equ	1597
  9983  000000                     _C2TXIP2	equ	1598
  9984  000000                     _C2_ABAT	equ	10252
  9985  000000                     _C2_CANCAP	equ	10243
  9986  000000                     _C2_CANCKS	equ	10251
  9987  000000                     _C2_CSIDL	equ	10253
  9988  000000                     _C2_DMABS0	equ	10301
  9989  000000                     _C2_DMABS1	equ	10302
  9990  000000                     _C2_DMABS2	equ	10303
  9991  000000                     _C2_DNCNT0	equ	10256
  9992  000000                     _C2_DNCNT1	equ	10257
  9993  000000                     _C2_DNCNT2	equ	10258
  9994  000000                     _C2_DNCNT3	equ	10259
  9995  000000                     _C2_DNCNT4	equ	10260
  9996  000000                     _C2_ERRIE	equ	10341
  9997  000000                     _C2_ERRIF	equ	10325
  9998  000000                     _C2_EWARN	equ	10328
  9999  000000                     _C2_F0BP0	equ	10496
 10000  000000                     _C2_F0BP1	equ	10497
 10001  000000                     _C2_F0BP2	equ	10498
 10002  000000                     _C2_F0BP3	equ	10499
 10003  000000                     _C2_F0MSK0	equ	10432
 10004  000000                     _C2_F0MSK1	equ	10433
 10005  000000                     _C2_F10BP0	equ	10536
 10006  000000                     _C2_F10BP1	equ	10537
 10007  000000                     _C2_F10BP2	equ	10538
 10008  000000                     _C2_F10BP3	equ	10539
 10009  000000                     _C2_F10MSK0	equ	10452
 10010  000000                     _C2_F10MSK1	equ	10453
 10011  000000                     _C2_F11BP0	equ	10540
 10012  000000                     _C2_F11BP1	equ	10541
 10013  000000                     _C2_F11BP2	equ	10542
 10014  000000                     _C2_F11BP3	equ	10543
 10015  000000                     _C2_F11MSK0	equ	10454
 10016  000000                     _C2_F11MSK1	equ	10455
 10017  000000                     _C2_F12BP0	equ	10544
 10018  000000                     _C2_F12BP1	equ	10545
 10019  000000                     _C2_F12BP2	equ	10546
 10020  000000                     _C2_F12BP3	equ	10547
 10021  000000                     _C2_F12MSK0	equ	10456
 10022  000000                     _C2_F12MSK1	equ	10457
 10023  000000                     _C2_F13BP0	equ	10548
 10024  000000                     _C2_F13BP1	equ	10549
 10025  000000                     _C2_F13BP2	equ	10550
 10026  000000                     _C2_F13BP3	equ	10551
 10027  000000                     _C2_F13MSK0	equ	10458
 10028  000000                     _C2_F13MSK1	equ	10459
 10029  000000                     _C2_F14BP0	equ	10552
 10030  000000                     _C2_F14BP1	equ	10553
 10031  000000                     _C2_F14BP2	equ	10554
 10032  000000                     _C2_F14BP3	equ	10555
 10033  000000                     _C2_F14MSK0	equ	10460
 10034  000000                     _C2_F14MSK1	equ	10461
 10035  000000                     _C2_F15BP0	equ	10556
 10036  000000                     _C2_F15BP1	equ	10557
 10037  000000                     _C2_F15BP2	equ	10558
 10038  000000                     _C2_F15BP3	equ	10559
 10039  000000                     _C2_F15MSK0	equ	10462
 10040  000000                     _C2_F15MSK1	equ	10463
 10041  000000                     _C2_F1BP0	equ	10500
 10042  000000                     _C2_F1BP1	equ	10501
 10043  000000                     _C2_F1BP2	equ	10502
 10044  000000                     _C2_F1BP3	equ	10503
 10045  000000                     _C2_F1MSK0	equ	10434
 10046  000000                     _C2_F1MSK1	equ	10435
 10047  000000                     _C2_F2BP0	equ	10504
 10048  000000                     _C2_F2BP1	equ	10505
 10049  000000                     _C2_F2BP2	equ	10506
 10050  000000                     _C2_F2BP3	equ	10507
 10051  000000                     _C2_F2MSK0	equ	10436
 10052  000000                     _C2_F2MSK1	equ	10437
 10053  000000                     _C2_F3BP0	equ	10508
 10054  000000                     _C2_F3BP1	equ	10509
 10055  000000                     _C2_F3BP2	equ	10510
 10056  000000                     _C2_F3BP3	equ	10511
 10057  000000                     _C2_F3MSK0	equ	10438
 10058  000000                     _C2_F3MSK1	equ	10439
 10059  000000                     _C2_F4BP0	equ	10512
 10060  000000                     _C2_F4BP1	equ	10513
 10061  000000                     _C2_F4BP2	equ	10514
 10062  000000                     _C2_F4BP3	equ	10515
 10063  000000                     _C2_F4MSK0	equ	10440
 10064  000000                     _C2_F4MSK1	equ	10441
 10065  000000                     _C2_F5BP0	equ	10516
 10066  000000                     _C2_F5BP1	equ	10517
 10067  000000                     _C2_F5BP2	equ	10518
 10068  000000                     _C2_F5BP3	equ	10519
 10069  000000                     _C2_F5MSK0	equ	10442
 10070  000000                     _C2_F5MSK1	equ	10443
 10071  000000                     _C2_F6BP0	equ	10520
 10072  000000                     _C2_F6BP1	equ	10521
 10073  000000                     _C2_F6BP2	equ	10522
 10074  000000                     _C2_F6BP3	equ	10523
 10075  000000                     _C2_F6MSK0	equ	10444
 10076  000000                     _C2_F6MSK1	equ	10445
 10077  000000                     _C2_F7BP0	equ	10524
 10078  000000                     _C2_F7BP1	equ	10525
 10079  000000                     _C2_F7BP2	equ	10526
 10080  000000                     _C2_F7BP3	equ	10527
 10081  000000                     _C2_F7MSK0	equ	10446
 10082  000000                     _C2_F7MSK1	equ	10447
 10083  000000                     _C2_F8BP0	equ	10528
 10084  000000                     _C2_F8BP1	equ	10529
 10085  000000                     _C2_F8BP2	equ	10530
 10086  000000                     _C2_F8BP3	equ	10531
 10087  000000                     _C2_F8MSK0	equ	10448
 10088  000000                     _C2_F8MSK1	equ	10449
 10089  000000                     _C2_F9BP0	equ	10532
 10090  000000                     _C2_F9BP1	equ	10533
 10091  000000                     _C2_F9BP2	equ	10534
 10092  000000                     _C2_F9BP3	equ	10535
 10093  000000                     _C2_F9MSK0	equ	10450
 10094  000000                     _C2_F9MSK1	equ	10451
 10095  000000                     _C2_FBP0	equ	10312
 10096  000000                     _C2_FBP1	equ	10313
 10097  000000                     _C2_FBP2	equ	10314
 10098  000000                     _C2_FBP3	equ	10315
 10099  000000                     _C2_FBP4	equ	10316
 10100  000000                     _C2_FBP5	equ	10317
 10101  000000                     _C2_FIFOIE	equ	10339
 10102  000000                     _C2_FIFOIF	equ	10323
 10103  000000                     _C2_FILHIT0	equ	10280
 10104  000000                     _C2_FILHIT1	equ	10281
 10105  000000                     _C2_FILHIT2	equ	10282
 10106  000000                     _C2_FILHIT3	equ	10283
 10107  000000                     _C2_FILHIT4	equ	10284
 10108  000000                     _C2_FNRB0	equ	10304
 10109  000000                     _C2_FNRB1	equ	10305
 10110  000000                     _C2_FNRB2	equ	10306
 10111  000000                     _C2_FNRB3	equ	10307
 10112  000000                     _C2_FNRB4	equ	10308
 10113  000000                     _C2_FNRB5	equ	10309
 10114  000000                     _C2_FSA0	equ	10288
 10115  000000                     _C2_FSA1	equ	10289
 10116  000000                     _C2_FSA2	equ	10290
 10117  000000                     _C2_FSA3	equ	10291
 10118  000000                     _C2_FSA4	equ	10292
 10119  000000                     _C2_ICODE0	equ	10272
 10120  000000                     _C2_ICODE1	equ	10273
 10121  000000                     _C2_ICODE2	equ	10274
 10122  000000                     _C2_ICODE3	equ	10275
 10123  000000                     _C2_ICODE4	equ	10276
 10124  000000                     _C2_ICODE5	equ	10277
 10125  000000                     _C2_ICODE6	equ	10278
 10126  000000                     _C2_IVRIE	equ	10343
 10127  000000                     _C2_IVRIF	equ	10327
 10128  000000                     _C2_OPMODE0	equ	10245
 10129  000000                     _C2_OPMODE1	equ	10246
 10130  000000                     _C2_OPMODE2	equ	10247
 10131  000000                     _C2_RBIE	equ	10337
 10132  000000                     _C2_RBIF	equ	10321
 10133  000000                     _C2_RBOVIE	equ	10338
 10134  000000                     _C2_RBOVIF	equ	10322
 10135  000000                     _C2_REQOP0	equ	10248
 10136  000000                     _C2_REQOP1	equ	10249
 10137  000000                     _C2_REQOP2	equ	10250
 10138  000000                     _C2_RERRCNT0	equ	10352
 10139  000000                     _C2_RERRCNT1	equ	10353
 10140  000000                     _C2_RERRCNT2	equ	10354
 10141  000000                     _C2_RERRCNT3	equ	10355
 10142  000000                     _C2_RERRCNT4	equ	10356
 10143  000000                     _C2_RERRCNT5	equ	10357
 10144  000000                     _C2_RERRCNT6	equ	10358
 10145  000000                     _C2_RERRCNT7	equ	10359
 10146  000000                     _C2_RTREN0	equ	10626
 10147  000000                     _C2_RTREN1	equ	10634
 10148  000000                     _C2_RTREN2	equ	10642
 10149  000000                     _C2_RTREN3	equ	10650
 10150  000000                     _C2_RTREN4	equ	10658
 10151  000000                     _C2_RTREN5	equ	10666
 10152  000000                     _C2_RTREN6	equ	10674
 10153  000000                     _C2_RTREN7	equ	10682
 10154  000000                     _C2_RXBP	equ	10331
 10155  000000                     _C2_RXWAR	equ	10329
 10156  000000                     _C2_TBIE	equ	10336
 10157  000000                     _C2_TBIF	equ	10320
 10158  000000                     _C2_TERRCNT0	equ	10360
 10159  000000                     _C2_TERRCNT1	equ	10361
 10160  000000                     _C2_TERRCNT2	equ	10362
 10161  000000                     _C2_TERRCNT3	equ	10363
 10162  000000                     _C2_TERRCNT4	equ	10364
 10163  000000                     _C2_TERRCNT5	equ	10365
 10164  000000                     _C2_TERRCNT6	equ	10366
 10165  000000                     _C2_TERRCNT7	equ	10367
 10166  000000                     _C2_TX0PRI0	equ	10624
 10167  000000                     _C2_TX0PRI1	equ	10625
 10168  000000                     _C2_TX1PRI0	equ	10632
 10169  000000                     _C2_TX1PRI1	equ	10633
 10170  000000                     _C2_TX2PRI0	equ	10640
 10171  000000                     _C2_TX2PRI1	equ	10641
 10172  000000                     _C2_TX3PRI0	equ	10648
 10173  000000                     _C2_TX3PRI1	equ	10649
 10174  000000                     _C2_TX4PRI0	equ	10656
 10175  000000                     _C2_TX4PRI1	equ	10657
 10176  000000                     _C2_TX5PRI0	equ	10664
 10177  000000                     _C2_TX5PRI1	equ	10665
 10178  000000                     _C2_TX6PRI0	equ	10672
 10179  000000                     _C2_TX6PRI1	equ	10673
 10180  000000                     _C2_TX7PRI0	equ	10680
 10181  000000                     _C2_TX7PRI1	equ	10681
 10182  000000                     _C2_TXABT0	equ	10630
 10183  000000                     _C2_TXABT1	equ	10638
 10184  000000                     _C2_TXABT2	equ	10646
 10185  000000                     _C2_TXABT3	equ	10654
 10186  000000                     _C2_TXABT4	equ	10662
 10187  000000                     _C2_TXABT5	equ	10670
 10188  000000                     _C2_TXABT6	equ	10678
 10189  000000                     _C2_TXABT7	equ	10686
 10190  000000                     _C2_TXBO	equ	10333
 10191  000000                     _C2_TXBP	equ	10332
 10192  000000                     _C2_TXEN0	equ	10631
 10193  000000                     _C2_TXEN1	equ	10639
 10194  000000                     _C2_TXEN2	equ	10647
 10195  000000                     _C2_TXEN3	equ	10655
 10196  000000                     _C2_TXEN4	equ	10663
 10197  000000                     _C2_TXEN5	equ	10671
 10198  000000                     _C2_TXEN6	equ	10679
 10199  000000                     _C2_TXEN7	equ	10687
 10200  000000                     _C2_TXERR0	equ	10628
 10201  000000                     _C2_TXERR1	equ	10636
 10202  000000                     _C2_TXERR2	equ	10644
 10203  000000                     _C2_TXERR3	equ	10652
 10204  000000                     _C2_TXERR4	equ	10660
 10205  000000                     _C2_TXERR5	equ	10668
 10206  000000                     _C2_TXERR6	equ	10676
 10207  000000                     _C2_TXERR7	equ	10684
 10208  000000                     _C2_TXLARB0	equ	10629
 10209  000000                     _C2_TXLARB1	equ	10637
 10210  000000                     _C2_TXLARB2	equ	10645
 10211  000000                     _C2_TXLARB3	equ	10653
 10212  000000                     _C2_TXLARB4	equ	10661
 10213  000000                     _C2_TXLARB5	equ	10669
 10214  000000                     _C2_TXLARB6	equ	10677
 10215  000000                     _C2_TXLARB7	equ	10685
 10216  000000                     _C2_TXREQ0	equ	10627
 10217  000000                     _C2_TXREQ1	equ	10635
 10218  000000                     _C2_TXREQ2	equ	10643
 10219  000000                     _C2_TXREQ3	equ	10651
 10220  000000                     _C2_TXREQ4	equ	10659
 10221  000000                     _C2_TXREQ5	equ	10667
 10222  000000                     _C2_TXREQ6	equ	10675
 10223  000000                     _C2_TXREQ7	equ	10683
 10224  000000                     _C2_TXWAR	equ	10330
 10225  000000                     _C2_WAKIE	equ	10342
 10226  000000                     _C2_WAKIF	equ	10326
 10227  000000                     _C2_WIN	equ	10240
 10228  000000                     _CF	equ	14867
 10229  000000                     _CLKLOCK	equ	14871
 10230  000000                     _CN0IE	equ	768
 10231  000000                     _CN0PUE	equ	832
 10232  000000                     _CN10IE	equ	778
 10233  000000                     _CN10PUE	equ	842
 10234  000000                     _CN11IE	equ	779
 10235  000000                     _CN11PUE	equ	843
 10236  000000                     _CN12IE	equ	780
 10237  000000                     _CN12PUE	equ	844
 10238  000000                     _CN13IE	equ	781
 10239  000000                     _CN13PUE	equ	845
 10240  000000                     _CN14IE	equ	782
 10241  000000                     _CN14PUE	equ	846
 10242  000000                     _CN15IE	equ	783
 10243  000000                     _CN15PUE	equ	847
 10244  000000                     _CN16IE	equ	784
 10245  000000                     _CN16PUE	equ	848
 10246  000000                     _CN17IE	equ	785
 10247  000000                     _CN17PUE	equ	849
 10248  000000                     _CN18IE	equ	786
 10249  000000                     _CN18PUE	equ	850
 10250  000000                     _CN19IE	equ	787
 10251  000000                     _CN19PUE	equ	851
 10252  000000                     _CN1IE	equ	769
 10253  000000                     _CN1PUE	equ	833
 10254  000000                     _CN20IE	equ	788
 10255  000000                     _CN20PUE	equ	852
 10256  000000                     _CN21IE	equ	789
 10257  000000                     _CN21PUE	equ	853
 10258  000000                     _CN22IE	equ	790
 10259  000000                     _CN22PUE	equ	854
 10260  000000                     _CN23IE	equ	791
 10261  000000                     _CN23PUE	equ	855
 10262  000000                     _CN2IE	equ	770
 10263  000000                     _CN2PUE	equ	834
 10264  000000                     _CN3IE	equ	771
 10265  000000                     _CN3PUE	equ	835
 10266  000000                     _CN4IE	equ	772
 10267  000000                     _CN4PUE	equ	836
 10268  000000                     _CN5IE	equ	773
 10269  000000                     _CN5PUE	equ	837
 10270  000000                     _CN6IE	equ	774
 10271  000000                     _CN6PUE	equ	838
 10272  000000                     _CN7IE	equ	775
 10273  000000                     _CN7PUE	equ	839
 10274  000000                     _CN8IE	equ	776
 10275  000000                     _CN8PUE	equ	840
 10276  000000                     _CN9IE	equ	777
 10277  000000                     _CN9PUE	equ	841
 10278  000000                     _CNIE	equ	1203
 10279  000000                     _CNIF	equ	1075
 10280  000000                     _CNIP0	equ	1388
 10281  000000                     _CNIP1	equ	1389
 10282  000000                     _CNIP2	equ	1390
 10283  000000                     _COSCG0	equ	14876
 10284  000000                     _COSCG1	equ	14877
 10285  000000                     _COSCG2	equ	14878
 10286  000000                     _CSSH0	equ	6512
 10287  000000                     _CSSH1	equ	6513
 10288  000000                     _CSSH10	equ	6522
 10289  000000                     _CSSH11	equ	6523
 10290  000000                     _CSSH12	equ	6524
 10291  000000                     _CSSH13	equ	6525
 10292  000000                     _CSSH14	equ	6526
 10293  000000                     _CSSH15	equ	6527
 10294  000000                     _CSSH2	equ	6514
 10295  000000                     _CSSH3	equ	6515
 10296  000000                     _CSSH4	equ	6516
 10297  000000                     _CSSH5	equ	6517
 10298  000000                     _CSSH6	equ	6518
 10299  000000                     _CSSH7	equ	6519
 10300  000000                     _CSSH8	equ	6520
 10301  000000                     _CSSH9	equ	6521
 10302  000000                     _DC	equ	536
 10303  000000                     _DISI	equ	1054
 10304  000000                     _DIVISOR0	equ	14896
 10305  000000                     _DIVISOR1	equ	14897
 10306  000000                     _DIVISOR2	equ	14898
 10307  000000                     _DIVISOR3	equ	14899
 10308  000000                     _DIVISOR4	equ	14900
 10309  000000                     _DIVISOR5	equ	14901
 10310  000000                     _DIVISOR6	equ	14902
 10311  000000                     _DIVISOR7	equ	14903
 10312  000000                     _DIVISOR8	equ	14904
 10313  000000                     _DMA0IE	equ	1188
 10314  000000                     _DMA0IF	equ	1060
 10315  000000                     _DMA0IP0	equ	1328
 10316  000000                     _DMA0IP1	equ	1329
 10317  000000                     _DMA0IP2	equ	1330
 10318  000000                     _DMA0_AMODE0	equ	7172
 10319  000000                     _DMA0_AMODE1	equ	7173
 10320  000000                     _DMA0_CHEN	equ	7183
 10321  000000                     _DMA0_DIR	equ	7181
 10322  000000                     _DMA0_FORCE	equ	7199
 10323  000000                     _DMA0_HALF	equ	7180
 10324  000000                     _DMA0_IRQSEL0	equ	7184
 10325  000000                     _DMA0_IRQSEL1	equ	7185
 10326  000000                     _DMA0_IRQSEL2	equ	7186
 10327  000000                     _DMA0_IRQSEL3	equ	7187
 10328  000000                     _DMA0_IRQSEL4	equ	7188
 10329  000000                     _DMA0_IRQSEL5	equ	7189
 10330  000000                     _DMA0_IRQSEL6	equ	7190
 10331  000000                     _DMA0_MODE0	equ	7168
 10332  000000                     _DMA0_MODE1	equ	7169
 10333  000000                     _DMA0_NULLW	equ	7179
 10334  000000                     _DMA0_SIZE	equ	7182
 10335  000000                     _DMA1IE	equ	1198
 10336  000000                     _DMA1IF	equ	1070
 10337  000000                     _DMA1IP0	equ	1368
 10338  000000                     _DMA1IP1	equ	1369
 10339  000000                     _DMA1IP2	equ	1370
 10340  000000                     _DMA1_AMODE0	equ	7268
 10341  000000                     _DMA1_AMODE1	equ	7269
 10342  000000                     _DMA1_CHEN	equ	7279
 10343  000000                     _DMA1_DIR	equ	7277
 10344  000000                     _DMA1_FORCE	equ	7295
 10345  000000                     _DMA1_HALF	equ	7276
 10346  000000                     _DMA1_IRQSEL0	equ	7280
 10347  000000                     _DMA1_IRQSEL1	equ	7281
 10348  000000                     _DMA1_IRQSEL2	equ	7282
 10349  000000                     _DMA1_IRQSEL3	equ	7283
 10350  000000                     _DMA1_IRQSEL4	equ	7284
 10351  000000                     _DMA1_IRQSEL5	equ	7285
 10352  000000                     _DMA1_IRQSEL6	equ	7286
 10353  000000                     _DMA1_MODE0	equ	7264
 10354  000000                     _DMA1_MODE1	equ	7265
 10355  000000                     _DMA1_NULLW	equ	7275
 10356  000000                     _DMA1_SIZE	equ	7278
 10357  000000                     _DMA2IE	equ	1208
 10358  000000                     _DMA2IF	equ	1080
 10359  000000                     _DMA2IP0	equ	1408
 10360  000000                     _DMA2IP1	equ	1409
 10361  000000                     _DMA2IP2	equ	1410
 10362  000000                     _DMA2_AMODE0	equ	7364
 10363  000000                     _DMA2_AMODE1	equ	7365
 10364  000000                     _DMA2_CHEN	equ	7375
 10365  000000                     _DMA2_DIR	equ	7373
 10366  000000                     _DMA2_FORCE	equ	7391
 10367  000000                     _DMA2_HALF	equ	7372
 10368  000000                     _DMA2_IRQSEL0	equ	7376
 10369  000000                     _DMA2_IRQSEL1	equ	7377
 10370  000000                     _DMA2_IRQSEL2	equ	7378
 10371  000000                     _DMA2_IRQSEL3	equ	7379
 10372  000000                     _DMA2_IRQSEL4	equ	7380
 10373  000000                     _DMA2_IRQSEL5	equ	7381
 10374  000000                     _DMA2_IRQSEL6	equ	7382
 10375  000000                     _DMA2_MODE0	equ	7360
 10376  000000                     _DMA2_MODE1	equ	7361
 10377  000000                     _DMA2_NULLW	equ	7371
 10378  000000                     _DMA2_SIZE	equ	7374
 10379  000000                     _DMA3IE	equ	1220
 10380  000000                     _DMA3IF	equ	1092
 10381  000000                     _DMA3IP0	equ	1456
 10382  000000                     _DMA3IP1	equ	1457
 10383  000000                     _DMA3IP2	equ	1458
 10384  000000                     _DMA3_AMODE0	equ	7460
 10385  000000                     _DMA3_AMODE1	equ	7461
 10386  000000                     _DMA3_CHEN	equ	7471
 10387  000000                     _DMA3_DIR	equ	7469
 10388  000000                     _DMA3_FORCE	equ	7487
 10389  000000                     _DMA3_HALF	equ	7468
 10390  000000                     _DMA3_IRQSEL0	equ	7472
 10391  000000                     _DMA3_IRQSEL1	equ	7473
 10392  000000                     _DMA3_IRQSEL2	equ	7474
 10393  000000                     _DMA3_IRQSEL3	equ	7475
 10394  000000                     _DMA3_IRQSEL4	equ	7476
 10395  000000                     _DMA3_IRQSEL5	equ	7477
 10396  000000                     _DMA3_IRQSEL6	equ	7478
 10397  000000                     _DMA3_MODE0	equ	7456
 10398  000000                     _DMA3_MODE1	equ	7457
 10399  000000                     _DMA3_NULLW	equ	7467
 10400  000000                     _DMA3_SIZE	equ	7470
 10401  000000                     _DMA4IE	equ	1230
 10402  000000                     _DMA4IF	equ	1102
 10403  000000                     _DMA4IP0	equ	1496
 10404  000000                     _DMA4IP1	equ	1497
 10405  000000                     _DMA4IP2	equ	1498
 10406  000000                     _DMA4_AMODE0	equ	7556
 10407  000000                     _DMA4_AMODE1	equ	7557
 10408  000000                     _DMA4_CHEN	equ	7567
 10409  000000                     _DMA4_DIR	equ	7565
 10410  000000                     _DMA4_FORCE	equ	7583
 10411  000000                     _DMA4_HALF	equ	7564
 10412  000000                     _DMA4_IRQSEL0	equ	7568
 10413  000000                     _DMA4_IRQSEL1	equ	7569
 10414  000000                     _DMA4_IRQSEL2	equ	7570
 10415  000000                     _DMA4_IRQSEL3	equ	7571
 10416  000000                     _DMA4_IRQSEL4	equ	7572
 10417  000000                     _DMA4_IRQSEL5	equ	7573
 10418  000000                     _DMA4_IRQSEL6	equ	7574
 10419  000000                     _DMA4_MODE0	equ	7552
 10420  000000                     _DMA4_MODE1	equ	7553
 10421  000000                     _DMA4_NULLW	equ	7563
 10422  000000                     _DMA4_SIZE	equ	7566
 10423  000000                     _DMA5IE	equ	1245
 10424  000000                     _DMA5IF	equ	1117
 10425  000000                     _DMA5IP0	equ	1556
 10426  000000                     _DMA5IP1	equ	1557
 10427  000000                     _DMA5IP2	equ	1558
 10428  000000                     _DMA5_AMODE0	equ	7652
 10429  000000                     _DMA5_AMODE1	equ	7653
 10430  000000                     _DMA5_CHEN	equ	7663
 10431  000000                     _DMA5_DIR	equ	7661
 10432  000000                     _DMA5_FORCE	equ	7679
 10433  000000                     _DMA5_HALF	equ	7660
 10434  000000                     _DMA5_IRQSEL0	equ	7664
 10435  000000                     _DMA5_IRQSEL1	equ	7665
 10436  000000                     _DMA5_IRQSEL2	equ	7666
 10437  000000                     _DMA5_IRQSEL3	equ	7667
 10438  000000                     _DMA5_IRQSEL4	equ	7668
 10439  000000                     _DMA5_IRQSEL5	equ	7669
 10440  000000                     _DMA5_IRQSEL6	equ	7670
 10441  000000                     _DMA5_MODE0	equ	7648
 10442  000000                     _DMA5_MODE1	equ	7649
 10443  000000                     _DMA5_NULLW	equ	7659
 10444  000000                     _DMA5_SIZE	equ	7662
 10445  000000                     _DMA6IE	equ	1252
 10446  000000                     _DMA6IF	equ	1124
 10447  000000                     _DMA6IP0	equ	1584
 10448  000000                     _DMA6IP1	equ	1585
 10449  000000                     _DMA6IP2	equ	1586
 10450  000000                     _DMA6_AMODE0	equ	7748
 10451  000000                     _DMA6_AMODE1	equ	7749
 10452  000000                     _DMA6_CHEN	equ	7759
 10453  000000                     _DMA6_DIR	equ	7757
 10454  000000                     _DMA6_FORCE	equ	7775
 10455  000000                     _DMA6_HALF	equ	7756
 10456  000000                     _DMA6_IRQSEL0	equ	7760
 10457  000000                     _DMA6_IRQSEL1	equ	7761
 10458  000000                     _DMA6_IRQSEL2	equ	7762
 10459  000000                     _DMA6_IRQSEL3	equ	7763
 10460  000000                     _DMA6_IRQSEL4	equ	7764
 10461  000000                     _DMA6_IRQSEL5	equ	7765
 10462  000000                     _DMA6_IRQSEL6	equ	7766
 10463  000000                     _DMA6_MODE0	equ	7744
 10464  000000                     _DMA6_MODE1	equ	7745
 10465  000000                     _DMA6_NULLW	equ	7755
 10466  000000                     _DMA6_SIZE	equ	7758
 10467  000000                     _DMA7IE	equ	1253
 10468  000000                     _DMA7IF	equ	1125
 10469  000000                     _DMA7IP0	equ	1588
 10470  000000                     _DMA7IP1	equ	1589
 10471  000000                     _DMA7IP2	equ	1590
 10472  000000                     _DMA7_AMODE0	equ	7844
 10473  000000                     _DMA7_AMODE1	equ	7845
 10474  000000                     _DMA7_CHEN	equ	7855
 10475  000000                     _DMA7_DIR	equ	7853
 10476  000000                     _DMA7_FORCE	equ	7871
 10477  000000                     _DMA7_HALF	equ	7852
 10478  000000                     _DMA7_IRQSEL0	equ	7856
 10479  000000                     _DMA7_IRQSEL1	equ	7857
 10480  000000                     _DMA7_IRQSEL2	equ	7858
 10481  000000                     _DMA7_IRQSEL3	equ	7859
 10482  000000                     _DMA7_IRQSEL4	equ	7860
 10483  000000                     _DMA7_IRQSEL5	equ	7861
 10484  000000                     _DMA7_IRQSEL6	equ	7862
 10485  000000                     _DMA7_MODE0	equ	7840
 10486  000000                     _DMA7_MODE1	equ	7841
 10487  000000                     _DMA7_NULLW	equ	7851
 10488  000000                     _DMA7_SIZE	equ	7854
 10489  000000                     _DMAC	equ	1029
 10490  000000                     _DOZE0	equ	14892
 10491  000000                     _DOZE1	equ	14893
 10492  000000                     _DOZE2	equ	14894
 10493  000000                     _DOZEN	equ	14891
 10494  000000                     _DSADR0	equ	7968
 10495  000000                     _DSADR1	equ	7969
 10496  000000                     _DSADR10	equ	7978
 10497  000000                     _DSADR11	equ	7979
 10498  000000                     _DSADR12	equ	7980
 10499  000000                     _DSADR13	equ	7981
 10500  000000                     _DSADR14	equ	7982
 10501  000000                     _DSADR15	equ	7983
 10502  000000                     _DSADR2	equ	7970
 10503  000000                     _DSADR3	equ	7971
 10504  000000                     _DSADR4	equ	7972
 10505  000000                     _DSADR5	equ	7973
 10506  000000                     _DSADR6	equ	7974
 10507  000000                     _DSADR7	equ	7975
 10508  000000                     _DSADR8	equ	7976
 10509  000000                     _DSADR9	equ	7977
 10510  000000                     _ERASE	equ	15110
 10511  000000                     _EXTR	equ	14855
 10512  000000                     _I2C1_A10M	equ	4154
 10513  000000                     _I2C1_ACKDT	equ	4149
 10514  000000                     _I2C1_ACKEN	equ	4148
 10515  000000                     _I2C1_ACKSTAT	equ	4175
 10516  000000                     _I2C1_ADD0	equ	4176
 10517  000000                     _I2C1_ADD1	equ	4177
 10518  000000                     _I2C1_ADD10	equ	4168
 10519  000000                     _I2C1_ADD2	equ	4178
 10520  000000                     _I2C1_ADD3	equ	4179
 10521  000000                     _I2C1_ADD4	equ	4180
 10522  000000                     _I2C1_ADD5	equ	4181
 10523  000000                     _I2C1_ADD6	equ	4182
 10524  000000                     _I2C1_ADD7	equ	4183
 10525  000000                     _I2C1_ADD8	equ	4184
 10526  000000                     _I2C1_ADD9	equ	4185
 10527  000000                     _I2C1_AMSK0	equ	4192
 10528  000000                     _I2C1_AMSK1	equ	4193
 10529  000000                     _I2C1_AMSK2	equ	4194
 10530  000000                     _I2C1_AMSK3	equ	4195
 10531  000000                     _I2C1_AMSK4	equ	4196
 10532  000000                     _I2C1_AMSK5	equ	4197
 10533  000000                     _I2C1_AMSK6	equ	4198
 10534  000000                     _I2C1_AMSK7	equ	4199
 10535  000000                     _I2C1_AMSK8	equ	4200
 10536  000000                     _I2C1_AMSK9	equ	4201
 10537  000000                     _I2C1_BCL	equ	4170
 10538  000000                     _I2C1_DISSLW	equ	4153
 10539  000000                     _I2C1_D_NA	equ	4165
 10540  000000                     _I2C1_EN	equ	4159
 10541  000000                     _I2C1_GCEN	equ	4151
 10542  000000                     _I2C1_GCSTAT	equ	4169
 10543  000000                     _I2C1_IPMIEN	equ	4155
 10544  000000                     _I2C1_IWCOL	equ	4167
 10545  000000                     _I2C1_P	equ	4164
 10546  000000                     _I2C1_PEN	equ	4146
 10547  000000                     _I2C1_POV	equ	4166
 10548  000000                     _I2C1_RBF	equ	4161
 10549  000000                     _I2C1_RCEN	equ	4147
 10550  000000                     _I2C1_RSEN	equ	4145
 10551  000000                     _I2C1_R_NW	equ	4162
 10552  000000                     _I2C1_S	equ	4163
 10553  000000                     _I2C1_SCLREL	equ	4156
 10554  000000                     _I2C1_SEN	equ	4144
 10555  000000                     _I2C1_SIDL	equ	4157
 10556  000000                     _I2C1_SMEN	equ	4152
 10557  000000                     _I2C1_STREN	equ	4150
 10558  000000                     _I2C1_TBF	equ	4160
 10559  000000                     _I2C1_TRSTAT	equ	4174
 10560  000000                     _I2C2_A10M	equ	4282
 10561  000000                     _I2C2_ACKDT	equ	4277
 10562  000000                     _I2C2_ACKEN	equ	4276
 10563  000000                     _I2C2_ACKSTAT	equ	4303
 10564  000000                     _I2C2_ADD0	equ	4304
 10565  000000                     _I2C2_ADD1	equ	4305
 10566  000000                     _I2C2_ADD10	equ	4296
 10567  000000                     _I2C2_ADD2	equ	4306
 10568  000000                     _I2C2_ADD3	equ	4307
 10569  000000                     _I2C2_ADD4	equ	4308
 10570  000000                     _I2C2_ADD5	equ	4309
 10571  000000                     _I2C2_ADD6	equ	4310
 10572  000000                     _I2C2_ADD7	equ	4311
 10573  000000                     _I2C2_ADD8	equ	4312
 10574  000000                     _I2C2_ADD9	equ	4313
 10575  000000                     _I2C2_AMSK0	equ	4320
 10576  000000                     _I2C2_AMSK1	equ	4321
 10577  000000                     _I2C2_AMSK2	equ	4322
 10578  000000                     _I2C2_AMSK3	equ	4323
 10579  000000                     _I2C2_AMSK4	equ	4324
 10580  000000                     _I2C2_AMSK5	equ	4325
 10581  000000                     _I2C2_AMSK6	equ	4326
 10582  000000                     _I2C2_AMSK7	equ	4327
 10583+ 000000                     _I2C2_AMSK8	equ	4328
 10584+ 000000                     _I2C2_AMSK9	equ	4329
 10585+ 000000                     _I2C2_DISSLW	equ	4281
 10586+ 000000                     _I2C2_D_NA	equ	4293
 10587+ 000000                     _I2C2_EN	equ	4287
 10588+ 000000                     _I2C2_GCEN	equ	4279
 10589+ 000000                     _I2C2_GCSTAT	equ	4297
 10590+ 000000                     _I2C2_IPMIEN	equ	4283
 10591+ 000000                     _I2C2_IWCOL	equ	4295
 10592+ 000000                     _I2C2_P	equ	4292
 10593+ 000000                     _I2C2_PEN	equ	4274
 10594+ 000000                     _I2C2_POV	equ	4294
 10595+ 000000                     _I2C2_RBF	equ	4289
 10596+ 000000                     _I2C2_RCEN	equ	4275
 10597+ 000000                     _I2C2_RSEN	equ	4273
 10598+ 000000                     _I2C2_R_NW	equ	4290
 10599+ 000000                     _I2C2_S	equ	4291
 10600+ 000000                     _I2C2_SCLREL	equ	4284
 10601+ 000000                     _I2C2_SEN	equ	4272
 10602+ 000000                     _I2C2_SIDL	equ	4285
 10603+ 000000                     _I2C2_SMEN	equ	4280
 10604+ 000000                     _I2C2_STREN	equ	4278
 10605+ 000000                     _I2C2_TBF	equ	4288
 10606+ 000000                     _I2C2_TRSTAT	equ	4302
 10607+ 000000                     _IC1IE	equ	1185
 10608+ 000000                     _IC1IF	equ	1057
 10609+ 000000                     _IC1IP0	equ	1316
 10610+ 000000                     _IC1IP1	equ	1317
 10611+ 000000                     _IC1IP2	equ	1318
 10612+ 000000                     _IC1_BNE	equ	2579
 10613+ 000000                     _IC1_I0	equ	2581
 10614+ 000000                     _IC1_I1	equ	2582
 10615+ 000000                     _IC1_M0	equ	2576
 10616+ 000000                     _IC1_M1	equ	2577
 10617+ 000000                     _IC1_M2	equ	2578
 10618+ 000000                     _IC1_OV	equ	2580
 10619+ 000000                     _IC1_SIDL	equ	2589
 10620+ 000000                     _IC1_TMR	equ	2583
 10621+ 000000                     _IC2IE	equ	1189
 10622+ 000000                     _IC2IF	equ	1061
 10623+ 000000                     _IC2IP0	equ	1332
 10624+ 000000                     _IC2IP1	equ	1333
 10625+ 000000                     _IC2IP2	equ	1334
 10626+ 000000                     _IC2_BNE	equ	2611
 10627+ 000000                     _IC2_I0	equ	2613
 10628+ 000000                     _IC2_I1	equ	2614
 10629+ 000000                     _IC2_M0	equ	2608
 10630+ 000000                     _IC2_M1	equ	2609
 10631+ 000000                     _IC2_M2	equ	2610
 10632+ 000000                     _IC2_OV	equ	2612
 10633+ 000000                     _IC2_SIDL	equ	2621
 10634+ 000000                     _IC2_TMR	equ	2615
 10635+ 000000                     _IC3IE	equ	1221
 10636+ 000000                     _IC3IF	equ	1093
 10637+ 000000                     _IC3IP0	equ	1460
 10638+ 000000                     _IC3IP1	equ	1461
 10639+ 000000                     _IC3IP2	equ	1462
 10640+ 000000                     _IC3_BNE	equ	2643
 10641+ 000000                     _IC3_I0	equ	2645
 10642+ 000000                     _IC3_I1	equ	2646
 10643+ 000000                     _IC3_M0	equ	2640
 10644+ 000000                     _IC3_M1	equ	2641
 10645+ 000000                     _IC3_M2	equ	2642
 10646+ 000000                     _IC3_OV	equ	2644
 10647+ 000000                     _IC3_SIDL	equ	2653
 10648+ 000000                     _IC3_TMR	equ	2647
 10649+ 000000                     _IC4IE	equ	1222
 10650+ 000000                     _IC4IF	equ	1094
 10651+ 000000                     _IC4IP0	equ	1464
 10652+ 000000                     _IC4IP1	equ	1465
 10653+ 000000                     _IC4IP2	equ	1466
 10654+ 000000                     _IC4_BNE	equ	2675
 10655+ 000000                     _IC4_I0	equ	2677
 10656+ 000000                     _IC4_I1	equ	2678
 10657+ 000000                     _IC4_M0	equ	2672
 10658+ 000000                     _IC4_M1	equ	2673
 10659+ 000000                     _IC4_M2	equ	2674
 10660+ 000000                     _IC4_OV	equ	2676
 10661+ 000000                     _IC4_SIDL	equ	2685
 10662+ 000000                     _IC4_TMR	equ	2679
 10663+ 000000                     _IC5IE	equ	1223
 10664+ 000000                     _IC5IF	equ	1095
 10665+ 000000                     _IC5IP0	equ	1468
 10666+ 000000                     _IC5IP1	equ	1469
 10667+ 000000                     _IC5IP2	equ	1470
 10668+ 000000                     _IC5_BNE	equ	2707
 10669+ 000000                     _IC5_I0	equ	2709
 10670+ 000000                     _IC5_I1	equ	2710
 10671+ 000000                     _IC5_M0	equ	2704
 10672+ 000000                     _IC5_M1	equ	2705
 10673+ 000000                     _IC5_M2	equ	2706
 10674+ 000000                     _IC5_OV	equ	2708
 10675+ 000000                     _IC5_SIDL	equ	2717
 10676+ 000000                     _IC5_TMR	equ	2711
 10677+ 000000                     _IC6IE	equ	1224
 10678+ 000000                     _IC6IF	equ	1096
 10679+ 000000                     _IC6IP0	equ	1472
 10680+ 000000                     _IC6IP1	equ	1473
 10681+ 000000                     _IC6IP2	equ	1474
 10682+ 000000                     _IC6_BNE	equ	2739
 10683+ 000000                     _IC6_I0	equ	2741
 10684+ 000000                     _IC6_I1	equ	2742
 10685+ 000000                     _IC6_M0	equ	2736
 10686+ 000000                     _IC6_M1	equ	2737
 10687+ 000000                     _IC6_M2	equ	2738
 10688+ 000000                     _IC6_OV	equ	2740
 10689+ 000000                     _IC6_SIDL	equ	2749
 10690+ 000000                     _IC6_TMR	equ	2743
 10691+ 000000                     _IC7IE	equ	1206
 10692+ 000000                     _IC7IF	equ	1078
 10693+ 000000                     _IC7IP0	equ	1400
 10694+ 000000                     _IC7IP1	equ	1401
 10695+ 000000                     _IC7IP2	equ	1402
 10696+ 000000                     _IC7_BNE	equ	2771
 10697+ 000000                     _IC7_I0	equ	2773
 10698+ 000000                     _IC7_I1	equ	2774
 10699+ 000000                     _IC7_M0	equ	2768
 10700+ 000000                     _IC7_M1	equ	2769
 10701+ 000000                     _IC7_M2	equ	2770
 10702+ 000000                     _IC7_OV	equ	2772
 10703+ 000000                     _IC7_SIDL	equ	2781
 10704+ 000000                     _IC7_TMR	equ	2775
 10705+ 000000                     _IC8IE	equ	1207
 10706+ 000000                     _IC8IF	equ	1079
 10707+ 000000                     _IC8IP0	equ	1404
 10708+ 000000                     _IC8IP1	equ	1405
 10709+ 000000                     _IC8IP2	equ	1406
 10710+ 000000                     _IC8_BNE	equ	2803
 10711+ 000000                     _IC8_I0	equ	2805
 10712+ 000000                     _IC8_I1	equ	2806
 10713+ 000000                     _IC8_M0	equ	2800
 10714+ 000000                     _IC8_M1	equ	2801
 10715+ 000000                     _IC8_M2	equ	2802
 10716+ 000000                     _IC8_OV	equ	2804
 10717+ 000000                     _IC8_SIDL	equ	2813
 10718+ 000000                     _IC8_TMR	equ	2807
 10719+ 000000                     _IDLE	equ	14850
 10720+ 000000                     _ILR0	equ	1800
 10721+ 000000                     _ILR1	equ	1801
 10722+ 000000                     _ILR2	equ	1802
 10723+ 000000                     _ILR3	equ	1803
 10724+ 000000                     _INT0EP	equ	1040
 10725+ 000000                     _INT0IE	equ	1184
 10726+ 000000                     _INT0IF	equ	1056
 10727+ 000000                     _INT0IP0	equ	1312
 10728+ 000000                     _INT0IP1	equ	1313
 10729+ 000000                     _INT0IP2	equ	1314
 10730+ 000000                     _INT1EP	equ	1041
 10731+ 000000                     _INT1IE	equ	1204
 10732+ 000000                     _INT1IF	equ	1076
 10733+ 000000                     _INT1IP0	equ	1392
 10734+ 000000                     _INT1IP1	equ	1393
 10735+ 000000                     _INT1IP2	equ	1394
 10736+ 000000                     _INT2EP	equ	1042
 10737+ 000000                     _INT2IE	equ	1213
 10738+ 000000                     _INT2IF	equ	1085
 10739+ 000000                     _INT2IP0	equ	1428
 10740+ 000000                     _INT2IP1	equ	1429
 10741+ 000000                     _INT2IP2	equ	1430
 10742+ 000000                     _INT3EP	equ	1043
 10743+ 000000                     _INT3IE	equ	1237
 10744+ 000000                     _INT3IF	equ	1109
 10745+ 000000                     _INT3IP0	equ	1524
 10746+ 000000                     _INT3IP1	equ	1525
 10747+ 000000                     _INT3IP2	equ	1526
 10748+ 000000                     _INT4EP	equ	1044
 10749+ 000000                     _INT4IE	equ	1238
 10750+ 000000                     _INT4IF	equ	1110
 10751+ 000000                     _INT4IP0	equ	1528
 10752+ 000000                     _INT4IP1	equ	1529
 10753+ 000000                     _INT4IP2	equ	1530
 10754+ 000000                     _IOPR	equ	14862
 10755+ 000000                     _IPL0	equ	533
 10756+ 000000                     _IPL1	equ	534
 10757+ 000000                     _IPL2	equ	535
 10758+ 000000                     _IPL3	equ	547
 10759+ 000000                     _IRQTOCPU	equ	1807
 10760+ 000000                     _LATA0	equ	5664
 10761+ 000000                     _LATA1	equ	5665
 10762+ 000000                     _LATA10	equ	5674
 10763+ 000000                     _LATA12	equ	5676
 10764+ 000000                     _LATA13	equ	5677
 10765+ 000000                     _LATA14	equ	5678
 10766+ 000000                     _LATA15	equ	5679
 10767+ 000000                     _LATA2	equ	5666
 10768+ 000000                     _LATA3	equ	5667
 10769+ 000000                     _LATA4	equ	5668
 10770+ 000000                     _LATA5	equ	5669
 10771+ 000000                     _LATA6	equ	5670
 10772+ 000000                     _LATA7	equ	5671
 10773+ 000000                     _LATA9	equ	5673
 10774+ 000000                     _LATB0	equ	5712
 10775+ 000000                     _LATB1	equ	5713
 10776+ 000000                     _LATB10	equ	5722
 10777+ 000000                     _LATB11	equ	5723
 10778+ 000000                     _LATB12	equ	5724
 10779+ 000000                     _LATB13	equ	5725
 10780+ 000000                     _LATB14	equ	5726
 10781+ 000000                     _LATB15	equ	5727
 10782+ 000000                     _LATB2	equ	5714
 10783+ 000000                     _LATB3	equ	5715
 10784+ 000000                     _LATB4	equ	5716
 10785+ 000000                     _LATB5	equ	5717
 10786+ 000000                     _LATB6	equ	5718
 10787+ 000000                     _LATB7	equ	5719
 10788+ 000000                     _LATB8	equ	5720
 10789+ 000000                     _LATB9	equ	5721
 10790+ 000000                     _LATC1	equ	5761
 10791+ 000000                     _LATC12	equ	5772
 10792+ 000000                     _LATC13	equ	5773
 10793+ 000000                     _LATC14	equ	5774
 10794+ 000000                     _LATC15	equ	5775
 10795+ 000000                     _LATC2	equ	5762
 10796+ 000000                     _LATC3	equ	5763
 10797+ 000000                     _LATC4	equ	5764
 10798+ 000000                     _LATD0	equ	5808
 10799+ 000000                     _LATD1	equ	5809
 10800+ 000000                     _LATD10	equ	5818
 10801+ 000000                     _LATD11	equ	5819
 10802+ 000000                     _LATD12	equ	5820
 10803+ 000000                     _LATD13	equ	5821
 10804+ 000000                     _LATD14	equ	5822
 10805+ 000000                     _LATD15	equ	5823
 10806+ 000000                     _LATD2	equ	5810
 10807+ 000000                     _LATD3	equ	5811
 10808+ 000000                     _LATD4	equ	5812
 10809+ 000000                     _LATD5	equ	5813
 10810+ 000000                     _LATD6	equ	5814
 10811+ 000000                     _LATD7	equ	5815
 10812+ 000000                     _LATD8	equ	5816
 10813+ 000000                     _LATD9	equ	5817
 10814+ 000000                     _LATE0	equ	5856
 10815+ 000000                     _LATE1	equ	5857
 10816+ 000000                     _LATE2	equ	5858
 10817+ 000000                     _LATE3	equ	5859
 10818+ 000000                     _LATE4	equ	5860
 10819+ 000000                     _LATE5	equ	5861
 10820+ 000000                     _LATE6	equ	5862
 10821+ 000000                     _LATE7	equ	5863
 10822+ 000000                     _LATF0	equ	5904
 10823+ 000000                     _LATF1	equ	5905
 10824+ 000000                     _LATF12	equ	5916
 10825+ 000000                     _LATF13	equ	5917
 10826+ 000000                     _LATF2	equ	5906
 10827+ 000000                     _LATF3	equ	5907
 10828+ 000000                     _LATF4	equ	5908
 10829+ 000000                     _LATF5	equ	5909
 10830+ 000000                     _LATF6	equ	5910
 10831+ 000000                     _LATF7	equ	5911
 10832+ 000000                     _LATF8	equ	5912
 10833+ 000000                     _LATG0	equ	5952
 10834+ 000000                     _LATG1	equ	5953
 10835+ 000000                     _LATG12	equ	5964
 10836+ 000000                     _LATG13	equ	5965
 10837+ 000000                     _LATG14	equ	5966
 10838+ 000000                     _LATG15	equ	5967
 10839+ 000000                     _LATG2	equ	5954
 10840+ 000000                     _LATG3	equ	5955
 10841+ 000000                     _LATG6	equ	5958
 10842+ 000000                     _LATG7	equ	5959
 10843+ 000000                     _LATG8	equ	5960
 10844+ 000000                     _LATG9	equ	5961
 10845+ 000000                     _LOCK	equ	14869
 10846+ 000000                     _LPOSCEN	equ	14865
 10847+ 000000                     _LSTCH0	equ	7960
 10848+ 000000                     _LSTCH1	equ	7961
 10849+ 000000                     _LSTCH2	equ	7962
 10850+ 000000                     _LSTCH3	equ	7963
 10851+ 000000                     _MATHERR	equ	1028
 10852+ 000000                     _MI2C1IE	equ	1201
 10853+ 000000                     _MI2C1IF	equ	1073
 10854+ 000000                     _MI2C1P0	equ	1380
 10855+ 000000                     _MI2C1P1	equ	1381
 10856+ 000000                     _MI2C1P2	equ	1382
 10857+ 000000                     _MI2C2IE	equ	1234
 10858+ 000000                     _MI2C2IF	equ	1106
 10859+ 000000                     _MI2C2IP0	equ	1512
 10860+ 000000                     _MI2C2IP1	equ	1513
 10861+ 000000                     _MI2C2IP2	equ	1514
 10862+ 000000                     _N	equ	531
 10863+ 000000                     _NOSCG0	equ	14872
 10864+ 000000                     _NOSCG1	equ	14873
 10865+ 000000                     _NOSCG2	equ	14874
 10866+ 000000                     _NSTDIS	equ	1039
 10867+ 000000                     _NVMOP0	equ	15104
 10868+ 000000                     _NVMOP1	equ	15105
 10869+ 000000                     _NVMOP2	equ	15106
 10870+ 000000                     _NVMOP3	equ	15107
 10871+ 000000                     _OC1IE	equ	1186
 10872+ 000000                     _OC1IF	equ	1058
 10873+ 000000                     _OC1IP0	equ	1320
 10874+ 000000                     _OC1IP1	equ	1321
 10875+ 000000                     _OC1IP2	equ	1322
 10876+ 000000                     _OC1_FLT	equ	3108
 10877+ 000000                     _OC1_M0	equ	3104
 10878+ 000000                     _OC1_M1	equ	3105
 10879+ 000000                     _OC1_M2	equ	3106
 10880+ 000000                     _OC1_SIDL	equ	3117
 10881+ 000000                     _OC1_TSEL	equ	3107
 10882+ 000000                     _OC2IE	equ	1190
 10883+ 000000                     _OC2IF	equ	1062
 10884+ 000000                     _OC2IP0	equ	1336
 10885+ 000000                     _OC2IP1	equ	1337
 10886+ 000000                     _OC2IP2	equ	1338
 10887+ 000000                     _OC2_FLT	equ	3156
 10888+ 000000                     _OC2_M0	equ	3152
 10889+ 000000                     _OC2_M1	equ	3153
 10890+ 000000                     _OC2_M2	equ	3154
 10891+ 000000                     _OC2_SIDL	equ	3165
 10892+ 000000                     _OC2_TSEL	equ	3155
 10893+ 000000                     _OC3IE	equ	1209
 10894+ 000000                     _OC3IF	equ	1081
 10895+ 000000                     _OC3IP0	equ	1412
 10896+ 000000                     _OC3IP1	equ	1413
 10897+ 000000                     _OC3IP2	equ	1414
 10898+ 000000                     _OC3_FLT	equ	3204
 10899+ 000000                     _OC3_M0	equ	3200
 10900+ 000000                     _OC3_M1	equ	3201
 10901+ 000000                     _OC3_M2	equ	3202
 10902+ 000000                     _OC3_SIDL	equ	3213
 10903+ 000000                     _OC3_TSEL	equ	3203
 10904+ 000000                     _OC4IE	equ	1210
 10905+ 000000                     _OC4IF	equ	1082
 10906+ 000000                     _OC4IP0	equ	1416
 10907+ 000000                     _OC4IP1	equ	1417
 10908+ 000000                     _OC4IP2	equ	1418
 10909+ 000000                     _OC4_FLT	equ	3252
 10910+ 000000                     _OC4_M0	equ	3248
 10911+ 000000                     _OC4_M1	equ	3249
 10912+ 000000                     _OC4_M2	equ	3250
 10913+ 000000                     _OC4_SIDL	equ	3261
 10914+ 000000                     _OC4_TSEL	equ	3251
 10915+ 000000                     _OC5IE	equ	1225
 10916+ 000000                     _OC5IF	equ	1097
 10917+ 000000                     _OC5IP0	equ	1476
 10918+ 000000                     _OC5IP1	equ	1477
 10919+ 000000                     _OC5IP2	equ	1478
 10920+ 000000                     _OC5_FLT	equ	3300
 10921+ 000000                     _OC5_M0	equ	3296
 10922+ 000000                     _OC5_M1	equ	3297
 10923+ 000000                     _OC5_M2	equ	3298
 10924+ 000000                     _OC5_SIDL	equ	3309
 10925+ 000000                     _OC5_TSEL	equ	3299
 10926+ 000000                     _OC6IE	equ	1226
 10927+ 000000                     _OC6IF	equ	1098
 10928+ 000000                     _OC6IP0	equ	1480
 10929+ 000000                     _OC6IP1	equ	1481
 10930+ 000000                     _OC6IP2	equ	1482
 10931+ 000000                     _OC6_FLT	equ	3348
 10932+ 000000                     _OC6_M0	equ	3344
 10933+ 000000                     _OC6_M1	equ	3345
 10934+ 000000                     _OC6_M2	equ	3346
 10935+ 000000                     _OC6_SIDL	equ	3357
 10936+ 000000                     _OC6_TSEL	equ	3347
 10937+ 000000                     _OC7IE	equ	1227
 10938+ 000000                     _OC7IF	equ	1099
 10939+ 000000                     _OC7IP0	equ	1484
 10940+ 000000                     _OC7IP1	equ	1485
 10941+ 000000                     _OC7IP2	equ	1486
 10942+ 000000                     _OC7_FLT	equ	3396
 10943+ 000000                     _OC7_M0	equ	3392
 10944+ 000000                     _OC7_M1	equ	3393
 10945+ 000000                     _OC7_M2	equ	3394
 10946+ 000000                     _OC7_SIDL	equ	3405
 10947+ 000000                     _OC7_TSEL	equ	3395
 10948+ 000000                     _OC8IE	equ	1228
 10949+ 000000                     _OC8IF	equ	1100
 10950+ 000000                     _OC8IP0	equ	1488
 10951+ 000000                     _OC8IP1	equ	1489
 10952+ 000000                     _OC8IP2	equ	1490
 10953+ 000000                     _OC8_FLT	equ	3444
 10954+ 000000                     _OC8_M0	equ	3440
 10955+ 000000                     _OC8_M1	equ	3441
 10956+ 000000                     _OC8_M2	equ	3442
 10957+ 000000                     _OC8_SIDL	equ	3453
 10958+ 000000                     _OC8_TSEL	equ	3443
 10959+ 000000                     _ODCA0	equ	13824
 10960+ 000000                     _ODCA1	equ	13825
 10961+ 000000                     _ODCA12	equ	13836
 10962+ 000000                     _ODCA13	equ	13837
 10963+ 000000                     _ODCA14	equ	13838
 10964+ 000000                     _ODCA15	equ	13839
 10965+ 000000                     _ODCA2	equ	13826
 10966+ 000000                     _ODCA3	equ	13827
 10967+ 000000                     _ODCA4	equ	13828
 10968+ 000000                     _ODCA5	equ	13829
 10969+ 000000                     _ODCD0	equ	13968
 10970+ 000000                     _ODCD1	equ	13969
 10971+ 000000                     _ODCD10	equ	13978
 10972+ 000000                     _ODCD11	equ	13979
 10973+ 000000                     _ODCD12	equ	13980
 10974+ 000000                     _ODCD13	equ	13981
 10975+ 000000                     _ODCD14	equ	13982
 10976+ 000000                     _ODCD15	equ	13983
 10977+ 000000                     _ODCD2	equ	13970
 10978+ 000000                     _ODCD3	equ	13971
 10979+ 000000                     _ODCD4	equ	13972
 10980+ 000000                     _ODCD5	equ	13973
 10981+ 000000                     _ODCD6	equ	13974
 10982+ 000000                     _ODCD7	equ	13975
 10983+ 000000                     _ODCD8	equ	13976
 10984+ 000000                     _ODCD9	equ	13977
 10985+ 000000                     _ODCF0	equ	14064
 10986+ 000000                     _ODCF1	equ	14065
 10987+ 000000                     _ODCF12	equ	14076
 10988+ 000000                     _ODCF13	equ	14077
 10989+ 000000                     _ODCF2	equ	14066
 10990+ 000000                     _ODCF3	equ	14067
 10991+ 000000                     _ODCF4	equ	14068
 10992+ 000000                     _ODCF5	equ	14069
 10993+ 000000                     _ODCF6	equ	14070
 10994+ 000000                     _ODCF7	equ	14071
 10995+ 000000                     _ODCF8	equ	14072
 10996+ 000000                     _ODCG0	equ	14112
 10997+ 000000                     _ODCG1	equ	14113
 10998+ 000000                     _ODCG12	equ	14124
 10999+ 000000                     _ODCG13	equ	14125
 11000+ 000000                     _ODCG14	equ	14126
 11001+ 000000                     _ODCG15	equ	14127
 11002+ 000000                     _ODCG2	equ	14114
 11003+ 000000                     _ODCG3	equ	14115
 11004+ 000000                     _ODCG6	equ	14118
 11005+ 000000                     _ODCG7	equ	14119
 11006+ 000000                     _ODCG8	equ	14120
 11007+ 000000                     _ODCG9	equ	14121
 11008+ 000000                     _OSCFAIL	equ	1025
 11009+ 000000                     _OSWEN	equ	14864
 11010+ 000000                     _OV	equ	530
 11011+ 000000                     _PLLPOST0	equ	14885
 11012+ 000000                     _PLLPOST1	equ	14886
 11013+ 000000                     _PLLPOST2	equ	14887
 11014+ 000000                     _POR	equ	14848
 11015+ 000000                     _PPST0	equ	7952
 11016+ 000000                     _PPST1	equ	7953
 11017+ 000000                     _PPST2	equ	7954
 11018+ 000000                     _PPST3	equ	7955
 11019+ 000000                     _PPST4	equ	7956
 11020+ 000000                     _PPST5	equ	7957
 11021+ 000000                     _PPST6	equ	7958
 11022+ 000000                     _PPST7	equ	7959
 11023+ 000000                     _PRESCLR0	equ	14880
 11024+ 000000                     _PRESCLR1	equ	14881
 11025+ 000000                     _PRESCLR2	equ	14882
 11026+ 000000                     _PRESCLR3	equ	14883
 11027+ 000000                     _PRESCLR4	equ	14884
 11028+ 000000                     _PSV	equ	546
 11029+ 000000                     _PWCOL0	equ	7944
 11030+ 000000                     _PWCOL1	equ	7945
 11031+ 000000                     _PWCOL2	equ	7946
 11032+ 000000                     _PWCOL3	equ	7947
 11033+ 000000                     _PWCOL4	equ	7948
 11034+ 000000                     _PWCOL5	equ	7949
 11035+ 000000                     _PWCOL6	equ	7950
 11036+ 000000                     _PWCOL7	equ	7951
 11037+ 000000                     _RA	equ	532
 11038+ 000000                     _RA0	equ	5648
 11039+ 000000                     _RA1	equ	5649
 11040+ 000000                     _RA10	equ	5658
 11041+ 000000                     _RA12	equ	5660
 11042+ 000000                     _RA13	equ	5661
 11043+ 000000                     _RA14	equ	5662
 11044+ 000000                     _RA15	equ	5663
 11045+ 000000                     _RA2	equ	5650
 11046+ 000000                     _RA3	equ	5651
 11047+ 000000                     _RA4	equ	5652
 11048+ 000000                     _RA5	equ	5653
 11049+ 000000                     _RA6	equ	5654
 11050+ 000000                     _RA7	equ	5655
 11051+ 000000                     _RA9	equ	5657
 11052+ 000000                     _RB0	equ	5696
 11053+ 000000                     _RB1	equ	5697
 11054+ 000000                     _RB10	equ	5706
 11055+ 000000                     _RB11	equ	5707
 11056+ 000000                     _RB12	equ	5708
 11057+ 000000                     _RB13	equ	5709
 11058+ 000000                     _RB14	equ	5710
 11059+ 000000                     _RB15	equ	5711
 11060+ 000000                     _RB2	equ	5698
 11061+ 000000                     _RB3	equ	5699
 11062+ 000000                     _RB4	equ	5700
 11063+ 000000                     _RB5	equ	5701
 11064+ 000000                     _RB6	equ	5702
 11065+ 000000                     _RB7	equ	5703
 11066+ 000000                     _RB8	equ	5704
 11067+ 000000                     _RB9	equ	5705
 11068+ 000000                     _RC1	equ	5745
 11069+ 000000                     _RC12	equ	5756
 11070+ 000000                     _RC13	equ	5757
 11071+ 000000                     _RC14	equ	5758
 11072+ 000000                     _RC15	equ	5759
 11073+ 000000                     _RC2	equ	5746
 11074+ 000000                     _RC3	equ	5747
 11075+ 000000                     _RC4	equ	5748
 11076+ 000000                     _RCDIV0	equ	14888
 11077+ 000000                     _RCDIV1	equ	14889
 11078+ 000000                     _RCDIV2	equ	14890
 11079+ 000000                     _RD0	equ	5792
 11080+ 000000                     _RD1	equ	5793
 11081+ 000000                     _RD10	equ	5802
 11082+ 000000                     _RD11	equ	5803
 11083+ 000000                     _RD12	equ	5804
 11084+ 000000                     _RD13	equ	5805
 11085+ 000000                     _RD14	equ	5806
 11086+ 000000                     _RD15	equ	5807
 11087+ 000000                     _RD2	equ	5794
 11088+ 000000                     _RD3	equ	5795
 11089+ 000000                     _RD4	equ	5796
 11090+ 000000                     _RD5	equ	5797
 11091+ 000000                     _RD6	equ	5798
 11092+ 000000                     _RD7	equ	5799
 11093+ 000000                     _RD8	equ	5800
 11094+ 000000                     _RD9	equ	5801
 11095+ 000000                     _RE0	equ	5840
 11096+ 000000                     _RE1	equ	5841
 11097+ 000000                     _RE2	equ	5842
 11098+ 000000                     _RE3	equ	5843
 11099+ 000000                     _RE4	equ	5844
 11100+ 000000                     _RE5	equ	5845
 11101+ 000000                     _RE6	equ	5846
 11102+ 000000                     _RE7	equ	5847
 11103+ 000000                     _RF0	equ	5888
 11104+ 000000                     _RF1	equ	5889
 11105+ 000000                     _RF12	equ	5900
 11106+ 000000                     _RF13	equ	5901
 11107+ 000000                     _RF2	equ	5890
 11108+ 000000                     _RF3	equ	5891
 11109+ 000000                     _RF4	equ	5892
 11110+ 000000                     _RF5	equ	5893
 11111+ 000000                     _RF6	equ	5894
 11112+ 000000                     _RF7	equ	5895
 11113+ 000000                     _RF8	equ	5896
 11114+ 000000                     _RG0	equ	5936
 11115+ 000000                     _RG1	equ	5937
 11116+ 000000                     _RG12	equ	5948
 11117+ 000000                     _RG13	equ	5949
 11118+ 000000                     _RG14	equ	5950
 11119+ 000000                     _RG15	equ	5951
 11120+ 000000                     _RG2	equ	5938
 11121+ 000000                     _RG3	equ	5939
 11122+ 000000                     _RG6	equ	5942
 11123+ 000000                     _RG7	equ	5943
 11124+ 000000                     _RG8	equ	5944
 11125+ 000000                     _RG9	equ	5945
 11126+ 000000                     _ROI	equ	14895
 11127+ 000000                     _SI2C1IE	equ	1200
 11128+ 000000                     _SI2C1IF	equ	1072
 11129+ 000000                     _SI2C1IP0	equ	1376
 11130+ 000000                     _SI2C1IP1	equ	1377
 11131+ 000000                     _SI2C1IP2	equ	1378
 11132+ 000000                     _SI2C2IE	equ	1233
 11133+ 000000                     _SI2C2IF	equ	1105
 11134+ 000000                     _SI2C2IP0	equ	1508
 11135+ 000000                     _SI2C2IP1	equ	1509
 11136+ 000000                     _SI2C2IP2	equ	1510
 11137+ 000000                     _SLEEP	equ	14851
 11138+ 000000                     _SP1IP0	equ	1352
 11139+ 000000                     _SP1IP1	equ	1353
 11140+ 000000                     _SP1IP2	equ	1354
 11141+ 000000                     _SPF1IE	equ	1193
 11142+ 000000                     _SPF1IF	equ	1065
 11143+ 000000                     _SPF1IP0	equ	1348
 11144+ 000000                     _SPF1IP1	equ	1349
 11145+ 000000                     _SPF1IP2	equ	1350
 11146+ 000000                     _SPI1IE	equ	1194
 11147+ 000000                     _SPI1IF	equ	1066
 11148+ 000000                     _SPI1_CKE	equ	4632
 11149+ 000000                     _SPI1_CKP	equ	4630
 11150+ 000000                     _SPI1_DISSCK	equ	4636
 11151+ 000000                     _SPI1_DISSDO	equ	4635
 11152+ 000000                     _SPI1_EN	equ	4623
 11153+ 000000                     _SPI1_ENHBUF	equ	4640
 11154+ 000000                     _SPI1_FRMDEL	equ	4641
 11155+ 000000                     _SPI1_FRMEN	equ	4655
 11156+ 000000                     _SPI1_FRMPOL	equ	4653
 11157+ 000000                     _SPI1_FRMSYNC	equ	4654
 11158+ 000000                     _SPI1_MODE16	equ	4634
 11159+ 000000                     _SPI1_MSTEN	equ	4629
 11160+ 000000                     _SPI1_PPRE0	equ	4624
 11161+ 000000                     _SPI1_PPRE1	equ	4625
 11162+ 000000                     _SPI1_RBF	equ	4608
 11163+ 000000                     _SPI1_ROV	equ	4614
 11164+ 000000                     _SPI1_SIDL	equ	4621
 11165+ 000000                     _SPI1_SMP	equ	4633
 11166+ 000000                     _SPI1_SPRE0	equ	4626
 11167+ 000000                     _SPI1_SPRE1	equ	4627
 11168+ 000000                     _SPI1_SPRE2	equ	4628
 11169+ 000000                     _SPI1_SSEN	equ	4631
 11170+ 000000                     _SPI1_TBF	equ	4609
 11171+ 000000                     _SPI2EIE	equ	1216
 11172+ 000000                     _SPI2EIF	equ	1088
 11173+ 000000                     _SPI2EIP0	equ	1440
 11174+ 000000                     _SPI2EIP1	equ	1441
 11175+ 000000                     _SPI2EIP2	equ	1442
 11176+ 000000                     _SPI2IE	equ	1217
 11177+ 000000                     _SPI2IF	equ	1089
 11178+ 000000                     _SPI2IP0	equ	1444
 11179+ 000000                     _SPI2IP1	equ	1445
 11180+ 000000                     _SPI2IP2	equ	1446
 11181+ 000000                     _SPI2_CKE	equ	4888
 11182+ 000000                     _SPI2_CKP	equ	4886
 11183+ 000000                     _SPI2_DISSCK	equ	4892
 11184+ 000000                     _SPI2_DISSDO	equ	4891
 11185+ 000000                     _SPI2_EN	equ	4879
 11186+ 000000                     _SPI2_ENHBUF	equ	4896
 11187+ 000000                     _SPI2_FRMDEL	equ	4897
 11188+ 000000                     _SPI2_FRMEN	equ	4911
 11189+ 000000                     _SPI2_FRMPOL	equ	4909
 11190+ 000000                     _SPI2_FRMSYNC	equ	4910
 11191+ 000000                     _SPI2_MODE16	equ	4890
 11192+ 000000                     _SPI2_MSTEN	equ	4885
 11193+ 000000                     _SPI2_PPRE0	equ	4880
 11194+ 000000                     _SPI2_PPRE1	equ	4881
 11195+ 000000                     _SPI2_RBF	equ	4864
 11196+ 000000                     _SPI2_ROV	equ	4870
 11197+ 000000                     _SPI2_SIDL	equ	4877
 11198+ 000000                     _SPI2_SMP	equ	4889
 11199+ 000000                     _SPI2_SPRE0	equ	4882
 11200+ 000000                     _SPI2_SPRE1	equ	4883
 11201+ 000000                     _SPI2_SPRE2	equ	4884
 11202+ 000000                     _SPI2_SSEN	equ	4887
 11203+ 000000                     _SPI2_TBF	equ	4865
 11204+ 000000                     _STKERR	equ	1026
 11205+ 000000                     _SWDTEN	equ	14853
 11206+ 000000                     _SWR	equ	14854
 11207+ 000000                     _T1CKPS0	equ	2084
 11208+ 000000                     _T1CKPS1	equ	2085
 11209+ 000000                     _T1CS	equ	2081
 11210+ 000000                     _T1GATE	equ	2086
 11211+ 000000                     _T1IE	equ	1187
 11212+ 000000                     _T1IF	equ	1059
 11213+ 000000                     _T1IP0	equ	1324
 11214+ 000000                     _T1IP1	equ	1325
 11215+ 000000                     _T1IP2	equ	1326
 11216+ 000000                     _T1ON	equ	2095
 11217+ 000000                     _T1SIDL	equ	2093
 11218+ 000000                     _T1SYNC	equ	2082
 11219+ 000000                     _T2CKPS0	equ	2180
 11220+ 000000                     _T2CKPS1	equ	2181
 11221+ 000000                     _T2CS	equ	2177
 11222+ 000000                     _T2GATE	equ	2182
 11223+ 000000                     _T2IE	equ	1191
 11224+ 000000                     _T2IF	equ	1063
 11225+ 000000                     _T2IP0	equ	1340
 11226+ 000000                     _T2IP1	equ	1341
 11227+ 000000                     _T2IP2	equ	1342
 11228+ 000000                     _T2ON	equ	2191
 11229+ 000000                     _T2SIDL	equ	2189
 11230+ 000000                     _T2T32	equ	2179
 11231+ 000000                     _T3CKPS0	equ	2196
 11232+ 000000                     _T3CKPS1	equ	2197
 11233+ 000000                     _T3CS	equ	2193
 11234+ 000000                     _T3GATE	equ	2198
 11235+ 000000                     _T3IE	equ	1192
 11236+ 000000                     _T3IF	equ	1064
 11237+ 000000                     _T3IP0	equ	1344
 11238+ 000000                     _T3IP1	equ	1345
 11239+ 000000                     _T3IP2	equ	1346
 11240+ 000000                     _T3ON	equ	2207
 11241+ 000000                     _T3SIDL	equ	2205
 11242+ 000000                     _T4CKPS0	equ	2292
 11243+ 000000                     _T4CKPS1	equ	2293
 11244+ 000000                     _T4CS	equ	2289
 11245+ 000000                     _T4GATE	equ	2294
 11246+ 000000                     _T4IE	equ	1211
 11247+ 000000                     _T4IF	equ	1083
 11248+ 000000                     _T4IP0	equ	1420
 11249+ 000000                     _T4IP1	equ	1421
 11250+ 000000                     _T4IP2	equ	1422
 11251+ 000000                     _T4ON	equ	2303
 11252+ 000000                     _T4SIDL	equ	2301
 11253+ 000000                     _T4T45	equ	2291
 11254+ 000000                     _T5CKPS0	equ	2308
 11255+ 000000                     _T5CKPS1	equ	2309
 11256+ 000000                     _T5CS	equ	2305
 11257+ 000000                     _T5GATE	equ	2310
 11258+ 000000                     _T5IE	equ	1212
 11259+ 000000                     _T5IF	equ	1084
 11260+ 000000                     _T5IP0	equ	1424
 11261+ 000000                     _T5IP1	equ	1425
 11262+ 000000                     _T5IP2	equ	1426
 11263+ 000000                     _T5ON	equ	2319
 11264+ 000000                     _T5SIDL	equ	2317
 11265+ 000000                     _T6CKPS0	equ	2404
 11266+ 000000                     _T6CKPS1	equ	2405
 11267+ 000000                     _T6CS	equ	2401
 11268+ 000000                     _T6GATE	equ	2406
 11269+ 000000                     _T6IE	equ	1231
 11270+ 000000                     _T6IF	equ	1103
 11271+ 000000                     _T6IP0	equ	1500
 11272+ 000000                     _T6IP1	equ	1501
 11273+ 000000                     _T6IP2	equ	1502
 11274+ 000000                     _T6ON	equ	2415
 11275+ 000000                     _T6SIDL	equ	2413
 11276+ 000000                     _T6T67	equ	2403
 11277+ 000000                     _T7CKPS0	equ	2420
 11278+ 000000                     _T7CKPS1	equ	2421
 11279+ 000000                     _T7CS	equ	2417
 11280+ 000000                     _T7GATE	equ	2422
 11281+ 000000                     _T7IE	equ	1232
 11282+ 000000                     _T7IF	equ	1104
 11283+ 000000                     _T7IP0	equ	1504
 11284+ 000000                     _T7IP1	equ	1505
 11285+ 000000                     _T7IP2	equ	1506
 11286+ 000000                     _T7ON	equ	2431
 11287+ 000000                     _T7SIDL	equ	2429
 11288+ 000000                     _T8CKPS0	equ	2516
 11289+ 000000                     _T8CKPS1	equ	2517
 11290+ 000000                     _T8CS	equ	2513
 11291+ 000000                     _T8GATE	equ	2518
 11292+ 000000                     _T8IE	equ	1235
 11293+ 000000                     _T8IF	equ	1107
 11294+ 000000                     _T8IP0	equ	1516
 11295+ 000000                     _T8IP1	equ	1517
 11296+ 000000                     _T8IP2	equ	1518
 11297+ 000000                     _T8ON	equ	2527
 11298+ 000000                     _T8SIDL	equ	2525
 11299+ 000000                     _T8T89	equ	2515
 11300+ 000000                     _T9CKPS0	equ	2532
 11301+ 000000                     _T9CKPS1	equ	2533
 11302+ 000000                     _T9CS	equ	2529
 11303+ 000000                     _T9GATE	equ	2534
 11304+ 000000                     _T9IE	equ	1236
 11305+ 000000                     _T9IF	equ	1108
 11306+ 000000                     _T9IP0	equ	1520
 11307+ 000000                     _T9IP1	equ	1521
 11308+ 000000                     _T9IP2	equ	1522
 11309+ 000000                     _T9ON	equ	2543
 11310+ 000000                     _T9SIDL	equ	2541
 11311+ 000000                     _TMODE	equ	1806
 11312+ 000000                     _TRAPR	equ	14863
 11313+ 000000                     _TRIS12	equ	5884
 11314+ 000000                     _TRIS13	equ	5885
 11315+ 000000                     _TRISA0	equ	5632
 11316+ 000000                     _TRISA1	equ	5633
 11317+ 000000                     _TRISA10	equ	5642
 11318+ 000000                     _TRISA12	equ	5644
 11319+ 000000                     _TRISA13	equ	5645
 11320+ 000000                     _TRISA14	equ	5646
 11321+ 000000                     _TRISA15	equ	5647
 11322+ 000000                     _TRISA2	equ	5634
 11323+ 000000                     _TRISA3	equ	5635
 11324+ 000000                     _TRISA4	equ	5636
 11325+ 000000                     _TRISA5	equ	5637
 11326+ 000000                     _TRISA6	equ	5638
 11327+ 000000                     _TRISA7	equ	5639
 11328+ 000000                     _TRISA9	equ	5641
 11329+ 000000                     _TRISB0	equ	5680
 11330+ 000000                     _TRISB1	equ	5681
 11331+ 000000                     _TRISB10	equ	5690
 11332+ 000000                     _TRISB11	equ	5691
 11333+ 000000                     _TRISB12	equ	5692
 11334+ 000000                     _TRISB13	equ	5693
 11335+ 000000                     _TRISB14	equ	5694
 11336+ 000000                     _TRISB15	equ	5695
 11337+ 000000                     _TRISB2	equ	5682
 11338+ 000000                     _TRISB3	equ	5683
 11339+ 000000                     _TRISB4	equ	5684
 11340+ 000000                     _TRISB5	equ	5685
 11341+ 000000                     _TRISB6	equ	5686
 11342+ 000000                     _TRISB7	equ	5687
 11343+ 000000                     _TRISB8	equ	5688
 11344+ 000000                     _TRISB9	equ	5689
 11345+ 000000                     _TRISC1	equ	5729
 11346+ 000000                     _TRISC12	equ	5740
 11347+ 000000                     _TRISC13	equ	5741
 11348+ 000000                     _TRISC14	equ	5742
 11349+ 000000                     _TRISC15	equ	5743
 11350+ 000000                     _TRISC2	equ	5730
 11351+ 000000                     _TRISC3	equ	5731
 11352+ 000000                     _TRISC4	equ	5732
 11353+ 000000                     _TRISD0	equ	5776
 11354+ 000000                     _TRISD1	equ	5777
 11355+ 000000                     _TRISD10	equ	5786
 11356+ 000000                     _TRISD11	equ	5787
 11357+ 000000                     _TRISD12	equ	5788
 11358+ 000000                     _TRISD13	equ	5789
 11359+ 000000                     _TRISD14	equ	5790
 11360+ 000000                     _TRISD15	equ	5791
 11361+ 000000                     _TRISD2	equ	5778
 11362+ 000000                     _TRISD3	equ	5779
 11363+ 000000                     _TRISD4	equ	5780
 11364+ 000000                     _TRISD5	equ	5781
 11365+ 000000                     _TRISD6	equ	5782
 11366+ 000000                     _TRISD7	equ	5783
 11367+ 000000                     _TRISD8	equ	5784
 11368+ 000000                     _TRISD9	equ	5785
 11369+ 000000                     _TRISE0	equ	5824
 11370+ 000000                     _TRISE1	equ	5825
 11371+ 000000                     _TRISE2	equ	5826
 11372+ 000000                     _TRISE3	equ	5827
 11373+ 000000                     _TRISE4	equ	5828
 11374+ 000000                     _TRISE5	equ	5829
 11375+ 000000                     _TRISE6	equ	5830
 11376+ 000000                     _TRISE7	equ	5831
 11377+ 000000                     _TRISF0	equ	5872
 11378+ 000000                     _TRISF1	equ	5873
 11379+ 000000                     _TRISF2	equ	5874
 11380+ 000000                     _TRISF3	equ	5875
 11381+ 000000                     _TRISF4	equ	5876
 11382+ 000000                     _TRISF5	equ	5877
 11383+ 000000                     _TRISF6	equ	5878
 11384+ 000000                     _TRISF7	equ	5879
 11385+ 000000                     _TRISF8	equ	5880
 11386+ 000000                     _TRISG0	equ	5920
 11387+ 000000                     _TRISG1	equ	5921
 11388+ 000000                     _TRISG12	equ	5932
 11389+ 000000                     _TRISG13	equ	5933
 11390+ 000000                     _TRISG14	equ	5934
 11391+ 000000                     _TRISG15	equ	5935
 11392+ 000000                     _TRISG2	equ	5922
 11393+ 000000                     _TRISG3	equ	5923
 11394+ 000000                     _TRISG6	equ	5926
 11395+ 000000                     _TRISG7	equ	5927
 11396+ 000000                     _TRISG8	equ	5928
 11397+ 000000                     _TRISG9	equ	5929
 11398+ 000000                     _TUN0	equ	14912
 11399+ 000000                     _TUN1	equ	14913
 11400+ 000000                     _TUN2	equ	14914
 11401+ 000000                     _TUN3	equ	14915
 11402+ 000000                     _TUN4	equ	14916
 11403+ 000000                     _TUN5	equ	14917
 11404+ 000000                     _U1EIE	equ	1249
 11405+ 000000                     _U1EIF	equ	1121
 11406+ 000000                     _U1EIP0	equ	1572
 11407+ 000000                     _U1EIP1	equ	1573
 11408+ 000000                     _U1EIP2	equ	1574
 11409+ 000000                     _U1RXIE	equ	1195
 11410+ 000000                     _U1RXIF	equ	1067
 11411+ 000000                     _U1RXIP0	equ	1356
 11412+ 000000                     _U1RXIP1	equ	1357
 11413+ 000000                     _U1RXIP2	equ	1358
 11414+ 000000                     _U1TXIE	equ	1196
 11415+ 000000                     _U1TXIF	equ	1068
 11416+ 000000                     _U1TXIP0	equ	1360
 11417+ 000000                     _U1TXIP1	equ	1361
 11418+ 000000                     _U1TXIP2	equ	1362
 11419+ 000000                     _U1_ABAUD	equ	4357
 11420+ 000000                     _U1_ADDEN	equ	4373
 11421+ 000000                     _U1_BRGH	equ	4355
 11422+ 000000                     _U1_FERR	equ	4370
 11423+ 000000                     _U1_IRDAEN	equ	4364
 11424+ 000000                     _U1_LPBACK	equ	4358
 11425+ 000000                     _U1_OERR	equ	4369
 11426+ 000000                     _U1_PDSEL0	equ	4353
 11427+ 000000                     _U1_PDSEL1	equ	4354
 11428+ 000000                     _U1_PERR	equ	4371
 11429+ 000000                     _U1_RCISEL0	equ	4374
 11430+ 000000                     _U1_RCISEL1	equ	4375
 11431+ 000000                     _U1_RIDLE	equ	4372
 11432+ 000000                     _U1_RTSMD	equ	4363
 11433+ 000000                     _U1_RXINV	equ	4356
 11434+ 000000                     _U1_SPEN	equ	4367
 11435+ 000000                     _U1_STSEL	equ	4352
 11436+ 000000                     _U1_TRMT	equ	4376
 11437+ 000000                     _U1_TXBF	equ	4377
 11438+ 000000                     _U1_TXBRK	equ	4379
 11439+ 000000                     _U1_TXEN	equ	4378
 11440+ 000000                     _U1_TXINV	equ	4382
 11441+ 000000                     _U1_TXISEL0	equ	4381
 11442+ 000000                     _U1_TXISEL1	equ	4383
 11443+ 000000                     _U1_UEN0	equ	4360
 11444+ 000000                     _U1_UEN1	equ	4361
 11445+ 000000                     _U1_URXDA	equ	4368
 11446+ 000000                     _U1_USIDL	equ	4365
 11447+ 000000                     _U1_WAKE	equ	4359
 11448+ 000000                     _U2EIE	equ	1250
 11449+ 000000                     _U2EIF	equ	1122
 11450+ 000000                     _U2EIP0	equ	1576
 11451+ 000000                     _U2EIP1	equ	1577
 11452+ 000000                     _U2EIP2	equ	1578
 11453+ 000000                     _U2RXIE	equ	1214
 11454+ 000000                     _U2RXIF	equ	1086
 11455+ 000000                     _U2RXIP0	equ	1432
 11456+ 000000                     _U2RXIP1	equ	1433
 11457+ 000000                     _U2RXIP2	equ	1434
 11458+ 000000                     _U2TXIE	equ	1215
 11459+ 000000                     _U2TXIF	equ	1087
 11460+ 000000                     _U2TXIP0	equ	1436
 11461+ 000000                     _U2TXIP1	equ	1437
 11462+ 000000                     _U2TXIP2	equ	1438
 11463+ 000000                     _U2_ABAUD	equ	4485
 11464+ 000000                     _U2_ADDEN	equ	4501
 11465+ 000000                     _U2_BRGH	equ	4483
 11466+ 000000                     _U2_FERR	equ	4498
 11467+ 000000                     _U2_IRDAEN	equ	4492
 11468+ 000000                     _U2_LPBACK	equ	4486
 11469+ 000000                     _U2_OERR	equ	4497
 11470+ 000000                     _U2_PDSEL0	equ	4481
 11471+ 000000                     _U2_PDSEL1	equ	4482
 11472+ 000000                     _U2_PERR	equ	4499
 11473+ 000000                     _U2_RCISEL0	equ	4502
 11474+ 000000                     _U2_RCISEL1	equ	4503
 11475+ 000000                     _U2_RIDLE	equ	4500
 11476+ 000000                     _U2_RTSMD	equ	4491
 11477+ 000000                     _U2_RXINV	equ	4484
 11478+ 000000                     _U2_SPEN	equ	4495
 11479+ 000000                     _U2_STSEL	equ	4480
 11480+ 000000                     _U2_TRMT	equ	4504
 11481+ 000000                     _U2_TXBF	equ	4505
 11482+ 000000                     _U2_TXBRK	equ	4507
 11483+ 000000                     _U2_TXEN	equ	4506
 11484+ 000000                     _U2_TXINV	equ	4510
 11485+ 000000                     _U2_TXISEL0	equ	4509
 11486+ 000000                     _U2_TXISEL1	equ	4511
 11487+ 000000                     _U2_UEN0	equ	4488
 11488+ 000000                     _U2_UEN1	equ	4489
 11489+ 000000                     _U2_URXDA	equ	4496
 11490+ 000000                     _U2_USIDL	equ	4493
 11491+ 000000                     _U2_WAKE	equ	4487
 11492+ 000000                     _VECNUM0	equ	1792
 11493+ 000000                     _VECNUM1	equ	1793
 11494+ 000000                     _VECNUM2	equ	1794
 11495+ 000000                     _VECNUM3	equ	1795
 11496+ 000000                     _VECNUM4	equ	1796
 11497+ 000000                     _VECNUM5	equ	1797
 11498+ 000000                     _VREGS	equ	14856
 11499+ 000000                     _WDTO	equ	14852
 11500+ 000000                     _WR	equ	15119
 11501+ 000000                     _WREN	equ	15118
 11502+ 000000                     _WRERR	equ	15117
 11503+ 000000                     _XWCOL0	equ	7936
 11504+ 000000                     _XWCOL1	equ	7937
 11505+ 000000                     _XWCOL2	equ	7938
 11506+ 000000                     _XWCOL3	equ	7939
 11507+ 000000                     _XWCOL4	equ	7940
 11508+ 000000                     _XWCOL5	equ	7941
 11509+ 000000                     _XWCOL6	equ	7942
 11510+ 000000                     _XWCOL7	equ	7943
 11511+ 000000                     _Z	equ	529
 11512+ 000D88                     align 2
 11513+ 000D88                     F9772:
 11514+ 000D88                     	ds	1
 11515+ 000D89                     align 2
 11516+ 000D8A                     F9777:
 11517+ 000D8A                     	ds	1
 11518+ 000D8B                     align 2
 11519+ 000D8C                     F9778:
 11520+ 000D8C                     	ds	1
 11521+ 000D8D                     align 2
 11522+ 000D8E                     F9779:
 11523+ 000D8E                     	ds	1


HI-TECH Software dsPIC Macro Assembler V9.60PL2                            Page 2
Symbol Table                                           Wed Jun 19 09:55:57 2013

                   _display_time 00B4A8  _gDFDisplyPrintRFToTalValueTextI 009294  
                   _get_switches 00CD90                _post_supply_volts 00C678  
                             u10 009EBE                               u11 009EBA  
                             u30 009EE4                               u22 009EC0  
                             u31 009EE0                               u40 009F04  
                             u41 009F00                               u50 009F30  
                             u51 009F2C                               u19 008531  
                             u60 009F4C                               u61 009F48  
                             u29 0085DD                               u39 0085D6  
                             u80 009F68                               u72 009F4E  
                             u49 0085AB                               u81 009F64  
                             u90 009F98                               u59 008583  
                             u91 009F86                               u69 0085C7  
                             u79 008591                               u89 008524  
                             u99 008524       _PostStartupRFCycleAdjusted 00113C  
                             _ds 001144                               _es 00119C  
               _ExitSettingsMode 00BDB2                _EnterSettingsMode 00BD56  
                            l300 00A514                              l301 00A554  
                            l310 00A628                              l302 00A556  
                            l311 00A65A                              l303 00A560  
                            l400 00B104                              l320 00A6F4  
                            l312 00A656                              l304 00A5D0  
                            l401 00B496                              l321 00A7A2  
                            l313 00A65C                              l305 00A5CC  
                            l241 009FAE                              l410 00B396  
                            l402 00B48E                              l330 00ABCC  
                            l322 00A77A                              l314 00A6F4  
                            l306 00A5D2                              l250 00A082  
                            l242 009FCA                              l411 00B396  
                            l403 00B392                              l331 00A8CA  
                            l323 00A79E                              l315 00A6EE  
                            l307 00A65C                              l235 00A0A4  
                            l251 00A09A                              l243 00A008  
                            l420 00B566                              l412 00B3C8  
                            l404 00B392                              l340 00AB0A  
                            l332 00ABCC                              l324 00A7AA  
                            l316 00A6BE                              l308 00A626  
                            l260 00A13E                              l252 00A0A4  
                            l244 009FFE                              l236 009EEE  
                            l421 00B578                              l413 00B3FA  
                            l405 00B388                              l341 00A9A6  
                            l333 00A902                              l325 00A7E4  
                            l317 00A6BA                              l309 00A622  
                            l261 00A13E                              l245 00A008  
                            l237 009F0E                              l430 00B87C  
                            l422 00B64A                              l414 00B414  
                            l406 00B384                              l254 00AC3E  
                            l350 00AB0A                              l342 00A98E  
                            l334 00ABCC                              l326 00A80C  
                            l318 00A6EA                              l270 00A20A  
                            l262 00A158                              l246 00A022  
                            l238 009F34                              l431 00B828  
                            l423 00B616                              l415 00B43A  
                            l407 00B392                              l351 00ABCC  
                            l343 00A990                              l335 00ABCC  
                            l327 00A854                              l319 00A6EA  
                            l271 00A1EA                              l263 00A158  
                            l255 00A0E2                              l247 00A062  
                            l239 009F68                              l440 00B9D6  
                            l432 00B87C                              l424 00B63E  
                            l416 00B43E                              l408 00B45A  
                            l256 00AC36                              l360 00AC16  
                            l352 00ABB6                              l344 00A9C4  
                            l336 00A958                              l328 00ABCC  
                            l280 00A3A4                              l272 00A206  
                            l264 00A1A6                              l248 00A058  
                            l441 00B9AE                              l425 00B914  
                            l433 00B8C6                              l417 00B48E  
                            l409 00B446                              l353 00AB0E  
                            l345 00A9C4                              l337 00A940  
                            l329 00A880                              l281 00A390  
                            l273 00A206                              l265 00A186  
                            l249 00A062                              l450 00BB62  
                            l442 00B9E6                              l434 00B8EC  
                            l426 00B6B2                              l418 00B578  
                            l370 00B136                              l362 00ADC0  
                            l354 00AB0E                              l346 00AB0A  
                            l338 00A942                              l290 00A488  
                            l282 00A390                              l274 00A220  
                            l266 00A1A2                              l258 00A142  
                            l451 00BA66                              l443 00B9C6  
                            l435 00B8EC                              l427 00B75E  
                            l419 00B4E0                              l371 00AEE2  
                            l363 00AC78                              l355 00AB62  
                            l347 00AAB8                              l339 00AB0A  
                            l291 00A480                              l283 00A42C  
                            l275 00A220                              l267 00A1A2  
                            l259 00A122                              l460 00BCA0  
                            l452 00BAC8                              l436 00BA32  
                            l444 00BA2E                              l428 00B902  
                            l380 00B000                              l372 00AEB4  
                            l364 00ACA6                              l356 00ABAA  
                            l348 00AA58                              l292 00A488  
                            l284 00A3EE                              l276 00A32E  
                            l268 00A1BC                              l461 00BB9A  
                            l453 00BA9C                              l445 00B9E6  
                            l437 00B958                              l429 00B7B8  
                            l373 00AEF2                              l357 00ABAA  
                            l349 00AB0A                              l293 00A4AA  
                            l285 00A428                              l277 00A32A  
                            l269 00A1BC                              l470 00BCEA  
                            l462 00BBBC                              l454 00BB62  
                            l446 00BA32                              l438 00B960  
                            l390 00B072                              l382 00AFD6  
                            l374 00AED2                              l366 00AD6A  
                            l358 00ABAE                              l294 00A4AE  
                            l286 00A428                              l278 00A2EE  
                            l471 00BCF2                              l463 00BCA0  
                            l455 00BB1A                              l447 00BA14  
                            l439 00B9AA                              l391 00B0DA  
                            l383 00AFA8                              l375 00AF18  
                            l367 00AD5E                              l359 00ABF6  
                            l295 00A4B8                              l287 00A560  
                            l279 00A32A                              l480 00BF24  
                            l472 00BD3E                              l464 00BBDC  
                            l456 00BAEE                              l448 00BA28  
                            l384 00AFE6                              l376 00AF5C  
                            l368 00ADB0                              l296 00A55E  
                            l288 00A4B6                              l481 00BED8  
                            l473 00BD2E                              l465 00BCA0  
                            l457 00BB62                              l449 00BA28  
                            l393 00B0B0                              l385 00AFC6  
                            l369 00ADC0                              l297 00A4F0  
                            l289 00A464                              l482 00BED4  
                            l474 00BD36                              l466 00BCA0  
                            l458 00BB62                              l394 00B082  
                            l386 00B042                              l378 00B12C  
                            l298 00A514                              l483 00BECC  
                            l475 00BD50                              l467 00BC44  
                            l459 00BB40                              l395 00B0C0  
                            l387 00B014                              l379 00AF9C  
                            l299 00A50C                              l484 00BED4  
                            l476 00BDAC                              l468 00BC98  
                            l396 00B0A0                              l388 00B052  
                            l485 00BF1C                              l477 00BE46  
                            l469 00BCFA                              l397 00B114  
                            l389 00B032                              l486 00BF1C  
                            l478 00BE1C                              l398 00B0E6  
                            l487 00BF14                              l479 00BE30  
                            l399 00B124                              l488 00BF1C  
                            u100 009F98                              u101 009F9C  
                            u110 009FA4                              u111 009FA0  
                            u120 009FC0                              u121 009FBC  
                            u210 00A104                              u202 00A092  
                            u130 009FE0                              u211 00A100  
                            u131 009FDC                              u300 00A1DE  
                            u220 00A116                              u140 009FF0  
                            u301 00A1DA                              u221 00A112  
                            u109 008516                              u141 009FEC  
                            u310 00A1FE                              u230 00A136  
                            u150 00A018                              u119 0085A6  
                            u311 00A1FA                              u231 00A132  
                            u151 00A014                              u400 00A27A  
                            u320 00A21A                              u240 00A152  
                            u160 00A03C                              u209 00853E  
                            u129 0085A6                              u401 00A27E  
                            u321 00A216                              u241 00A14E  
                            u161 00A038                              u410 00A282  
                            u330 00A238                              u250 00A168  
                            u170 00A04A                              u219 00854D  
                            u139 0085B4                              u411 00A28E  
                            u331 00A244                              u251 00A164  
                            u171 00A046                              u500 00A38C  
                            u420 00A28A                              u340 00A240  
                            u260 00A17A                              u180 00A078  
                            u229 008524                              u149 0085AB  
                            u501 00A388                              u421 00A28E  
                            u341 00A244                              u261 00A176  
                            u181 00A074                              u510 00A3B0  
                            u430 00A296                              u350 00A266  
                            u270 00A19A                              u190 00A090  
                            u239 0085A6                              u159 0085E1  
                            u511 00A3AC                              u431 00A292  
                            u351 00A248                              u271 00A196  
                            u191 00A08C                              u600 00A474  
                            u520 00A3BC                              u440 00A2A4  
                            u360 00A256                              u280 00A1B6  
                            u169 00859E                              u601 00A470  
                            u521 00A3D0                              u441 00A2B0  
                            u361 00A262                              u281 00A1B2  
                            u610 00A4A2                              u530 00A3CC  
                            u450 00A2AC                              u370 00A25E  
                            u290 00A1CC                              u179 00855C  
                            u611 00A49E                              u531 00A3D0  
                            u451 00A2B0                              u371 00A262  
                            u291 00A1C8                              u700 00A5DA  
                            u620 00A4CA                              u540 00A3D8  
                            u460 00A2B8                              u380 00A266  
                            u189 00856D                              u701 00A5EC  
                            u621 00A4C6                              u541 00A3D4  
                            u461 00A2B4                              u381 00A26A  
                            u710 00A5E8                              u630 00A4E4  
                            u550 00A3FA                              u470 00A2E8  
                            u390 00A26E                              u199 0085F0  
                            u711 00A5EC                              u631 00A4E0  
                            u551 00A40E                              u471 00A2E4  
                            u391 00A27E                              u800 00A698  
                            u720 00A5F4                              u640 00A500  
                            u560 00A40A                              u480 00A320  
                            u801 00A6A6                              u721 00A5F0  
                            u641 00A4FC                              u561 00A40E  
                            u481 00A31C                              u810 00A6A2  
                            u730 00A606                              u650 00A54C  
                            u570 00A416                              u490 00A340  
                            u811 00A6A6                              u731 00A602  
                            u651 00A548                              u571 00A412  
                            u491 00A33C                              u900 00A832  
                            u820 00A6AE                              u740 00A616  
                            u660 00A56E                              u580 00A43E  
                            u901 00A828                              u821 00A6AA  
                            u741 00A612                              u661 00A57A  
                            u581 00A43A                              u910 00A832  
                            u830 00A6C8                              u750 00A63A  
                            u670 00A576                              u590 00A458  
                            u911 00A836                              u831 00A6D6  
                            u751 00A636                              u671 00A57A  
                            u655 00A542                              u591 00A454  
                            u920 00A83E                              u840 00A6D2  
                            u760 00A64A                              u680 00A582  
                            u921 00A83A                              u841 00A6D6  
                            u761 00A646                              u681 00A57E  
                            u930 00A868                              u850 00A6DE  
                            u770 00A66E                              u690 00A592  
                            u931 00A85E                              u851 00A6DA  
                            u771 00A66A                              u691 00A58E  
                            u940 00A868                              u860 00A706  
                            u780 00A680                              u941 00A86C  
                            u861 00A702                              u781 00A67C  
                            u950 00A874                              u870 00A774  
                            u790 00A68E                              u951 00A870  
                            u871 00A770                              u791 00A68A  
                            u960 00A8A8                              u880 00A79C  
                            u961 00A88A                              u881 00A798  
                            u970 00A894                              u890 00A7D0  
                            u971 00A8A4                              u891 00A7CC  
                            u875 00A76A                              u980 00A8A0  
                            u981 00A8A4                              u990 00A8A8  
                            u991 00A8AC                              u895 00A7C6  
               _get_raw_switches 00CF06                              _gui 0084E2  
              _UpButtonHeldCount 000D7A                    _wait_for_20ms 00D368  
                    _TempControl 00B58A                _isDeviceConnected 00BCAA  
                           F9705 000D80                             F9715 000D56  
                           F9751 000D5A                             F9737 000D58  
                           F9729 000D84                             F9772 000D88  
                           F9773 000D5C                             F9774 0011BC  
                           F9783 000D5E                             F9775 0011C2  
                           F9776 0011C8                             F9777 000D8A  
                           F9778 000D8C                             F9779 000D8E  
            _DownButtonHeldCount 000D6C                             u1000 00A8B4  
                           u1001 00A8B0                             u1010 00A8D4  
                           u1011 00A8E4                             u1100 00A972  
                           u1020 00A8E0                             u1101 00A96E  
                           u1021 00A8E4                             u1110 00A986  
                           u1030 00A8EC                             u1111 00A982  
                           u1031 00A8E8                             u2000 00B428  
                           u1200 00AA6C                             u1120 00A9B2  
                           u1040 00A910                             u2001 00B41E  
                           u1201 00AA7C                             u1121 00A9AE  
                           u1041 00A90C                             u2010 00B428  
                           u1210 00AA78                             u1130 00A9D0  
                           u1050 00A920                             u2011 00B42C  
                           u1211 00AA7C                             u1131 00A9CC  
                           u1051 00A918                             u2100 00B6AA  
                           u2020 00B434                             u1300 00AB90  
                           u1220 00AA86                             u1140 00A9E0  
                           u1060 00A920                             u2101 00B6A6  
                           u2021 00B430                             u1301 00AB8C  
                           u1221 00AA80                             u1141 00A9DC  
                           u1061 00A924                             u2110 00B728  
                           u2030 00B47C                             u1310 00ABEC  
                           u1150 00A9EE                             u1070 00A92C  
                           u2111 00B724                             u2031 00B46C  
                           u1311 00ABE8                             u1151 00A9EA  
                           u1071 00A928                             u2200 00B9A6  
                           u2120 00B7AA                             u2040 00B47C  
                           u1400 00ACDE                             u1320 00AC0C  
                           u1240 00AAC6                             u1160 00AA10  
                           u1080 00A938                             u2201 00B9A2  
                           u2121 00B7A6                             u2041 00B480  
                           u1401 00ACE2                             u1321 00AC08  
                           u1241 00AAC2                             u1161 00AA20  
                           u1081 00A934                             u2210 00B9C2  
                           u2130 00B7D6                             u2050 00B488  
                           u1410 00ACE6                             u1330 00AC24  
                           u1250 00AB20                             u1170 00AA1C  
                           u1090 00A966                             u2211 00B9BE  
                           u2131 00B7D2                             u2051 00B484  
                           u1411 00ACEA                             u1331 00AC20  
                           u1251 00AB34                             u1171 00AA20  
                           u1091 00A962                             u2300 00BAD6  
                           u2220 00B9D4                             u2140 00B81A  
                           u2060 00B4D8                             u1500 00AD4C  
                           u1420 00ACF2                             u1260 00AB30  
                           u1236 00AA88                             u1180 00AA2A  
                           u2301 00BAD2                             u2221 00B9D0  
                           u2141 00B816                             u2061 00B4D4  
                           u1501 00AD50                             u1421 00ACEE  
                           u1261 00AB34                             u1181 00AA24  
                           u2310 00BAEC                             u2150 00B838  
                           u2070 00B54E                             u1510 00AD58  
                           u1430 00AD00                             u1350 00AC74  
                           u1342 00AC26                             u1270 00AB3C  
                           u2311 00BAE8                             u2151 00B870  
                           u2071 00B54A                             u1511 00AD54  
                           u1431 00AD50                             u1351 00AC70  
                           u1271 00AB38                             u2320 00BB28  
                           u2240 00B9E6                             u2232 00B9D6  
                           u2080 00B610                             u1600 00AEF2  
                           u1520 00AD90                             u1440 00AD20  
                           u1280 00AB74                             u2321 00BB24  
                           u2241 00B9E2                             u2081 00B60C  
                           u2065 00B4CE                             u1601 00AEEE  
                           u1521 00AD9E                             u1441 00AD16  
                           u1281 00AB88                             u2410 00BCC0  
                           u2330 00BB3E                             u2250 00B9FE  
                           u2170 00B8B8                             u2090 00B636  
                           u1610 00AF14                             u1530 00AD9A  
                           u1450 00AD20                             u1370 00ACA6  
                           u1290 00AB84                             u2411 00BCD6  
                           u2403 00BC5C                             u2331 00BB3A  
                           u2251 00B9FA                             u2171 00B8B4  
                           u2163 00B840                             u2091 00B632  
                           u2075 00B544                             u1611 00AF10  
                           u1531 00AD9E                             u1451 00AD24  
                           u1371 00ACA2                             u1355 00AC6A  
                           u1291 00AB88                             u2500 00BF08  
                           u2420 00BCD2                             u2404 00BC90  
                           u2340 00BB86                             u2260 00BA22  
                           u2180 00B8DE                             u2164 00B874  
                           u1700 00AFE6                             u1620 00AF40  
                           u1540 00ADA6                             u1460 00AD32  
                           u1380 00ACE6                             u1196 00AA2C  
                           u2501 00BF04                             u2421 00BCD6  
                           u2341 00BB82                             u2261 00BA1E  
                           u2181 00B8DA                             u2085 00B606  
                           u1701 00AFE2                             u1621 00AF3C  
                           u1541 00ADA2                             u1461 00AD28  
                           u1381 00ACB4                             u2430 00BCDE  
                           u2350 00BBB0                             u2270 00BA64  
                           u2190 00B94C                             u1710 00B000  
                           u1550 00AE9C                             u1470 00AD32  
                           u1390 00ACC8                             u1366 00AC7E  
                           u2431 00BCDA                             u2351 00BBAC  
                           u2271 00BA60                             u2191 00B948  
                           u2095 00B62C                             u1711 00AFFC  
                           u1551 00AE98                             u1471 00AD36  
                           u1391 00ACE2                             u1375 00AC9C  
                           u2440 00BD22                             u2360 00BBCA  
                           u2280 00BA84                             u1800 00B0C0  
                           u1720 00B028                             u1640 00AF5C  
                           u1632 00AF42                             u1480 00AD44  
                           u2441 00BD1E                             u2361 00BBC6  
                           u2281 00BA80                             u1801 00B0BC  
                           u1721 00B024                             u1641 00AF58  
                           u1481 00AD3A                             u2450 00BE08  
                           u2370 00BBEA                             u2290 00BA9A  
                           u1810 00B0DA                             u1730 00B040  
                           u1650 00AF7C                             u1570 00AEC8  
                           u1562 00AE9E                             u1490 00AD44  
                           u2451 00BE04                             u2371 00BBE6  
                           u2291 00BA96                             u1811 00B0D6  
                           u1731 00B03C                             u1651 00AF78  
                           u1571 00AEC4                             u1491 00AD48  
                           u2460 00BE90                             u2380 00BC36  
                           u1900 00B35E                             u1820 00B0FA  
                           u1660 00AF98                             u1580 00AEE0  
                           u2461 00BE8C                             u2381 00BC32  
                           u1901 00B372                             u1821 00B0F6  
                           u1661 00AF94                             u1581 00AEDC  
                           u2470 00BEA8                             u2390 00BC54  
                           u1910 00B36E                             u1830 00B112  
                           u1750 00B052                             u1742 00B042  
                           u1670 00AFBC                             u2471 00BEA4  
                           u2455 00BDFE                             u2391 00BC8C  
                           u1911 00B372                             u1831 00B10E  
                           u1751 00B04E                             u1671 00AFB8  
                           u2480 00BEC0                             u1920 00B37A  
                           u1760 00B06E                             u1680 00AFD4  
                           u1592 00AEE2                             u2481 00BEBC  
                           u1921 00B376                             u1761 00B06A  
                           u1681 00AFD0                             u2490 00BEF0  
                           u1930 00B3B6                             u1850 00B124  
                           u1842 00B114                             u1770 00B096  
                           u2491 00BEEC                             u1931 00B3A6  
                           u1851 00B120                             u1771 00B092  
                           u1940 00B3B6                             u1860 00B200  
                           u1780 00B0AE                             u1692 00AFD6  
                           u1941 00B3BA                             u1861 00B1FC  
                           u1781 00B0AA                             u1950 00B3C2  
                           u1870 00B31A                             u1951 00B3BE  
                           u1871 00B316                             u1960 00B3E8  
                           u1880 00B334                             u1792 00B0B0  
                           u1961 00B3D8                             u1881 00B330  
                           u1970 00B3E8                             u1890 00B34A  
                           u1971 00B3EC                             u1891 00B346  
                           u1980 00B3F4                             u1981 00B3F0  
                           u1990 00B40E                             u1991 00B40A  
                           _main 009EA8                             aldiv 00FB62  
                           almul 00FB96                             _tone 00CBDE  
                           lldiv 00FAEC                             llmod 00FB40  
                           llmul 00FB96           _gDFDisplyPrintTextItem 0098D6  
                           start 00828C                _imp_pulse_measure 00BB6C  
                     _RFCycleSPS 001138                         _ram_test 00D6B8  
                     _RFCycleSet 000D76                         _ntc_comp 000D7E  
        _gDFDisplyPrintErrorItem 008896                            f34100 00BE58  
                          f34020 00BB70                            f34101 00BF28  
                          f34021 00BCA4                            f34040 00BCAE  
                          f34041 00BCFE  _gDFDisplyDoesGraphicDisplayHave 0087C6  
                          f34106 FFFFFFF6  
                          f34050 00BD08                            f34026 FFFFFFF0  
                       _post_spi 00C862                            f34051 00BD42  
                          f34060 00BD4C                            f34061 00BD52  
                          f34070 00BD5A                            f34046 FFFFFFFC  
                          f34071 00BDAE                            f34056 FFFFFFFA  
                          f34090 00BDB6                            f33530 00A0B4  
                          f33370 009EAC                            f34091 00BE4C  
                          f33531 00AC42                            f33371 00A0AA  
                          f33536 FFFFFFDE  
                          f33376 FFFFFFFA  
                          f33810 00B660                            f33730 00B144  
                          f33811 00B918                            f33731 00B49E  
                          f33900 00BA40                            f33660 00AC4C  
                          f33901 00BB66                            f33661 00ADC4  
                          f33750 00B4AC                            f33751 00B580  
                          f33816 FFFFFFEA  
                          f33760 00B58E                            f33736 FFFFFFFA  
                          f33680 00ADCE                            f33761 00B652  
                          f33681 00B13A                            f33906 FFFFFFF8  
                          f33666 FFFFFFF2  
                          f33756 FFFFFFF8  
                          f33870 00B922                            f33766 FFFFFFF2  
                          f33686 FFFFFFF0  
                          f33871 00BA36                            f33876 FFFFFFF4  
                          u1366e 00AC88  _gDFDisplySetProgrammableButtons 009C52  
                _SetPowerSetting 00BD48        _gDFDisplyPrintGraphicItem 008A06  
                     _write_LEDs 00CF94                       _ablate_bad 00B140  
    _gDFDisplyPrintRFGraphicItem 009224              _CycleButtonReleased 00113E  
               _RFCycleSPSPreset 00113A                     _read_SPI_ADC 00C994  
                  _ablate_powers 008504  _gDFDisplyPrintRFCycleValueTextI 00911C  
              _FlashRFCycleCount 000D6E                   _start_sequence 00ADCA  
                    _convert_ntc 00D40A                          _hw_init 00CFB8  
               _RFCycleEraseOnly 000D74  _gDFDisplyPrintCyclesValueTextIt 008800  
                  _fault_routine 00B91E                          _ntc_avg 000D7C  
       _DeviceDisconnectReported 000D6A                          _post_rf 00BFF2  
                        _tonechk 00AC48    _gDFDisplyDisableRFGraphicItem 0087A6  
                   _SettingsMode 001140             _ResetButtonHeldCount 000D78  
                      _write_DAC 00CB1E                  _get_temperature 00BA3C  
                    _read_RF_ADC 00C9F6                           _Cycles 000D66  
           _CycleButtonHeldCount 000D62                _isImpedanceTooLow 00BD04  
                     _get_status 00CF58                     _ablate_ramps 008510  
                         _Screen 001142                  _RFCycleAdjusted 000D72  
                   _ablate_temps 00850A                     _ablate_power 00B65C  
_gDFDisplyProcessDisplayRequests 009B6C  _CycleSwitchHeldAtExpirationCoun 000D64  
                         _crcchk 00DF4E                      _read_eeprom 00D116  
                  _gDFDisplyInit 0082AC  _CycleButtonHeldAtExpirationCoun 000D60  
          _DeviceConnectReported 000D68                      _ablate_loop 00A0B0  
_gDFDisplyPrintTemperatureValues 009356                      _calc_median 00BE54  
                   _powercontrol 00BF2E               _convert_to_degrees 00D384  
_gDFDisplyPrintPowerValueTextIte 009070           _PriorFlashRFCycleCount 000D70  
_gDFDisplyPrintImpedanceGraphicI 008B2C  
